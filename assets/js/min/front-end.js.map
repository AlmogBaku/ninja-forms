{"version":3,"sources":["../lib/almond.js","models/formModel.js","models/formCollection.js","models/fieldErrorModel.js","models/fieldErrorCollection.js","models/fieldModel.js","models/fieldCollection.js","models/formErrorModel.js","models/formErrorCollection.js","controllers/formData.js","controllers/fieldError.js","controllers/changeField.js","controllers/changeEmail.js","controllers/fieldCheckbox.js","controllers/fieldCheckboxList.js","controllers/fieldRadio.js","controllers/fieldNumber.js","controllers/mirrorField.js","controllers/confirmField.js","controllers/updateFieldModel.js","controllers/submitButton.js","controllers/submitInit.js","controllers/getFormErrors.js","models/fileModel.js","models/fileCollection.js","views/fileItem.js","views/fileCollection.js","controllers/selectFile.js","controllers/validateRequired.js","controllers/submitError.js","controllers/actionRedirect.js","controllers/actionSuccess.js","controllers/fieldSelect.js","controllers/coreSubmitResponse.js","controllers/fieldProduct.js","controllers/fieldTotal.js","controllers/fieldQuantity.js","models/calcModel.js","models/calcCollection.js","controllers/calculations.js","controllers/fieldDate.js","controllers/fieldRecaptcha.js","controllers/helpText.js","controllers/fieldTextareaRTE.js","controllers/fieldStarRating.js","controllers/fieldContentsFilters.js","views/fieldItem.js","views/beforeField.js","views/fieldErrorItem.js","views/fieldErrorCollection.js","views/inputLimit.js","views/afterField.js","views/fieldLayout.js","controllers/loadViews.js","controllers/loadControllers.js","views/beforeForm.js","views/fieldCollection.js","views/afterFields.js","views/beforeFields.js","views/formLayout.js","views/afterForm.js","views/formErrorItem.js","views/formErrorCollection.js","views/mainLayout.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","model","Backbone","Model","extend","defaults","beforeForm","afterForm","beforeFields","afterFields","wrapper_class","element_class","initialize","that","this","_","each","get","setting","set","nfRadio","channel","reply","getFieldByKey","addError","removeError","trigger","key","findWhere","msg","errors","add","errorModel","remove","formModel","collection","Collection","fieldErrorCollection","placeholder","label_pos","classes","reRender","mirror_field","confirm_field","clean","disabled","options","listenTo","resetModel","bind","changeModel","changeValue","formLoaded","addWrapperClass","cl","removeWrapperClass","fieldModel","comparator","models","FormModel","FormCollection","FieldCollection","ErrorCollection","controller","Marionette","formCollection","nfForms","form","fields","getForm","getForms","getField","fieldErrorModel","getError","targetID","request","targetError","changeField","blurField","el","val","radioChannel","emailReg","errorID","errorMsg","onChangeModelValue","emailKeyup","onBlurField","fieldID","emailChange","keyCode","validateRequired","beforeUpdateField","getCalcValue","checked","attr","addClass","removeClass","calcValue","register","renderOptions","renderOtherText","selected","filter","opt","html","valueFound","option","currentValue","template","show_other","data","calc_value","tmp_opt","find","math","calc","clone","changeModelValue","updateCheckedClass","maybeMinDefault","validateMinMax","min","$el","parseInt","max","step","listeningModel","registerMirror","targetModel","registerConfirm","confirmKeyup","confirmModel","confirmID","compareValue","confirmValue","updateField","formChannel","allFieldsChannel","thisFieldChannel","updateSubmit","submitForm","disableSubmit","enableSubmit","processingLabel","formEl","hpVal","trim","resetLabel","formErrors","closest","show","field","formData","JSON","stringify","action","security","nfFrontEnd","ajaxNonce","ajax","url","adminAjax","type","cache","success","textStatus","jqXHR","response","parseJSON","error","errorThrown","console","log","label","submitButton","registerSubmit","maybeRenderError","formID","getFormErrors","fileModel","view","ItemView","tagName","onRender","children","unwrap","setElement","append","fileItem","CollectionView","childView","fileCollection","fileCollectionView","initFile","renderView","renderFileInput","changeFile","clickFileButton","fieldView","thisModel","changeCollection","render","hasClass","click","filename","files","slug","trimmed","fileInput","fileInputClone","off","replaceWith","validateKeyup","validateModelData","customReqValidation","defaultReqValidation","maskPlaceholder","valid","maybeError","submitErrors","size","actionRedirect","halt","redirect","window","location","actions","actionSubmit","success_message","renderOtherAttributes","otherAttributes","settings","clear_complete","form_id","reset","hide_complete","hide","renderProductQuantity","renderProduct","product_type","product_use_quantity","totalModel","productTotals","registerShipping","onFormLoaded","onChangeProduct","onChangeQuantity","shippingModel","shippingCost","fieldModels","productFields","quantityFields","productID","product","productPrice","Number","updateTotal","productQuantity","newTotal","productField","quantity","toFixed","registerQuantity","on","changeCalc","targetCalcModel","CalcModel","CalcCollection","calcs","displayFields","registerCalcs","use_merge_tags","calculations","fieldType","initDisplayField","updateDisplayFields","init","calcCollection","calcModel","setupCalc","eq","eqValues","match","RegExp","updateCalcFields","replaceKey","eval","isNumeric","re","replaceAllKeys","calcName","getCalc","initDatepicker","dateObject","pikadayResponsive","format","setDate","moment","initRecaptcha","updateResponse","initHelpText","jBox","theme","content","initTextareaRTEs","clickExtra","meta_image_frame","summernote","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","caret","close","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","currentContext","linkButton","context","mediaButton","toolbar","userSettings","uid","buttons","height","codemirror","lineNumbers","prettifyHtml","callbacks","onChange","ui","linkDropdown","buttonGroup","button","className","contents","tooltip","clickLinkButton","toggle","dropdown","openMediaManager","invoke","open","wp","media","frames","title","text","media_attachment","state","first","toJSON","insertMedia","range","toString","target","parent","focus","textEl","urlEl","isNewWindowEl","isNewWindow","initRating","renderRatings","rating","num","viewFilters","loadFilters","addViewFilter","addLoadFilter","getViewFilters","getLoadFilters","priority","maybeRender","changeError","onBeforeDestroy","silent","mask","isInteger","templateHelpers","renderElement","setPlaceholder","setClasses","tmpl","element_templates","renderLabel","renderPlaceholder","renderWrapClass","wrapClass","old_classname","maybeDisabled","disable_input","maybeDisableAutocomplete","disable_browser_autocomplete","maybeInputLimit","input_limit_type","input_limit","getHelpText","help_text","maybeRenderHelp","check_text","renderDescText","desc_text","maybeChecked","default_value","events","change .nf-element","keyup .nf-element","click .nf-element","click .extra","blur .nf-element","fieldChange","currentTarget","fieldKeyup","fieldClick","extraClick","fieldBlur","fieldErrorItem","updateCount","count","regex","words","wordCount","charCount","limit","currentCount","InputLimitView","errorEl","errorCollectionView","inputLimitEl","inputLimitView","fieldItem","beforeField","afterField","LayoutView","regions","onShow","fieldItemView","fieldLayoutView","getFieldItem","getFieldLayout","FormData","FieldError","ChangeField","ChangeEmail","FieldCheckbox","FieldCheckboxList","FieldRadio","FieldNumber","MirrorField","ConfirmField","UpdateFieldModel","SubmitInit","GetFormErrors","SelectFile","ValidateRequired","SubmitError","ActionRedirect","ActionSuccess","FieldSelect","CoreSubmitResponse","FieldProduct","FieldTotal","FieldQuantity","Calculations","FieldDate","FieldRecaptcha","HelpText","FieldTextareaRTE","FieldStarRating","FieldContentsFilters","LoadViews","fieldLayout","fieldCollectionView","getEl","fieldContentsData","fieldContentsView","fieldContentsViewFilters","sortedArray","without","fieldContentsLoadFilters","fieldCollection","renderClasses","formErrorItem","BeforeForm","FormLayout","AfterForm","FormErrors","responseMsg","formLayout","document","ready","$","LoadControllers","mainLayout","NinjaForms","Application","forms","resumeProcessing","onStart","layoutView","ninjaForms","start"],"mappings":"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AK,GAEAC,QAAAC,IAAA,WAAAP,GAGAlJ,QAAAC,QAAA,UAAAK,QAAA,kBAAA,QAAA4I,EAAAC,EAAAI,MAKA,GAAAoV,EACA3e,SAAAC,QAAA,OAAAK,QAAA,0BAGA2e,QAAA,WACA,GAAApc,GAAA7C,QAAAC,QAAA,OAAAsD,QAAA,YACA5D,GAAAC,KAAAiD,EAAAP,OAAA,SAAAS,EAAAlG,GACA,GAAAqiB,GAAA,GAAAN,IAAA/f,MAAAkE,EAAAgb,gBAAAhb,EAAAlD,IAAA,WACAG,SAAAC,QAAA,QAAAK,QAAA,cAAA4e,QAKAC,EAAA,GAAAN,EACAM,GAAAC,YAGAlmB,EAAA,OAAA;AhEnjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;ACLA,ADMA;ACLA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;AACA,ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;ACLA,ADMA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA,ADqEA;ACphEA,ADiEA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxpzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;AACA,ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA,ADqFA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACllHA,ADmHA;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnjHA,ADkHA;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACplOA,ADmOA;AClOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA,AD8BA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACljQA,ADkQA;ACjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA,AD+CA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA,AD8BA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA,AD8BA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA,ADSA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"front-end.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","define( 'models/formModel',[], function() {\n\tvar model = Backbone.Model.extend({\n\t\tdefaults: {\n\t\t\tbeforeForm: '',\n\t\t\tafterForm: '',\n\t\t\tbeforeFields: '',\n\t\t\tafterFields: '',\n\t\t\twrapper_class: '',\n\t\t\telement_class: ''\n\t\t},\n\n\t\tinitialize: function() {\n\n\t\t\t/*\n\t\t\t * Loop over settings and map to attributes\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t_.each( this.get( 'settings' ), function( value, setting ) {\n\t\t\t\tthat.set( setting, value );\n\t\t\t});\n\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:fieldByKey', this.getFieldByKey, this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:error', this.addError, this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:error', this.removeError, this );\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'init:model', this );\n\t\t},\n\n\t\tgetFieldByKey: function( key ) {\n\t\t\treturn this.get( 'fields' ).findWhere( { key: key } );\n\t\t},\n\n\t\taddError: function( id, msg ) {\n\t\t\tvar errors = this.get( 'errors' );\n\t\t\terrors.add( { id: id, msg: msg } );\n\t\t},\n\n\t\tremoveError: function( id ) {\n\t\t\tvar errors = this.get( 'errors' );\n\t\t\tvar errorModel = errors.get( id );\n\t\t\terrors.remove( errorModel );\n\t\t}\n\t} );\n\n\treturn model;\n} );\n","define( 'models/formCollection',['models/formModel'], function( formModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: formModel\n\t} );\n\treturn collection;\n} );\n","define( 'models/fieldErrorModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/fieldErrorCollection',['models/fieldErrorModel'], function( errorModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: errorModel\n\t} );\n\treturn collection;\n} );\n","define( 'models/fieldModel',['models/fieldErrorCollection'], function( fieldErrorCollection ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tplaceholder: '',\n\t\t\tvalue: '',\n\t\t\tlabel_pos: '',\n\t\t\tclasses: 'ninja-forms-field',\n\t\t\treRender: false,\n\t\t\tmirror_field: false,\n\t\t\tconfirm_field: false,\n\t\t\tclean: true,\n\t\t\tdisabled: ''\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'reset', this.resetModel );\n\n    \t\tthis.bind( 'change', this.changeModel, this );\n    \t\tthis.bind( 'change:value', this.changeValue, this );\n    \t\tthis.set( 'errors', new fieldErrorCollection() );\n\n    \t\t/*\n\t\t\t * Trigger an init event on two channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:model', this );\n\n\t\t\t/*\n\t\t\t * When we load our form, fire another event for this field.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'loaded', this.formLoaded );\n\t\t},\n\n\t\tresetModel: function() {\n\t\t\t/*\n\t\t\t * Trigger an init event on two channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\t// nfRadio.channel( 'fields' ).trigger( 'init:model', this );\n\t\t\t// nfRadio.channel( this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t\t// nfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t},\n\n\t\tchangeModel: function() {\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:model', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:model', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:model', this );\n\t\t},\n\n\t\tchangeValue: function() {\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:modelValue', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:modelValue', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:modelValue', this );\n\t\t},\n\n\t\taddWrapperClass: function( cl ) {\n\t\t\tthis.set( 'addWrapperClass', cl );\n\t\t},\n\n\t\tremoveWrapperClass: function( cl ) {\n\t\t\tthis.set( 'removeWrapperClass', cl );\n\t\t},\n\n\t\tformLoaded: function() {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'formLoaded', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'formLoaded', this );\n\t\t}\n\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/fieldCollection',['models/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'models/formErrorModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/formErrorCollection',['models/formErrorModel'], function( errorModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: errorModel\n\t} );\n\treturn collection;\n} );\n","/*\n * Handles setting up our form.\n *\n * Holds a collection of our fields.\n * Replies to requests for field data.\n * Updates field models.\n */\ndefine('controllers/formData',['models/formModel', 'models/formCollection', 'models/fieldCollection', 'models/formErrorCollection'], function( FormModel, FormCollection, FieldCollection, ErrorCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Setup our field collections.\n\t\t\t */\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Initialize our form collection (incase we have multiple forms on the page)\n\t\t\t */\n\t\t\tthis.formCollection = new FormCollection();\n\n\t\t\t_.each( nfForms, function( form, index ) {\n\t\t\t\tvar formModel = new FormModel( form );\n\t\t\t\tthat.formCollection.add( formModel );\n\t\t\t\tvar fields = new FieldCollection( form.fields, { formModel: formModel } );\n\t\t\t\tformModel.set( 'fields', fields );\n\t\t\t\tformModel.set( 'loadedFields', form.fields );\n\t\t\t\tvar errors = new ErrorCollection();\n\t\t\t\tformModel.set( 'errors', errors );\n\t\t\t\tnfRadio.channel( 'form' ).trigger( 'loaded', formModel );\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'loaded', formModel );\n\t\t\t} );\n\n\t\t\t// _.each( this.formCollection.models, function( form ) {\n\t\t\t// \t_.each( form.get( 'fields' ).models, function( field ) {\n\t\t\t// \t\tnfRadio.channel( field.get( 'type' ) ).trigger( 'init:model', field );\n\t\t\t// \t\tnfRadio.channel( 'fields' ).trigger( 'init:model', field );\n\t\t\t// \t} );\n\t\t\t\t\n\t\t\t// \tnfRadio.channel( 'form' ).trigger( 'loaded', form );\n\t\t\t// \tnfRadio.channel( 'form-' + form.get( 'id' ) ).trigger( 'loaded', form );\n\t\t\t// } );\n\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:form', this.getForm, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:forms', this.getForms, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t},\n\n\t\tgetForm: function( id ) {\n\t\t\treturn this.formCollection.get( id );\n\t\t},\n\n\t\tgetForms: function() {\n\t\t\treturn this.formCollection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\tvar model = false;\n\t\t\t_.each( this.formCollection.models, function( form ) {\n\t\t\t\tif ( ! model ) {\n\t\t\t\t\tmodel = form.get( 'fields' ).get( id );\t\n\t\t\t\t}\t\t\t\n\t\t\t} );\n\t\t\treturn model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldError',['models/fieldErrorModel'], function( fieldErrorModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add:error', this.addError );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:error', this.removeError );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:error', this.getError );\n\t\t},\n\n\t\taddError: function( targetID, id, msg ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\terrors.add( { 'id': id, 'msg' : msg } );\n\t\t\tmodel.set( 'errors', errors );\n\t\t\tmodel.trigger( 'change:errors', model );\n\t\t\tmodel.set( 'clean', false );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:error', model, id, msg );\n\t\t},\n\n\t\tremoveError: function( targetID, id ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\n\t\t\tif( 'undefined' == typeof model ) return;\n\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\tvar targetError = errors.get( id );\n\t\t\tif ( 'undefined' != targetError ) {\n\t\t\t\terrors.remove( targetError );\n\t\t\t\tmodel.set( 'errors', errors );\n\t\t\t\tmodel.trigger( 'change:errors', model );\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'remove:error', model, id );\n\t\t\t}\n\t\t},\n\n\t\tgetError: function( targetID, id ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\tvar targetError = errors.get( id );\n\t\t\tif ( 'undefined' != targetError ) {\n\t\t\t\treturn targetError;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Controller responsible for replying to a Radio request stating that a field has been changed.\n *\n * This controller sends out a message to the field-specific channel, the field type channel,\n * and the public fields channel so that the data model can be updated.\n */\n\ndefine('controllers/changeField',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Reply to our request for changing a field.\n\t\t\t */\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'change:field', this.changeField );\n\n\t\t\t/*\n\t\t\t * If we blur our field, set the model attribute of 'clean' to false.\n\t\t\t * 'clean' tracks whether or not the user has every interacted with this element.\n\t\t\t * Some validation, like required, uses this to decide whether or not to add an error.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.blurField );\n\t\t},\n\n\t\tchangeField: function( el, model ) {\n\t\t\t// Get our current value.\n\t\t\tvar value = nfRadio.channel( model.get( 'type' ) ).request( 'before:updateField', el, model );\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : nfRadio.channel( model.get( 'parentType' ) ).request( 'before:updateField', el, model );\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : jQuery( el ).val();\n\n\t\t\t// Set our 'isUpdated' flag to false.\n\t\t\tmodel.set( 'isUpdated', false );\n\n\t\t\t// Set our 'clean' flag to false.\n\t\t\tmodel.set( 'clean', false );\n\n\t\t\t/*\n\t\t\t * Send out a message saying that we've changed a field.\n\t\t\t * The first channel is field id/key specific.\n\t\t\t * The second channel is the field type, i.e. text, email, radio\n\t\t\t * The third channel is a generic 'field' channel.\n\t\t\t *\n\t\t\t * If the submitted value you wish to store in the data model isn't the same as the value received above,\n\t\t\t * you can set that model in the actions below and set the 'isUpdated' model attribute to true.\n\t\t\t * i.e. model.set( 'isUpdated', true );\n\t\t\t */\n\t\t\tnfRadio.channel( 'field-' + model.get( 'id' ) ).trigger( 'change:field', el, model );\n\t\t\tnfRadio.channel( model.get( 'type' ) ).trigger( 'change:field', el, model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:field', el, model );\n\n\t\t\t/*\n\t\t\t * Send a request out on our nfAdmin channel to update our field model.\n\t\t\t * If the field model has a 'isUpdated' property of false, nothing will be updated.\n\t\t\t */\n\t\t\tnfRadio.channel( 'nfAdmin' ).request( 'update:field', model, value );\n\t\t},\n\n\t\tblurField: function( el, model ) {\n\t\t\t// Set our 'clean' flag to false.\n\t\t\tmodel.set( 'clean', false );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/changeEmail',[], function() {\n\tvar radioChannel = nfRadio.channel( 'email' );\n\tvar emailReg = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\tvar errorID = 'invalid-email';\n\tvar errorMsg = 'Please enter a valid email address!';\n\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'change:modelValue', this.onChangeModelValue );\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.emailKeyup );\n\t\t\tthis.listenTo( radioChannel, 'blur:field', this.onBlurField );\n\t\t},\n\n\t\tonChangeModelValue: function( model ) {\n\t\t\tvar value = model.get( 'value' );\n\t\t\tvar fieldID = model.get( 'id' );\n\t\t\tthis.emailChange( value, fieldID );\n\t\t},\n\n\t\tonBlurField: function( el, model ) {\n\t\t\tvar value = jQuery( el ).val();\n\t\t\tvar fieldID = model.get( 'id' );\n\t\t\tthis.emailChange( value, fieldID );\n\t\t},\n\n\t\temailChange: function( value, fieldID ) {\n\t\t\tif ( 0 < value.length ) {\n\t\t\t\tif( emailReg.test( value ) ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t\t} else {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, errorMsg );\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a user types inside of an email field, track their keypresses and add the appropriate class.\n\t\t * If the value validates as an email, add a class of nf-pass\n\t\t * If the value does not validate as email, add a class of nf-fail\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  {object} el    Element that triggered the keyup event.\n\t\t * @param  {object} model Model connected to the element that triggered the event\n\t\t * @return {void}\n\t\t */\n\t\temailKeyup: function( el, model, keyCode ) {\n\t\t\t/*\n\t\t\t * If we pressed the 'tab' key to get to this field, return false.\n\t\t\t */\n\t\t\tif ( 9 == keyCode ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Get the current value from our element.\n\t\t\t */\n\t\t\tvar value = jQuery( el ).val();\n\n\t\t\t/*\n\t\t\t * Get our current ID\n\t\t\t */\n\t\t\tvar fieldID = model.get( 'id' );\n\n\t\t\t/*\n\t\t\t * Check our value to see if it is a valid email.\n\t\t\t */\n\t\t\t\n\t\t\tif ( 0 == value.length ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t} else if ( ! emailReg.test( value ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, errorMsg );\n\t\t\t} else if ( emailReg.test( value ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldCheckbox',[], function() {\n\tvar radioChannel = nfRadio.channel( 'checkbox' );\n\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tradioChannel.reply( 'validate:required', this.validateRequired );\n            nfRadio.channel( 'checkbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'checkbox' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t},\n\n\t\tbeforeUpdateField: function( el, model ) {\n\t\t\tvar checked = jQuery( el ).attr( 'checked' );\n\t\t\tif ( checked ) {\n\t\t\t\tvar value = 1;\n\t\t\t\tjQuery( el ).addClass( 'nf-checked' );\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t\tjQuery( el ).removeClass( 'nf-checked' );\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\tvalidateRequired: function( el, model ) {\n\t\t\treturn el[0].checked;\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tif ( 1 == fieldModel.get( 'value' ) ) {\n\t\t\t\tcalcValue = fieldModel.get( 'checked_calc_value' );\n\t\t\t} else {\n\t\t\t\tcalcValue = fieldModel.get( 'unchecked_calc_value' );\n\t\t\t}\n\n\t\t\treturn calcValue;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldCheckboxList',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'listcheckbox' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\n            nfRadio.channel( 'listcheckbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'terms' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'listcheckbox' ).reply( 'get:calcValue', this.getCalcValue, this );\n            nfRadio.channel( 'terms' ).reply( 'get:calcValue', this.getCalcValue, this );\n        },\n\n        register: function( model ) {\n            model.set( 'renderOptions', this.renderOptions );\n            model.set( 'renderOtherText', this.renderOtherText );\n            model.set( 'selected', [] );\n\n            /*\n             * When we init a model, we need to set our 'value' to the selected option's value.\n             * This is the list equivalent of a 'default value'.\n             */ \n            if ( 0 != model.get( 'options' ).length ) {\n                var selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n                selected = _.map( selected, function( opt ) { return opt.value } );\n                model.set( 'value', selected );\n            }\n\n        },\n\n        renderOptions: function() {\n            var that = this;\n            var html = '';\n            if ( '' == this.value ) {\n                var valueFound = true;\n            } else {\n                var valueFound = false;\n            }\n\n            _.each( this.options, function( option, index ) {\n                if ( option.value == that.value ) {\n                    valueFound = true;\n                }\n\n                option.fieldID = that.id;\n                option.classes = that.classes;\n                option.currentValue = that.value;\n                option.index = index;\n\n                if( option.selected ){\n                    that.selected.push( option.value );\n                }\n\n                var template = _.template( jQuery( '#nf-tmpl-field-listcheckbox-option' ).html() );\n\n                html += template( option );\n            } );\n\n            if ( 1 == this.show_other ) {\n                if ( 'nf-other' == this.value ) {\n                    valueFound = false;\n                }\n                var data = {\n                    fieldID: this.id,\n                    classes: this.classes,\n                    currentValue: this.value,\n                    renderOtherText: this.renderOtherText,\n                    valueFound: valueFound\n                };\n\n                var template = _.template( jQuery( '#nf-tmpl-field-listcheckbox-other' ).html() );\n                html += template( data );\n\n            }\n\n            return html;\n        },\n\n        renderOtherText: function() {\n            if ( 'nf-other' == this.currentValue || ! this.valueFound ) {\n                if ( 'nf-other' == this.currentValue ) {\n                    this.currentValue = '';\n                }\n                var data = {\n                    fieldID: this.fieldID,\n                    classes: this.classes,\n                    currentValue: this.currentValue\n                };\n                var template = _.template( jQuery( '#nf-tmpl-field-listcheckbox-other-text' ).html() );\n                return template( data );\n            }\n        },\n\n        getCalcValue: function( fieldModel ) {\n            var calc_value = 0;\n            var options = fieldModel.get( 'options' );\n            if ( 0 != options.length ) {\n                _.each( fieldModel.get( 'value' ), function( val ) {\n                    var tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\n                    calc_value = math.add( calc_value, tmp_opt.calc );\n                } );\n            }\n            return calc_value;\n        },\n\n        beforeUpdateField: function( el, model ) {\n            var selected = model.get( 'selected' ) || [];\n            if ( typeof selected == 'string' ) selected = [ selected ];\n\n            var value = jQuery( el).val();\n            var checked = jQuery( el ).attr( 'checked' );\n            if ( checked ) {\n                selected.push( value );\n                jQuery( el ).addClass( 'nf-checked' );\n            } else {\n                jQuery( el ).removeClass( 'nf-checked' );\n                var i = selected.indexOf( value );\n                if( -1 != i ){\n                    selected.splice( i, 1 );\n                }\n            }\n\n            model.set( 'selected', selected );\n\n            if ( 1 == model.get( 'show_other' ) ) {\n                model.set( 'reRender', true );\n            }\n\n            return _.clone( selected );\n        }\n    });\n\n    return controller;\n} );\n","define('controllers/fieldRadio',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:modelValue', this.changeModelValue );\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'init:model', this.register );\n\t\t\tnfRadio.channel( 'listradio' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:field', this.updateCheckedClass, this );\n\t\t},\n\n\t\tregister: function( model ) {\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\n\t\t\tmodel.set( 'renderOtherText', this.renderOtherText );\n\t\t\t/*\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\n\t\t\t * This is the list equivalent of a 'default value'.\n\t\t\t */ \n\t\t\tif ( 0 != model.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t */\n\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t/*\n\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t */\n\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\tselected = model.get( 'options' )[0];\n\t\t\t\t}\n\n\t\t\t\tmodel.set( 'value', selected.value );\n\t\t\t}\n\t\t},\n\n\t\tchangeModelValue: function( model ) {\n\t\t\tif ( 1 == model.get( 'show_other' ) ) {\n\t\t\t\tmodel.set( 'reRender', true );\n\t\t\t}\n\t\t},\n\n\t\trenderOptions: function() {\n\t\t\tvar that = this;\n\t\t\tvar html = '';\n\t\t\tif ( '' == this.value ) {\n\t\t\t\tvar valueFound = true;\n\t\t\t} else {\n\t\t\t\tvar valueFound = false;\n\t\t\t}\n\t\t\t\n\t\t\t_.each( this.options, function( option ) {\n\t\t\t\tif ( option.value == that.value ) {\n\t\t\t\t\tvalueFound = true;\n\t\t\t\t}\n\n\t\t\t\toption.fieldID = that.id;\n\t\t\t\toption.classes = that.classes;\n\t\t\t\toption.currentValue = that.value;\n\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-listradio-option' ).html() );\n\t\t\t\thtml += template( option );\n\t\t\t} );\n\n\t\t\tif ( 1 == this.show_other ) {\n\t\t\t\tif ( 'nf-other' == this.value ) {\n\t\t\t\t\tvalueFound = false;\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\tfieldID: this.id,\n\t\t\t\t\tclasses: this.classes,\n\t\t\t\t\tcurrentValue: this.value,\n\t\t\t\t\trenderOtherText: this.renderOtherText,\n\t\t\t\t\tvalueFound: valueFound\n\t\t\t\t};\n\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-listradio-other' ).html() );\n\t\t\t\thtml += template( data );\n\n\t\t\t}\n\n\t\t\treturn html;\n\t\t},\n\n\t\trenderOtherText: function() {\n\t\t\tif ( 'nf-other' == this.currentValue || ! this.valueFound ) {\n\t\t\t\tif ( 'nf-other' == this.currentValue ) {\n\t\t\t\t\tthis.currentValue = '';\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\tfieldID: this.fieldID,\n\t\t\t\t\tclasses: this.classes,\n\t\t\t\t\tcurrentValue: this.currentValue\n\t\t\t\t};\n\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-listradio-other-text' ).html() );\n\t\t\t\treturn template( data );\n\t\t\t}\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tvar calc_value = 0;\n\t\t\tif ( 0 != fieldModel.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t */\n\t\t\t\tvar selected = _.find( fieldModel.get( 'options' ), function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\n\t\t\t\t/*\n\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t */\n\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\n\t\t\t\t}\n\n\t\t\t\tvar calc_value = selected.calc;\n\t\t\t}\n\t\t\treturn calc_value;\n\t\t},\n\n\t\tupdateCheckedClass: function( el, model ) {\n\t\t\tvar name = jQuery( el ).attr( 'name' );\n\t\t\tjQuery( '[name=\"' + name + '\"]' ).removeClass( 'nf-checked' );\n\t\t\tjQuery( el ).addClass( 'nf-checked' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldNumber',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'number' ), 'init:model', this.maybeMinDefault );\n            this.listenTo( nfRadio.channel( 'number' ), 'keyup:field', this.validateMinMax );\n        },\n\n        maybeMinDefault: function( model ) {\n\n            if( '' == model.get( 'value' ) ){\n                var min = model.get( 'num_min' );\n                model.set( 'value', min );\n            }\n        },\n\n        validateMinMax: function( el, model ) {\n            var $el = jQuery( el );\n            var value = parseInt( $el.val() );\n            var min = $el.attr( 'min' );\n            var max = $el.attr( 'max' );\n            var step = $el.attr( 'step' );\n\n            if( min && value < min ){\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-min', 'Number Min Error' );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-min' );\n            }\n\n            if ( max && value > max ){\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-max', 'Number Max Error' );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-max' );\n            }\n\n            if( value && 0 !== value % step ){\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-step', 'Please increment by ' + step );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-step' );\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","define( 'controllers/mirrorField',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\n\tvar controller = Marionette.Object.extend( {\n\t\tlisteningModel: '',\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerMirror );\n\t\t},\n\n\t\tregisterMirror: function( model ) {\n\t\t\tif ( model.get( 'mirror_field' ) ) {\n\t\t\t\tthis.listeningModel = model;\n\t\t\t\tvar targetID = model.get( 'mirror_field' );\n\t\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetID ), 'change:modelValue', this.changeValue );\n\t\t\t}\n\t\t},\n\n\t\tchangeValue: function( targetModel ) {\n\t\t\tthis.listeningModel.set( 'value', targetModel.get( 'value' ) );\n\t\t\tthis.listeningModel.set( 'reRender', true );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/confirmField',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\tvar errorID = 'confirm-mismatch';\n\tvar errorMsg = 'These fields must match!';\n\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerConfirm );\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.confirmKeyup );\n\t\t},\n\n\t\tregisterConfirm: function( confirmModel ) {\n\t\t\tif ( confirmModel.get( 'confirm_field' ) ) {\n\t\t\t\tvar targetModel = radioChannel.request( 'get:field', confirmModel.get( 'confirm_field' ) );\n\t\t\t\ttargetModel.set( 'confirm_with', confirmModel.get( 'id' ) );\n\t\t\t\tvar targetID = targetModel.get( 'id' );\n\t\t\t\tvar confirmID = confirmModel.get( 'id' );\n\n\t\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetID ), 'change:modelValue', this.changeValue );\n\t\t\t\tthis.listenTo( nfRadio.channel( 'field-' + confirmID ), 'change:modelValue', this.changeValue );\n\t\t\t}\n\t\t},\n\n\t\tchangeValue: function( model ) {\n\t\t\tif ( 'undefined' == typeof model.get( 'confirm_with' ) ) {\n\t\t\t\tvar confirmModel = model;\n\t\t\t\tvar targetModel = radioChannel.request( 'get:field', confirmModel.get( 'confirm_field' ) );\n\t\t\t} else {\n\t\t\t\tvar targetModel = model;\n\t\t\t\tvar confirmModel = radioChannel.request( 'get:field', targetModel.get( 'confirm_with' ) );\n\t\t\t}\n\t\t\tvar targetID = targetModel.get( 'id' );\n\t\t\tvar confirmID = confirmModel.get( 'id' );\n\n\t\t\tif ( '' == confirmModel.get( 'value' ) || confirmModel.get( 'value' ) == targetModel.get( 'value' ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, errorMsg );\n\t\t\t}\n\t\t},\n\n\t\t\n\t\tconfirmKeyup: function( el, model, keyCode ) {\n\t\t\tvar currentValue = jQuery( el ).val();\n\t\t\tif ( model.get( 'confirm_field' ) ) {\n\t\t\t\tvar confirmModel = model;\n\t\t\t\tvar confirmID = model.get( 'id' );\n\t\t\t\tvar targetModel = nfRadio.channel( 'fields' ).request( 'get:field', confirmModel.get( 'confirm_field' ) );\n\t\t\t\tvar compareValue = targetModel.get( 'value' );\n\t\t\t\tvar confirmValue = currentValue;\n\t\t\t} else if ( model.get( 'confirm_with' ) ) {\n\t\t\t\tvar confirmModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'confirm_with' ) );\n\t\t\t\tvar confirmID = confirmModel.get( 'id' );\n\t\t\t\tvar confirmValue = confirmModel.get( 'value' );\n\t\t\t\tvar compareValue = confirmValue;\n\t\t\t}\n\n\t\t\tif ( 'undefined' !== typeof confirmModel ) {\n\t\t\t\tif ( '' == confirmValue ) {\n\t\t\t\t\t// confirmModel.removeWrapperClass( 'nf-fail' );\n\t\t\t\t\t// confirmModel.removeWrapperClass( 'nf-pass' );\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\t\t\t\t\n\t\t\t\t} else if ( currentValue == compareValue ) {\n\t\t\t\t\t// confirmModel.removeWrapperClass( 'nf-fail' );\n\t\t\t\t\t// confirmModel.addWrapperClass( 'nf-pass' );\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// confirmModel.removeWrapperClass( 'nf-pass' );\n\t\t\t\t\t// confirmModel.addWrapperClass( 'nf-fail' );\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, errorMsg );\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/updateFieldModel',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'update:field', this.updateField );\n\t\t},\n\n\t\tupdateField: function( model, value ) {\n\t\t\tif ( ! model.get( 'isUpdated' ) ) {\n\t\t\t\tmodel.set( 'value', value );\n\t\t\t\tmodel.set( 'isUpdated', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitButton',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function( model ) {\n\t\t\tthis.model = model;\n\t\t\tvar formChannel = nfRadio.channel( 'form-' + model.get( 'formID' ) );\n\t\t\tvar allFieldsChannel = nfRadio.channel( 'fields' );\n\t\t\tvar thisFieldChannel = nfRadio.channel( 'field-' + model.get( 'id' ) );\n\n\t\t\tthis.listenTo( allFieldsChannel, 'add:error', this.updateSubmit, this );\n\t\t\tthis.listenTo( allFieldsChannel, 'remove:error', this.updateSubmit, this );\n\t\t\tthis.listenTo( thisFieldChannel, 'click:field', this.submitForm, this );\n\n\t\t\tthis.listenTo( formChannel, 'disable:submit', this.disableSubmit, this );\n\t\t\tthis.listenTo( formChannel, 'enable:submit', this.enableSubmit, this );\n\t\t},\n\n\t\tupdateSubmit: function( model, id, msg ) {\n\t\t\tif ( model.get( 'formID' ) == this.model.get( 'formID' ) ) {\n\t\t\t\tif ( nfRadio.channel( 'form' ).request( 'get:errors', model.get( 'formID' ) ) ) {\n\t\t\t\t\tthis.disableSubmit( model, id, msg );\n\t\t\t\t} else {\n\t\t\t\t\tthis.enableSubmit( model, id );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdisableSubmit: function( model, id, msg ) {\n\t\t\tif ( 'disabled' != this.model.get( 'disabled' ) ) {\n\t\t\t\tthis.model.set( 'disabled', 'disabled' );\n\t\t\t\tthis.model.set( 'reRender', true );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\tenableSubmit: function( model, id ) {\n\t\t\tif ( 'disabled' == this.model.get( 'disabled' ) ) {\n\t\t\t\tthis.model.set( 'disabled', '' );\n\t\t\t\tthis.model.set( 'reRender', true );\t\t\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\tsubmitForm: function( el, model ) {\n\t\t\tthis.processingLabel();\n\t\t\t/*\n\t\t\t * Check to see if our honeypot has been filled in. If it has, add an error and don't submit.\n\t\t\t * TODO:\n\t\t\t * Abstract this logic to another controller.\n\t\t\t * Create a view just for honeypot.\n\t\t\t */\n\t\t\tvar formEl = nfRadio.channel( 'form' ).request( 'get:el' );\n\t\t\tvar hpVal = jQuery( formEl ).find( '.nf-field-hp' ).val();\n\t\t\tif ( '' != jQuery.trim( hpVal ) ) {\n\t\t\t\t// Add an error to our form.\n\t\t\t\tnfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'add:error', 'hp', 'Honeypot Error' );\n\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'error', model.get( 'formID' ) );\n\t\t\t\tthis.resetLabel();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\t// Remove our form error.\n\t\t\t\tnfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'remove:error', 'hp' );\n\t\t\t}\n\n\t\t\tvar formErrors = nfRadio.channel( 'form' ).request( 'get:errors', this.model.get( 'formID' ) );\n\n\t\t\tif ( formErrors ) {\n\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'error', model.get( 'formID' ) );\n\t\t\t\tjQuery( el ).closest( '.nf-field-wrap' ).find( '.nf-field-submit-error' ).show();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\t// Get our form model.\n\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', model.get( 'formID' ) );\n\t\t\t\t// Before we submit, check to make sure that all of our required fields aren't empty.\n\t\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\n\t\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'validate:field', field );\n\t\t\t\t\tnfRadio.channel( field.get( 'type' ) ).trigger( 'before:submit', field );\n\t\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'before:submit', field );\n\t\t\t\t} );\n\n\t\t\t\t// console.log( 'before radio message' );\n\n\t\t\t\t// Send out a message on the radio saying we're about to submit.\n\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'before:submit', formModel );\n\n\t\t\t\t// console.log( 'after radio message' );\n\n\t\t\t\t/*\n\t\t\t\t * Check again for form errors.\n\t\t\t\t *\n\t\t\t\t * If the user's click on the submit button was the thing that blurred another field, an error could have been added in the code above.\n\t\t\t\t */ \n\t\t\t\tformErrors = nfRadio.channel( 'form' ).request( 'get:errors', this.model.get( 'formID' ) );\n\n\t\t\t\tif ( formErrors ) {\n\t\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'error', model.get( 'formID' ) );\n\t\t\t\t\tthis.resetLabel();\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tvar formData = JSON.stringify( formModel );\n\t\t\t\t\tvar data = {\n\t                \t'action': 'nf_ajax_submit',\n\t                \t'security': nfFrontEnd.ajaxNonce,\n\t                \t'formData': formData\n\t\t\t\t\t}\n\n\t\t\t\t\tvar that = this;\n\n\t\t\t\t\tjQuery.ajax({\n\t                    url: nfFrontEnd.adminAjax,\n\t                    type: 'POST',\n\t                    data: data,\n\t                    cache: false,\n\t                   \tsuccess: function( data, textStatus, jqXHR ) {\n\t                   \t\tvar response = jQuery.parseJSON( data );\n\t                   \t\t\n\t                        nfRadio.channel( 'submit' ).trigger( 'submit:response', response, textStatus, jqXHR );\n\t                    \tthat.resetLabel();\n\t                    },\n\t                    error: function( jqXHR, textStatus, errorThrown ) {\n\t                        // Handle errors here\n\t                        console.log('ERRORS: ' + textStatus);\n\t                        // STOP LOADING SPINNER\n\n\t\t\t\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\n\t                    \tthat.resetLabel();\n\t                    }\n\t                });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tprocessingLabel: function() {\n            this.label = this.model.get( 'label' );\n            var processingLabel = this.model.get( 'processing_label' );\n            this.model.set( 'label', processingLabel );\n            this.model.set( 'reRender', true );\n        },\n\n        resetLabel: function() {\n            this.model.set( 'label', this.label );\n            this.model.set( 'reRender', true );\n        }\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitInit',['controllers/submitButton'], function( submitButton ) {\n\tvar radioChannel = nfRadio.channel( 'submit' );\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerSubmit );\n\t\t},\n\n\t\tregisterSubmit: function( model ) {\n\t\t\tmodel.set( 'maybeRenderError', this.maybeRenderError );\n\t\t\tnew submitButton( model );\n\t\t},\n\n\t\tmaybeRenderError: function() {\n\t\t\tif ( nfRadio.channel( 'form' ).request( 'get:errors', this.formID ) ) {\n\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-submit-error-msg' ).html() );\n\t\t\t\treturn template( this );\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/getFormErrors',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function( model ) {\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\n\t\t},\n\n\t\tgetFormErrors: function( formID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\n\t\t\tvar errors = false;\n\t\t\t\n\t\t\tif ( formModel ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have any errors on our form model.\n\t\t\t\t */\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\n\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\n\t\t\t\t\tif ( field.get( 'type' ) != 'submit' && field.get( 'errors' ).length > 0 ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ field.get( 'id' ) ] = field.get( 'errors' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t});\n\n\treturn controller;\n} );\n","define( 'models/fileModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/fileCollection',['models/fileModel'], function( fileModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fileModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fileItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#nf-tmpl-field-file-row',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tif ( 0 == jQuery( this.el ).find( 'input:file' ).length ) {\n\t\t\t\tjQuery( this.el ).find( '.nf-file-input' ).append( this.model.get( 'fileInput' ) );\n\t\t\t}\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/fileCollection',['views/fileItem'], function( fileItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: fileItem\n\t});\n\n\treturn view;\n} );\n","define('controllers/selectFile',['models/fileCollection', 'views/fileCollection'], function( fileCollection, fileCollectionView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'file' ), 'init:model', this.initFile );\n\t\t\tthis.listenTo( nfRadio.channel( 'file' ), 'render:view', this.renderView );\n\t\t},\n\n\t\trenderFileInput: function() {\n\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-file-input' ).html() );\n\t\t\treturn template( this );\n\t\t},\n\n\t\tinitFile: function( model ) {\n\t\t\tmodel.set( 'files', new fileCollection() );\n\t\t\tmodel.set( 'renderFileInput', this.renderFileInput );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'file' ), 'change:field', this.changeFile );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'click:field', this.clickFileButton );\n\t\t},\n\n\t\trenderView: function( fieldView ) {\n\t\t\tvar el = jQuery( fieldView.el ).children( '.nf-files-table' );\n    \t\tfieldView.fileCollectionView = new fileCollectionView( { el: el, collection: fieldView.model.get( 'files' ), thisModel: this.model } );\n\n    \t\tfieldView.model.bind( 'change:files', this.changeCollection, fieldView );\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\tthis.fileCollectionView.render();\n\t\t},\n\n\t\tclickFileButton: function( el, model ) {\n\t\t\tif ( jQuery( el ).hasClass( 'nf-file-button' ) || jQuery( el ).hasClass( 'nf-file-reset' ) ) {\n\t\t\t\tjQuery( el ).closest( '.nf-field-wrap' ).find( 'input[type=file].nf-element' ).click();\n\t\t\t}\n\t\t},\n\n\t\tchangeFile: function( el, model ) {\n\t\t\tif ( '' == jQuery( el ).val() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar filename = jQuery( el )[0].files[0].name;\n\t\t\tconsole.log( jQuery( el ).length );\n\n\t\t\tvar slug = '';\n\t\t    var trimmed = jQuery.trim( filename );\n\t\t    slug = trimmed.replace(/[^a-z0-9-]/gi, '-').\n\t\t    replace(/-+/g, '-').\n\t\t    replace(/^-|-$/g, '');\n    \n\t\t    var fileCollection = model.get( 'files' );\n\t\t    if ( ! fileCollection.get( slug ) ) {\n\n\t\t    \tvar fileInput = jQuery( el );\n\t\t    \tvar fileInputClone = jQuery( el ).clone();\n\t\t    \tjQuery( fileInput ).removeClass( 'nf-element' ).off();\n\t\t    \tjQuery( fileInputClone ).val('');\n\t\t    \tjQuery( fileInput ).replaceWith( fileInputClone );\n\n\t\t  //   \tvar html = '<form class=\"nf-file-form\" enctype=\"multipart/form-data\" method=\"post\" action=\"' + nfFrontEnd.adminAjax + '\"></form>';\n\t\t\t\t// jQuery( el ).wrap( html );\n\n\t\t\t    fileCollection.add( { id: slug, filename: filename, fileInput: fileInput } );\n\n\t\t\t    model.set( 'files', fileCollection );\n\t\t\t    model.trigger( 'change:files', model );\n\t\t    }\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/validateRequired',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.validateRequired );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:field', this.validateRequired );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'keyup:field', this.validateKeyup );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:modelValue', this.validateModelData );\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'validate:field', this.validateModelData );\n\t\t},\n\t\t\n\t\tvalidateKeyup: function( el, model, keyCode ) {\n\t\t\tif ( 1 != model.get( 'required' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tvar errorExists = nfRadio.channel( 'fields' ).request( 'get:error', model.get( 'id' ), 'required-error' );\n\t\t\tif ( ( errorExists || ! model.get( 'clean' ) ) && 1 == model.get( 'required' ) ) {\n\t\t\t\tthis.validateRequired( el, model );\n\t\t\t}\n\t\t\t*/\n\t\t\t// console.log( 'req key up ');\n\t\t\t// console.log( model.get( 'clean' ) );\n\t\t\tif ( ! model.get( 'clean' ) ) {\n\t\t\t\t// console.log( 'check required' );\n\t\t\t\tthis.validateRequired( el, model );\n\t\t\t}\n\t\t},\n\n\t\tvalidateRequired: function( el, model ) {\n\t\t\tvar currentValue = jQuery( el ).val();\n\t\t\tvar customReqValidation = nfRadio.channel( model.get( 'type' ) ).request( 'validate:required', el, model );\n\t\t\tvar defaultReqValidation = true;\n\n\t\t\tvar maskPlaceholder = model.get( 'mask' );\n\t\t\tif ( maskPlaceholder ) {\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /9/g, '_' );\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /a/g, '_' );\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /\\*/g, '_' );\n\t\t\t}\n\n\t\t\tif ( ! jQuery.trim( currentValue ) || currentValue == maskPlaceholder ) {\n\t\t\t\tdefaultReqValidation = false;\n\t\t\t}\n\n\t\t\tif ( 'undefined' !== typeof customReqValidation ) {\n\t\t\t\tvar valid = customReqValidation;\n\t\t\t} else {\n\t\t\t\tvar valid = defaultReqValidation;\n\t\t\t}\n\n\t\t\tthis.maybeError( valid, model );\n\t\t},\n\n\t\tvalidateModelData: function( model ) {\n\t\t\tif ( 1 != model.get( 'required' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurrentValue = model.get( 'value' );\n\t\t\t\n\t\t\tvar defaultReqValidation = true;\n\n\t\t\tif ( ! jQuery.trim( currentValue ) ) {\n\t\t\t\tdefaultReqValidation = false;\n\t\t\t}\n\n\t\t\tvar valid = defaultReqValidation;\n\t\t\t\n\t\t\tthis.maybeError( valid, model );\n\n\t\t},\n\n\t\tmaybeError: function( valid, model ) {\n\t\t\tif ( ! valid ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'required-error', 'This is a required field.' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'required-error' );\n\t\t\t}\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitError',[], function() {\n\tvar radioChannel = nfRadio.channel( 'submit' );\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'submit:response', this.submitErrors );\n\t\t},\n\n\t\tsubmitErrors: function( response ) {\n\t\t\tif ( _.size( response.errors ) > 0 ) {\n\t\t\t\t_.each( response.errors, function( msg, fieldID ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, 'required-error', msg );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/actionRedirect',[], function() {\n\tvar radioChannel = nfRadio.channel( 'submit' );\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'submit:response', this.actionRedirect );\n\t\t},\n\n\t\tactionRedirect: function( response ) {\n\n\t\t\tif ( 'undefined' != typeof response.data.halt && 'undefined' != typeof response.data.halt.redirect && '' != response.data.halt.redirect ) {\n\t\t\t\twindow.location = response.data.halt.redirect;\n\t\t\t}\n\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\n\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.redirect && '' != response.data.actions.redirect ) {\n\t\t\t\t\twindow.location = response.data.actions.redirect;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/actionSuccess',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'submit:response', this.actionSubmit );\n\t\t},\n\n\t\tactionSubmit: function( response ) {\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.success_message && '' != response.data.actions.success_message ) {\n\t\t\t\t\tjQuery( '.nf-response-msg' ).html( response.data.actions.success_message );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldSelect',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'listselect' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'liststate' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'listcountry' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'listmultiselect' ), 'init:model', this.register );\n\t\t\tnfRadio.channel( 'listselect' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t\tnfRadio.channel( 'listmultiselect' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t},\n\n\t\tregister: function( model ) {\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\n\t\t\tmodel.set( 'renderOtherAttributes', this.renderOtherAttributes );\n\t\t\t/*\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\n\t\t\t * This is the list equivalent of a 'default value'.\n\t\t\t */ \n\t\t\tif ( 0 != model.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if this is a multi-select list.\n\t\t\t\t */\n\t\t\t\tif ( 'listmultiselect' == model.get( 'type' ) ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t\tselected = _.map( selected, function( opt ) { return opt.value } );\n\t\t\t\t\tvar value = selected;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t\t */\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\t\tselected = model.get( 'options' )[0];\n\t\t\t\t\t}\n\t\t\t\t\tvar value = selected.value;\n\t\t\t\t}\n\n\t\t\t\tmodel.set( 'value', value );\n\t\t\t}\n\t\t},\n\n\t\trenderOptions: function() {\n\t\t\tvar that = this;\n\t\t\tvar html = '';\n\t\t\t_.each( this.options, function( option ) {\n\t\t\t\tif ( 1 == option.selected ) {\n\t\t\t\t\tvar selected = true;\n\t\t\t\t} else {\n\t\t\t\t\tvar selected = false;\n\t\t\t\t}\n\n\t\t\t\toption.selected = selected;\n\t\t\t\toption.fieldID = that.id;\n\t\t\t\toption.classes = that.classes;\n\t\t\t\toption.currentValue = that.value;\n\t\t\t\t\n\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-listselect-option' ).html() );\n\t\t\t\thtml += template( option );\n\t\t\t} );\n\n\t\t\treturn html;\n\t\t},\n\n\t\trenderOtherAttributes: function() {\n\t\t\tvar otherAttributes = '';\n\n\t\t\tif( 'listmultiselect' == this.type ){\n\t\t\t\totherAttributes = otherAttributes + ' multiple';\n\t\t\t}\n\n\t\t\treturn otherAttributes;\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tvar calc_value = 0;\n\t\t\tvar options = fieldModel.get( 'options' );\n\t\t\tif ( 0 != options.length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if this is a multi-select list.\n\t\t\t\t */\n\t\t\t\tif ( 'listmultiselect' == fieldModel.get( 'type' ) ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\n\t\t\t\t\t */\n\t\t\t\t\t_.each( fieldModel.get( 'value' ), function( val ) {\n\t\t\t\t\t\tvar tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\n\t\t\t\t\t\tcalc_value = math.add( calc_value, tmp_opt.calc );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * We are using a single select, so our selected option is in the 'value' attribute.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.find( options, function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t\t */\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\n\t\t\t\t\t}\t\t\n\t\t\t\t\tcalc_value  = selected.calc;\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn calc_value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/coreSubmitResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'submit:response', this.actionSubmit );\n\t\t},\n\n\t\tactionSubmit: function( response ) {\n\t\t\tif ( 1 == response.data.settings.clear_complete ) {\n\t\t\t\t// nfRadio.channel( 'form-' + response.data.form_id ).trigger( 'reset' );\n\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', response.data.form_id );\n\t\t\t\tformModel.get( 'fields' ).reset( formModel.get( 'loadedFields' ) );\n\t\t\t}\n\n\t\t\tif ( 1 == response.data.settings.hide_complete ) {\n\t\t\t\t/**\n\t\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\n\t\t\t\t */\n\t\t\t\tjQuery( '.nf-fields' ).hide();\n\t\t\t\tjQuery( '.nf-form-title' ).hide();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldProduct',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'product' ), 'init:model', this.register );\n        },\n\n        register: function( model ) {\n            model.set( 'renderProductQuantity', this.renderProductQuantity );\n            model.set( 'renderProduct', this.renderProduct );\n            model.set( 'renderOptions', this.renderOptions );\n        },\n\n        renderProduct: function(){\n            switch( this.product_type ) {\n                case 'user':\n                    var template = _.template( jQuery( '#nf-tmpl-field-textbox' ).html() );\n                    return template( this );\n                    break;\n                case 'hidden':\n                    var template = _.template( jQuery( '#nf-tmpl-field-hidden' ).html() );\n                    return template( this );\n                    break;\n\n                case 'dropdown':\n                    var template = _.template( jQuery( '#nf-tmpl-product-dropdown' ).html() );\n                    return template( this );\n                    break;\n                default:\n                    var template = _.template( jQuery( '#nf-tmpl-product-single' ).html() );\n                    return template( this );\n            }\n        },\n\n        renderProductQuantity: function(){\n            if ( 1 == this.product_use_quantity ) {\n                var template = _.template( jQuery( '#nf-tmpl-product-quantity' ).html() );\n                return template( this );\n            }\n        },\n\n        renderOptions: function() {\n            var that = this;\n            var html = '';\n            _.each( this.options, function( option ) {\n                if ( 1 == option.selected ) {\n                    var selected = true;\n                } else {\n                    var selected = false;\n                }\n\n                option.selected = selected;\n                option.fieldID = that.id;\n                option.classes = that.classes;\n                option.currentValue = that.value;\n\n                var template = _.template( jQuery( '#nf-tmpl-product-' + that.product_type + '-option' ).html() );\n\n                html += template( option );\n            } );\n\n            return html;\n        }\n    });\n\n    return controller;\n} );\n\n","define('controllers/fieldTotal',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        totalModel: {},\n\n        productTotals: {},\n\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'total' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'shipping' ), 'init:model', this.registerShipping );\n        },\n\n        register: function( totalModel ){\n            this.totalModel = totalModel;\n\n            var formID = totalModel.get( 'formID' );\n            this.listenTo( nfRadio.channel( 'form-' + formID ), 'loaded', this.onFormLoaded );\n\n            this.listenTo( nfRadio.channel( 'product' ), 'change:modelValue', this.onChangeProduct );\n            this.listenTo( nfRadio.channel( 'quantity' ), 'change:modelValue', this.onChangeQuantity );\n        },\n\n        registerShipping: function( shippingModel ){\n            this.shippingCost = shippingModel.get( 'shipping_cost' );\n        },\n\n        onFormLoaded: function( formModel ){\n\n            var fieldModels = formModel.get( 'fields' ).models;\n\n            var productFields = {};\n            var quantityFields = {};\n\n            for( var model in fieldModels ){\n\n                var field = fieldModels[ model ];\n                var fieldID = field.get( 'id' );\n\n                // TODO: Maybe use switch\n                if( 'product' == field.get( 'type' ) ){\n                    productFields[ fieldID ] = field;\n                } else if( 'quantity' == field.get( 'type' ) ){\n                    var productID = field.get( 'product_assignment' );\n                    quantityFields[ productID ] = field;\n                }\n            }\n\n            for( var productID in productFields ){\n\n                var product = productFields[ productID ];\n\n                var productPrice = Number( product.get( 'product_price' ) );\n\n                if( quantityFields[ productID ] ){\n\n                    productPrice *= quantityFields[ productID ].get( 'value' );\n\n                } else if( 1 == product.get( 'product_use_quantity' ) ){\n\n                    productPrice *= product.get( 'value' );\n\n                }\n\n                this.productTotals[ productID ] = productPrice;\n            }\n\n            this.updateTotal();\n        },\n\n        onChangeProduct: function( model ){\n            var productID = model.get( 'id' );\n            var productPrice = Number( model.get( 'product_price' ) );\n            var productQuantity = Number( model.get( 'value' ) );\n            var newTotal = productQuantity * productPrice;\n            this.productTotals[ productID ] = newTotal;\n\n            this.updateTotal();\n        },\n\n        onChangeQuantity: function( model ){\n            var productID = model.get( 'product_assignment' );\n            var productField = nfRadio.channel( 'fields' ).request( 'get:field', productID );\n            var productPrice = Number( productField.get( 'product_price' ) );\n\n            var quantity = Number( model.get( 'value' ) );\n\n            var newTotal = quantity * productPrice;\n\n            this.productTotals[ productID ] = newTotal;\n\n            this.updateTotal();\n        },\n\n        updateTotal: function(){\n\n            var newTotal = 0;\n\n            for( var product in this.productTotals ){\n                newTotal += Number( this.productTotals[ product ] );\n            }\n\n            if( newTotal && this.shippingCost ) {\n                // Only add shipping if there is a cost.\n                newTotal += Number(this.shippingCost);\n            }\n\n            this.totalModel.set( 'value', newTotal.toFixed( 2 ) );\n            this.totalModel.set( 'reRender', true );\n            this.totalModel.set( 'reRender', false );\n        }\n    });\n\n    return controller;\n});\n","define('controllers/fieldQuantity',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'quantity' ), 'init:model', this.registerQuantity );\n        },\n\n        registerQuantity: function( model ){\n            var productID = model.get( 'product_assignment' );\n            var product = nfRadio.channel( 'fields' ).request( 'get:field', productID );\n\n            if( product ) {\n                product.set('product_use_quantity', 0);\n            }\n        },\n\n    });\n\n    return controller;\n});\n","/**\n * Model that represents a calculation.\n *\n * On init, we trigger a radio message so that controllers can do things when a calc model inits.\n */\ndefine( 'models/calcModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\t// Set our form id\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\n\t\t\t// Set our initial fields object to empty. This will hold our key/value pairs.\n\t\t\tthis.set( 'fields', {} );\n\t\t\t// Trigger a radio message to let controllers know we've inited this model.\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'init:model', this );\n\t\t\t// When we change the value of this calculation, send out a radio message\n\t\t\tthis.on( 'change:value', this.changeValue, this );\n\t\t},\n\n\t\t/**\n\t\t * Trigger a radio message when a field present in our calculation changes\n\t\t *\n\t\t * The listener that triggers/calls this function is in controllers/calculations\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeField: function( fieldModel ) {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:field', this, fieldModel );\n\t\t},\n\n\t\tchangeCalc: function( targetCalcModel ) {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:calc', this, targetCalcModel );\n\t\t},\n\n\t\tchangeValue: function() {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:value', this );\n\t\t}\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/calcCollection',['models/calcModel'], function( CalcModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: CalcModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Controller responsible for keeping up with calculations.\n */\ndefine('controllers/calculations',['models/calcCollection'], function( CalcCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.calcs = {};\n\t\t\tthis.displayFields = {};\n\t\t\t// When our form initialises, check to see if there are any calculations that need to be tracked.\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', this.registerCalcs );\n\n\t\t\t// When a calc model is initialised, run a setup function.\n\t\t\t// this.listenTo( nfRadio.channel( 'calc' ), 'init:model', this.setupCalc );\n\n\t\t\t// When a field referenced by a calc model changes, update our calc.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:field', this.changeField );\n\n\t\t\t// When a calculation referenced by a calc model changes, update our calc.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:calc', this.changeCalc );\n\n\t\t\t/*\n\t\t\t * Listen to our field model init for fields that want to display calc values.\n\t\t\t * If that field has a calc merge tag, replace it with the default calc value.\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t_.each( nfFrontEnd.use_merge_tags.calculations, function( fieldType ) {\n\t\t\t\tthat.listenTo( nfRadio.channel( 'fields-' + fieldType ), 'init:model', that.initDisplayField );\n\t\t\t} );\n\t\t\t\n\t\t\t// When we change our calc value, update any display fields.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:value', this.updateDisplayFields );\n\n\t\t\t// Set an init variable so that we only call reRender on the display field on change, not on init.\n\t\t\tthis.init = {};\n\t\t},\n\n\t\t/**\n\t\t * When our form loads, create a collection out of any calculations.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model formModel\n\t\t * @return void\n\t\t */\n\t\tregisterCalcs: function( formModel ) {\n\t\t\tvar calcCollection = new CalcCollection( formModel.get( 'settings' ).calculations, { formModel: formModel } );\n\t\t\tthis.calcs[ formModel.get( 'id' ) ] = calcCollection;\n\t\t\tvar that = this;\n\n\t\t\t_.each( calcCollection.models, function( calcModel ) {\n\t\t\t\t/*\n\t\t\t\t * We set a property on our init variable for the calc model we're looping over.\n\t\t\t\t * This property is set to true so that when we make changes to the calc model on the next line\n\t\t\t\t * the field view doesn't try to redraw itself.\n\t\t\t\t * If we don't do this, the 'reRender' attribute of the model will be set before the view is initialized,\n\t\t\t\t * which means that setting 'reRender' to true will never re-render the view.\n\t\t\t\t */\n\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = true;\n\t\t\t\t// Setup our calculation models with initial values and register listeners for calc-related fields.\n\t\t\t\tthat.setupCalc( calcModel );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * When a calculation model is instantiated from the registerCalcs function:\n\t\t *\n\t\t * Use a regex to get an array of the field keys\n\t\t * Setup an initial key/values array\n\t\t * Check for any references to other calculations\n\t\t * Set the initial value of our calculation\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model calcModel\n\t\t * @return void\n\t\t */\n\t\tsetupCalc: function( calcModel ) {\n\t\t\t// Setup our that var so we can access 'this' context in our loop.\n\t\t\tvar that = this;\n\t\t\t// Get our equation\n\t\t\tvar eq = calcModel.get( 'eq' );\n\t\t\t// We want to keep our original eq intact, so we use a different var for string replacment.\n\t\t\tvar eqValues = eq;\n\n\t\t\t/* TODO:\n\t\t\t * It might be possible to refactor these two if statements.\n\t\t\t * The difficulty is that each has a different method of retreiving the specific data model.\n\t\t\t */\n\t\t\t// Check to see if we have any field merge tags in our equation.\n\t\t\tvar fields = eq.match( new RegExp( /{field:(.*?)}/g ) );\n\t\t\tif ( fields ) {\n\t\t\t\t/*\n\t\t\t\t * fields is now an array of field keys that looks like:\n\t\t\t\t * ['{field:key'], ['{field:key'], etc.\n\t\t\t\t *\n\t\t\t\t * We need to run a function with each of our field keys to setup our field key array and hook up our field change listner.\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tfields = fields.map( function( field ) {\n\t\t\t\t\t// field will be {field:key}\n\t\t\t\t\tvar key = field.replace( '}', '' ).replace( '{field:', '' );\n\t\t\t\t\t// Get our field model\n\t\t\t\t\tfieldModel = nfRadio.channel( 'form-' + calcModel.get( 'formID' ) ).request( 'get:fieldByKey', key );\n\n\t\t\t\t\tif( 'undefined' == typeof fieldModel ) return;\n\n\t\t\t\t\tfieldModel.on( 'change:value', calcModel.changeField, calcModel );\n\t\t\t\t\t// Get our calc value from our field model.\n\t\t\t\t\tvar calcValue = that.getCalcValue( fieldModel );\n\t\t\t\t\t// Add this field to our internal key/value object.\n\t\t\t\t\tthat.updateCalcFields( calcModel, key, calcValue );\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\n\t\t\t\t\teqValues = that.replaceKey( 'field', key, calcValue, eqValues );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Check to see if we have any calc merge tags in our equation.\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t/*\n\t\t\t\t * calcs is now an array of calc keys that looks like:\n\t\t\t\t * ['{calc:key'], ['{calc:key'], etc.\n\t\t\t\t *\n\t\t\t\t * We need to run a function with each of our calc keys to setup our calc key array and hook up our calc change listner.\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tcalcs = calcs.map( function( calc ) {\n\t\t\t\t\t// calc will be {calc:name}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t// Get our calc model\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\n\t\t\t\t\t// Listen for changes on our calcluation, since we need to update our calc when it changes.\n\t\t\t\t\ttargetCalcModel.on( 'change:value', calcModel.changeCalc, calcModel );\n\t\t\t\t\t// // Get our calc value from our calc model.\n\t\t\t\t\tvar calcValue = targetCalcModel.get( 'value' );\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\n\t\t\t\t\teqValues = that.replaceKey( 'calc', name, calcValue, eqValues );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\t// Evaluate the equation and update the value of this model.\n\t\t\ttry {\n\t\t\t\tcalcModel.set('value', math.eval(eqValues));\n\t\t\t} catch( e ) {\n\t\t\t\tconsole.log( e );\n\t\t\t}\n\n\t\t\t// Debugging console statement.\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\n\t\t},\n\n\t\t/**\n\t\t * Update an item in our key/value pair that represents our fields and calc values.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tcalcModel\n\t\t * @param  string \t\t\tkey\n\t\t * @param  string \t\t\tcalcValue\n\t\t * @return void\n\t\t */\n\t\tupdateCalcFields: function( calcModel, key, calcValue ) {\n\t\t\tvar fields = calcModel.get( 'fields' );\n\t\t\tfields[ key ] = calcValue;\n\t\t\tcalcModel.set( 'fields', fields );\n\t\t},\n\n\t\t/**\n\t\t * Get a calc value from a field model.\n\t\t *\n\t\t * Sends a request to see if there's a special calc value\n\t\t * Uses the value of the field if there is not.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model fieldModel\n\t\t * @return value\n\t\t */\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\t/*\n\t\t\t * Send out a request on the field type and parent type channel asking if they need to modify the calc value.\n\t\t\t * This is helpful for fields like lists that can have a different calc_value than selected value.\n\t\t\t */\n\t\t\tvar value = nfRadio.channel( fieldModel.get( 'type' ) ).request( 'get:calcValue', fieldModel );\n\n\t\t\t// If value is 'undefined', then we got no response. Set value to field model value.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tif ( jQuery.isNumeric( fieldModel.get( 'value' ) ) ) {\n\t\t\t\t\tvalue = fieldModel.get( 'value' );\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ( jQuery.isNumeric( value ) ) ? value : 0;\n\t\t},\n\n\t\t/**\n\t\t * Replace instances of key with calcValue. This is used to replace one key at a time.\n\t\t *\n\t\t * If no eq is passed, use calcModel eq.\n\t\t *\n\t\t * Returns a string with instances of key replaced with calcValue.\n\t\t * \n\t\t * @since  version\n\t\t * @param  string \tkey       \n\t\t * @param  string \tcalcValue \n\t\t * @param  string \teq        \n\t\t * @return string \teq      \n\t\t */\n\t\treplaceKey: function( type, key, calcValue, eq ) {\n\t\t\teq = eq || calcModel.get( 'eq' );\n\t\t\tkey = '{' + type + ':' + key + '}';\n\t\t\tvar re = new RegExp( key, 'g' );\n\t\t\treturn eq.replace( re, calcValue );\n\t\t},\n\n\t\t/**\n\t\t * Takes a calcModel and returns a string eq with all keys replaced by their appropriate calcValues.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tcalcModel\n\t\t * @return string\t\t\teq\n\t\t */\n\t\treplaceAllKeys: function( calcModel ) {\n\t\t\tvar eq = calcModel.get( 'eq' );\n\t\t\tvar that = this;\n\t\t\t_.each( calcModel.get( 'fields' ), function( value, key ) {\n\t\t\t\teq = that.replaceKey( 'field', key, value, eq );\n\t\t\t} );\n\n\t\t\t// If we have any calc merge tags, replace those as well.\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t_.each( calcs, function( calc ) {\n\t\t\t\t\t// calc will be {calc:key}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\n\t\t\t\t\tvar re = new RegExp( calc, 'g' );\n\t\t\t\t\teq = eq.replace( re, targetCalcModel.get( 'value' ) );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn eq;\n\t\t},\n\n\t\t/**\n\t\t * Function that's called when a field within the calculation changes.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model calcModel\n\t\t * @param  backbone.model fieldModel\n\t\t * @return void\n\t\t */\n\t\tchangeField: function( calcModel, fieldModel ) {\n\t\t\tvar key = fieldModel.get( 'key' );\n\t\t\tvar value = this.getCalcValue( fieldModel );\n\t\t\tthis.updateCalcFields( calcModel, key, value );\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\n\t\t\tcalcModel.set( 'value', math.eval( eqValues ) );\n\n\t\t\t// Debugging console statement.\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\t\t\n\t\t},\n\n\t\tinitDisplayField: function( fieldModel ) {\n\n\t\t\tif( ! fieldModel.get( 'default' ) ) return;\n\n\t\t\tvar calcs = fieldModel.get( 'default' ).match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\tvar that = this;\n\t\t\t\t_.each( calcs, function( calcName ) {\n\t\t\t\t\tcalcName = calcName.replace( '{calc:', '' ).replace( '}', '' );\n\t\t\t\t\tthat.displayFields[ calcName ] = that.displayFields[ calcName ] || [];\n\t\t\t\t\tthat.displayFields[ calcName ].push( fieldModel );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tupdateDisplayFields: function( calcModel ) {\n\t\t\tvar that = this;\n\t\t\tif ( 'undefined' != typeof this.displayFields[ calcModel.get( 'name' ) ] ) {\n\t\t\t\t_.each( this.displayFields[ calcModel.get( 'name' ) ], function( fieldModel ) {\n\t\t\t\t\tvar value = fieldModel.get( 'default' );\n\t\t\t\t\tvar calcs = value.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\t\t\t_.each( calcs, function( calc ) {\n\t\t\t\t\t\t// calc will be {calc:key}\n\t\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t\tvar calcModel = that.calcs[ fieldModel.get( 'formID' ) ].findWhere( { name: name } );\n\t\t\t\t\t\tvar re = new RegExp( calc, 'g' );\n\t\t\t\t\t\tvalue = value.replace( re, calcModel.get( 'value' ) );\n\t\t\t\t\t} );\n\t\t\t\t\tfieldModel.set( 'value', value );\n\t\t\t\t\tif ( ! that.init[ calcModel.get( 'name' ) ] ) {\n\t\t\t\t\t\tfieldModel.set( 'reRender', true );\n\t\t\t\t\t}\n\t\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tgetCalc: function( name, formID ) {\n\t\t\treturn this.calcs[ formID ].findWhere( { name: name } );\n\t\t},\n\n\t\tchangeCalc: function( calcModel, targetCalcModel ) {\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\n\t\t\tcalcModel.set( 'value', math.eval( eqValues ) );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldDate',[], function() {\n    var controller = Marionette.Object.extend({\n\n        initialize: function () {\n            this.listenTo( nfRadio.channel( 'date' ), 'render:view', this.initDatepicker );\n        },\n\n        initDatepicker: function ( view ) {\n            var dateObject = pikadayResponsive( jQuery( view.el ).find( '.nf-element' )[0], {\n                format: view.model.get( 'date_format' ),\n                classes: 'ninja-forms-field'\n            } );\n            if ( 1 == view.model.get( 'date_default' ) ) {\n               dateObject.setDate( moment() ); \n            }\n        }\n    });\n\n    return controller;\n});\n","define('controllers/fieldRecaptcha',[], function() {\n    var controller = Marionette.Object.extend({\n\n        initialize: function () {\n            this.listenTo( nfRadio.channel( 'recaptcha' ), 'init:model', this.initRecaptcha );\n        },\n\n       \tinitRecaptcha: function ( model ) {\n       \t\tthis.model = model;\n        \tnfRadio.channel( 'recaptcha' ).reply( 'update:response', this.updateResponse, this );\n        },\n\n        updateResponse: function( response ) {\n        \tthis.model.set( 'value', response );\n            nfRadio.channel( 'fields' ).request( 'remove:error', this.model.get( 'id' ), 'required-error' );\n        }\n    });\n\n    return controller;\n} );\n","/**\n * When a form is loaded, enable any help text that appears on the page.\n */\ndefine('controllers/helpText',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'render:view', this.initHelpText );\n\t\t},\n\n\t\tinitHelpText: function( view ) {\n\t\t\tjQuery( view.el ).find( '.nf-help' ).each( function() {\n\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\tcontent: jQuery( this ).data( 'text' )\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When a form is loaded, enable any rtes in textareas.\n */\ndefine('controllers/fieldTextareaRTE',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'render:view', this.initTextareaRTEs );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'click:extra', this.clickExtra );\n\n\t\t\t// Instantiates the variable that holds the media library frame.\n\t\t\tthis.meta_image_frame;\n\n\t\t\tjQuery.summernote.options.icons = {\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\n\t\t        'indent': 'dashicons dashicons-editor-indent',\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\n\t\t        'bold': 'dashicons dashicons-editor-bold',\n\t\t        'caret': 'dashicons dashicons-arrow-down',\n\t\t        // 'circle': 'dashicons fa-circle',\n\t\t        'close': 'dashicons dashicons-dismiss',\n\t\t        'code': 'dashicons dashicons-editor-code',\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\n\t\t        // 'font': 'dashicons fa-font',\n\t\t        // 'frame': 'dashicons fa-frame',\n\t\t        'italic': 'dashicons dashicons-editor-italic',\n\t\t        'link': 'dashicons dashicons-admin-links',\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\n\t\t        // 'menuCheck': 'dashicons fa-check',\n\t\t        'minus': 'dashicons dashicons-minus',\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\n\t\t        // 'pencil': 'dashicons fa-pencil',\n\t\t        // 'picture': 'dashicons fa-picture-o',\n\t\t        // 'question': 'dashicons fa-question',\n\t\t        'redo': 'dashicons dashicons-redo',\n\t\t        'square': 'dashicons fa-square',\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\n\t\t        // 'subscript': 'dashicons fa-subscript',\n\t\t        // 'superscript': 'dashicons fa-superscript',\n\t\t        'table': 'dashicons dashicons-editor-table',\n\t\t        // 'textHeight': 'dashicons fa-text-height',\n\t\t        // 'trash': 'dashicons fa-trash',\n\t\t        'underline': 'dashicons dashicons-editor-underline',\n\t\t        'undo': 'dashicons dashicons-undo',\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\n\t\t        // 'video': 'dashicons fa-youtube-play'\n\t\t      }\n\n\t\t      this.currentContext = {};\n\n\t\t},\n\n\t\tinitTextareaRTEs: function( view ) {\n\t\t\tif ( 1 != view.model.get( 'textarea_rte' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Custom Button for links\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t// var linkButton = this.linkButton();\n\t\t\tvar linkButton = function( context ) {\n\t\t\t\treturn that.linkButton( context );\n\t\t\t}\n\t\t\tvar mediaButton = function( context ) {\n\t\t\t\treturn that.mediaButton( context );\n\t\t\t}\n\n\t\t\tvar toolbar = [\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\n\t\t\t    [ 'table', [ 'table' ] ],\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\n\t\t\t];\n\n\t\t\tif ( 1 == view.model.get( 'textarea_media' ) && 0 != userSettings.uid ) {\n\t\t\t\ttoolbar.push( [ 'tools', [ 'mediaButton' ] ] );\n\t\t\t}\n\n\t\t\tjQuery( view.el ).find( '.nf-element' ).summernote( {\n\t\t\t\ttoolbar: toolbar,\n\t\t\t\tbuttons: {\n\t\t\t\t\tlinkButton: linkButton,\n\t\t\t\t\tmediaButton: mediaButton\n\t\t\t\t},\n\t\t\t\theight: 150,   //set editable area's height\n\t\t\t\tcodemirror: { // codemirror options\n\t\t\t\t    theme: 'monokai',\n\t\t\t\t    lineNumbers: true\n\t\t\t\t},\n\t\t\t\tprettifyHtml: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonChange: function( e ) {\n\t\t\t\t\t\tview.model.set( 'value', jQuery( this ).summernote( 'code' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tlinkButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar linkButton = _.template( jQuery( '#nf-tmpl-rte-link-button' ).html() );\n\t\t\tvar linkDropdown = _.template( jQuery( '#nf-tmpl-rte-link-dropdown' ).html() );\n\t\t\treturn ui.buttonGroup([\n\t\t\t\tui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: linkButton({}),\n\t            tooltip: 'Insert Link',\n\t            click: function( e ) {\n\t            \tthat.clickLinkButton( e, context );\n\t            },\n\t            data: {\n\t              toggle: 'dropdown'\n\t            }\n\t          }),\n\t\t\t\tui.dropdown([\n\t            ui.buttonGroup({\n\t              children: [\n\t                ui.button({\n\t                  contents: linkDropdown({}),\n\t                  tooltip: ''\n\t                }),\n\t              ]\n\t            })\n\t          ])\n\t\t\t]).render();\n\t\t},\n\n\t\tmediaButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mediaButton = _.template( jQuery( '#nf-tmpl-rte-media-button' ).html() );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mediaButton({}),\n\t            tooltip: 'Insert Media',\n\t            click: function( e ) {\n\t            \tthat.openMediaManager( e, context );\n\t            }\n\t          }).render();\n\t\t},\n\n\t\topenMediaManager: function( e, context ) {\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\t// If the frame already exists, re-open it.\n\t\t\tif ( this.meta_image_frame ) {\n\t\t\t\tthis.meta_image_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sets up the media library frame\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\t\ttitle: 'Select a file',\n\t\t\t\tbutton: { text:  'insert' }\n\t\t\t});\n\n\t\t\tvar that = this;\n\n\t\t\t// Runs when an image is selected.\n\t\t\tthis.meta_image_frame.on('select', function(){\n\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\n\t\t\t\tthat.insertMedia( media_attachment, context );\n\t\t\t});\n\n\t\t\t// Opens the media library frame.\n\t\t\tthis.meta_image_frame.open();\n\t\t},\n\n\t\tclickLinkButton: function ( e, context ) {\n\t\t\tvar range = context.invoke( 'editor.createRange' );\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\tvar text = range.toString()\n\t\t\tthis.currentContext = context;\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\n\t\t\t});\n\t\t},\n\n\t\tclickExtra: function( e ) {\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\n\t\t\t\tvar text = textEl.val();\n\t\t\t\tvar url = urlEl.val();\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttextEl.val( '' );\n\t\t\turlEl.val( '' );\n\t\t\tisNewWindowEl.prop( 'checked', false );\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\n\t\t},\n\n\t\tinsertMedia: function( media, context ) {\n\t\t\tcontext.invoke( 'editor.restoreRange' );\n\t\t\tif ( 'image' == media.type ) {\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\n\t\t\t} else {\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldStarRating',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        initialize: function() {\n        \tthis.listenTo( nfRadio.channel( 'starrating' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'starrating' ), 'render:view', this.initRating );\n        },\n\n        register: function( model ) {\n\t\t\tmodel.set( 'renderRatings', this.renderRatings );\n\t\t},\n\n        initRating: function( view ){\n            jQuery( view.el ).find( '.starrating' ).rating();\n        },\n\n        renderRatings: function() {\n        \tvar html = '';\n        \tfor (var i = this.default - 1; i >= 0; i--) {\n        \t\tvar template = _.template( jQuery( '#nf-tmpl-field-starrating-star' ).html() );\n        \t\tvar num = i + 1;\n        \t\thtml += template( { id: this.id, classes: this.classes, num: num } );\n        \t}\n        \treturn html;\n        }\n\n    });\n\n    return controller;\n});\n","/**\n * Before we display our fields, ask if anyone wants to give us a different view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fieldContentsFilters',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Init our fieldContents view filter array.\n\t\t\t */\n\t\t\tthis.viewFilters = [];\n\t\t\tthis.loadFilters = [];\n\n\t\t\t/*\n\t\t\t * Listen for requests to add new fieldContent filters. \n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:viewFilter', this.addViewFilter, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:loadFilter', this.addLoadFilter, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests to get our fieldContent filters.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:viewFilters', this.getViewFilters, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:loadFilters', this.getLoadFilters, this );\n\t\t},\n\n\t\taddViewFilter: function( callback, priority ) {\n\t\t\tthis.viewFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetViewFilters: function() {\n\t\t\treturn this.viewFilters;\n\t\t},\n\n\t\taddLoadFilter: function( callback, priority ) {\n\t\t\tthis.loadFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetLoadFilters: function() {\n\t\t\treturn this.loadFilters;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/fieldItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\n\t\tinitialize: function() {\n\t\t\t// _.bindAll( this, 'render' );\n    \t\tthis.model.on( 'change:reRender', this.maybeRender, this );\n    \t\tthis.model.on( 'change:errors', this.changeError, this );\n    \t\tthis.model.on( 'change:addWrapperClass', this.addWrapperClass, this );\n    \t\tthis.model.on( 'change:removeWrapperClass', this.removeWrapperClass, this );\n    \t\t// this.listenTo( nfRadio.channel( 'submit' ), 'before:submit', this.test );\n\n    \t\tthis.template = '#nf-tmpl-field-' + this.model.get( 'wrap_template' );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:reRender', this.maybeRender );\n    \t\tthis.model.off( 'change:errors', this.changeError );\n    \t\tthis.model.off( 'change:addWrapperClass', this.addWrapperClass );\n    \t\tthis.model.off( 'change:removeWrapperClass', this.removeWrapperClass );\n\t\t},\n\n\t\ttest: function( model ) {\n\t\t\tconsole.log( 'firing from trigger 1' );\n\t\t},\n\n\t\tchangeError: function() {\n\t\t\tif ( 0 == this.model.get( 'errors' ).models.length ) {\n\t\t\t\tthis.model.removeWrapperClass( 'nf-error' );\n\t\t\t\tthis.model.removeWrapperClass( 'nf-fail' );\n\t\t\t\tthis.model.addWrapperClass( 'nf-pass' );\n\t\t\t} else {\n\t\t\t\tthis.model.removeWrapperClass( 'nf-pass' );\n\t\t\t\tthis.model.addWrapperClass( 'nf-fail' );\n\t\t\t\tthis.model.addWrapperClass( 'nf-error' );\n\t\t\t}\n\t\t},\n\n\t\taddWrapperClass: function() {\n\t\t\tvar cl = this.model.get( 'addWrapperClass' );\n\t\t\tif ( '' != cl ) {\n\t\t\t\tjQuery( this.el ).addClass( cl );\n\t\t\t\tthis.model.set( 'addWrapperClass', '' );\n\t\t\t}\n\t\t},\n\n\t\tremoveWrapperClass: function() {\n\t\t\tvar cl = this.model.get( 'removeWrapperClass' );\n\t\t\tif ( '' != cl ) {\n\t\t\t\tjQuery( this.el ).removeClass( cl );\n\t\t\t\tthis.model.set( 'removeWrapperClass', '' );\n\t\t\t}\n\t\t},\n\n\t\tmaybeRender: function() {\n\t\t\tif ( this.model.get( 'reRender' ) ) {\n\t\t\t\tthis.model.set( 'reRender', false, { silent: true } );\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar el = jQuery( this.el ).children( '.nf-error-wrap' );\n\n    \t\t/*\n    \t\t * If we have an input mask, init that mask.\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\n    \t\t */\n    \t\tif ( 'undefined' != typeof this.model.get( 'mask' ) && '' != jQuery.trim( this.model.get( 'mask' ) ) ) {\n    \t\t\tif ( 'custom' == this.model.get( 'mask') ) {\n    \t\t\t\tvar mask = this.model.get( 'custom_mask' );\n    \t\t\t} else {\n    \t\t\t\tvar mask = this.model.get( 'mask' );\n    \t\t\t}\n\n    \t\t\tif ( Number.isInteger( mask ) ) {\n    \t\t\t\tmask = mask.toString();\n    \t\t\t}\n\n    \t\t\tjQuery( this.el ).find( '.nf-element' ).mask( mask );\n    \t\t}\n\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'render:view', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'render:view', this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\n\t\t\t\trenderElement: function(){\n\t\t\t\t\tthis.setPlaceholder();\n\t\t\t\t\tthis.setClasses();\n\t\t\t\t\tvar tmpl = _.find( this.element_templates, function( tmpl ) {\n\t\t\t\t\t\tif ( 0 < jQuery( '#nf-tmpl-field-' + tmpl ).length ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-' + tmpl ).html() );\n\t\t\t\t\treturn template( this );\n\t\t\t\t},\n\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-field-label' ).html() );\n\t\t\t\t\treturn template( this );\n\t\t\t\t},\n\n\t\t\t\tsetPlaceholder: function() {\n\t\t\t\t\tif ( 'inside' == this.label_pos ) {\n\t\t\t\t\t\tthis.placeholder = this.label;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderPlaceholder: function() {\n\t\t\t\t\tif( '' != jQuery.trim( this.placeholder ) ) {\n\t\t\t\t\t\treturn 'placeholder=\"' + this.placeholder + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderWrapClass: function() {\n\t\t\t\t\tvar wrapClass = 'field-wrap ' + this.type + '-wrap label-' + this.label_pos;\n\n\t\t\t\t\t// if we have a wrapper_class field setting, add that to our wrap.\n\t\t\t\t\tif ( 'undefined' != typeof this.wrapper_class && 0 < jQuery.trim( this.wrapper_class ).length ) {\n\t\t\t\t\t\twrapClass += ' ' + this.wrapper_class;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we have an old_classname defined, output wrap class for backward compatibility\n\t\t\t\t\tif ( 'undefined' != typeof this.old_classname && 0 < jQuery.trim( this.old_classname ).length ) {\n\t\t\t\t\t\twrapClass += ' ' + this.old_classname + '-wrap';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn wrapClass;\n\n\t\t\t\t},\n\n\t\t\t\tsetClasses: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tthis.classes += ' nf-error';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.classes = this.classes.replace( 'nf-error', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' != typeof this.element_class && 0 < jQuery.trim( this.element_class ).length ) {\n\t\t\t\t\t\tthis.classes += ' ' + this.element_class;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeDisabled: function() {\n\t\t\t\t\tif ( 1 == this.disable_input ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeDisableAutocomplete: function() {\n\t\t\t\t\tif ( 1 == this.disable_browser_autocomplete ) {\n\t\t\t\t\t\treturn 'autocomplete=\"off\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeInputLimit: function() {\n\t\t\t\t\tif ( 'characters' == this.input_limit_type && '' != jQuery.trim( this.input_limit ) ) {\n\t\t\t\t\t\treturn 'maxlength=\"' + this.input_limit + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tgetHelpText: function() {\n\t\t\t\t\tthis.help_text = jQuery( this.help_text ).html();\n\n\t\t\t\t\treturn ( 'undefined' != typeof this.help_text ) ? this.help_text.replace(/\"/g, \"&quot;\") : '';\n\t\t\t\t},\n\n\t\t\t\tmaybeRenderHelp: function() {\n\t\t\t\t\tvar check_text = '<p>' + this.help_text + '</p>';\n\t\t\t\t\tif ( 'undefined' != typeof this.help_text && 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-admin-comments nf-help\" data-text=\"' + this.getHelpText() + '\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderDescText: function() {\n\t\t\t\t\tvar check_text = '<p>' + this.desc_text + '</p>';\n\t\t\t\t\tif ( 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\n\t\t\t\t\t\treturn this.desc_text;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeChecked: function() {\n\t\t\t\t\tif( 'undefined' != typeof this.default_value\n\t\t\t\t\t\t&& 'checked' == this.default_value )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ' checked';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .nf-element': 'fieldChange',\n\t\t\t'keyup .nf-element': 'fieldKeyup',\n\t\t\t'click .nf-element': 'fieldClick',\n\t\t\t'click .extra': 'extraClick',\n\t\t\t'blur .nf-element': 'fieldBlur'\n\t\t},\n\n\t\tfieldChange: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tvar response = nfRadio.channel( 'nfAdmin' ).request( 'change:field', el, this.model );\n\t\t},\n\n\t\tfieldKeyup: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'keyup:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t},\n\n\t\tfieldClick: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:field', el, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:field', el, this.model );\n\t\t},\n\n\t\textraClick: function( e ) {\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:extra', e, this.model );\n\t\t},\n\n\t\tfieldBlur: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'blur:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'blur:field', el, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'blur:field', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/beforeField',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-field-before'\n    });\n\n    return view;\n} );\n","define( 'views/fieldErrorItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#nf-tmpl-field-error',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/fieldErrorCollection',['views/fieldErrorItem'], function( fieldErrorItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: \"nf-errors\",\n\t\tchildView: fieldErrorItem\n\t});\n\n\treturn view;\n} );\n","define( 'views/inputLimit',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-field-input-limit',\n\n        initialize: function() {\n        \tthis.listenTo( nfRadio.channel( 'field-' + this.model.get( 'id' ) ), 'keyup:field', this.updateCount );\n        \tthis.count = this.model.get( 'input_limit' );\n        \tthis.render();\n        },\n\n        updateCount: function( el, model ) {\n            var value = jQuery( el ).val();\n            var regex = /\\s+/gi;\n            var words = value.trim().replace(regex, ' ').split(' ');\n            var wordCount = words.length;\n            var charCount = value.length;\n\n            if ( 'characters' == this.model.get( 'input_limit_type' ) ) {\n                this.count = this.model.get( 'input_limit' ) - charCount;\n                // this.count = charCount;\n            } else {\n                this.count = this.model.get( 'input_limit' ) - wordCount;\n                // this.count = wordCount;\n\n                var limit = this.model.get( 'input_limit' );\n                if( wordCount > limit ){\n                    jQuery( el ).val( words.slice( 0, limit).join( ' ' ) );\n                }\n            }\n\n        \tthis.render();\n        },\n\n        templateHelpers: function() {\n        \tvar that = this;\n        \treturn {\n        \t\tcurrentCount: function() {\n        \t\t\treturn that.count;\n        \t\t}\n        \t}\n        }\n\n    });\n\n    return view;\n} );\n","define( 'views/afterField',['views/fieldErrorCollection', 'views/inputLimit'], function( fieldErrorCollection, InputLimitView ) {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-field-after',\n\n        initialize: function() {\n        \t// this.model.on( 'change:reRender', this.maybeRender, this );\n    \t\tthis.model.on( 'change:errors', this.changeError, this );\n        },\n\n        onRender: function() {\n        \t/*\n        \t * If we have an error, render our error view.\n        \t * TODO: Perhaps move to a controller?\n        \t */\n        \tvar errorEl = jQuery( this.el ).children( '.nf-error-wrap' );\n    \t\tthis.errorCollectionView = new fieldErrorCollection( { el: errorEl, collection: this.model.get( 'errors' ), thisModel: this.model } );\n        \n    \t\t/*\n    \t\t * If we have an input limit set, render the view that contains our counter\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\n    \t\t */\n    \t\tif ( 'undefined' != typeof this.model.get( 'input_limit' ) && '' != jQuery.trim( this.model.get( 'input_limit' ) ) ){\n    \t\t\tvar inputLimitEl = jQuery( this.el ).children( '.nf-input-limit');\n    \t\t\tthis.inputLimitView = new InputLimitView( { el: inputLimitEl, model: this.model } );\n    \t\t}\n        },\n\n        changeError: function() {\n\t\t\tif ( 0 == this.model.get( 'errors' ).models.length ) {\n\t\t\t\tthis.model.removeWrapperClass( 'nf-error' );\n\t\t\t} else {\n\t\t\t\tthis.model.addWrapperClass( 'nf-error' );\n\t\t\t}\n\n\t\t\tthis.errorCollectionView.render();\n\t\t},\n\n    });\n\n    return view;\n} );\n","define( 'views/fieldLayout',['views/fieldItem', 'views/beforeField', 'views/afterField'], function( fieldItem, beforeField, afterField ) {\n\n    var view = Marionette.LayoutView.extend({\n        tagName: \"nf-section\",\n        template: \"#nf-tmpl-field-layout\",\n\n        regions: {\n            beforeField: \".nf-before-field\",\n            field: \".nf-field\",\n            afterField: \".nf-after-field\",\n        },\n\n        onRender: function() {\n            this.$el = this.$el.children();\n            this.$el.unwrap();\n            this.setElement( this.$el );\n\n            jQuery( this.el ).addClass( 'nf-field-container' );\n        },\n\n        onShow: function() {\n            this.beforeField.show( new beforeField( { model: this.model } ) );\n            this.field.show( new fieldItem( { model: this.model } ) );\n            this.afterField.show( new afterField( { model: this.model } ) );\n        }\n\n    });\n\n    return view;\n} );\n","/**\n * Return views that might be used in extensions.\n * These are un-instantiated views.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/loadViews',['views/fieldItem', 'views/fieldLayout'], function( fieldItemView, fieldLayoutView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Reply to requests for our field item view.\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldItem', this.getFieldItem );\n\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldLayout', this.getFieldLayout );\n\t\t},\n\n\t\tgetFieldItem: function( model ) {\n\t\t\treturn fieldItemView;\n\t\t},\n\n\t\tgetFieldLayout: function() {\n\t\t\treturn fieldLayoutView;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define(\n\t'controllers/loadControllers',[\n\t\t'controllers/formData',\n\t\t'controllers/fieldError',\n\t\t'controllers/changeField',\n\t\t'controllers/changeEmail',\n\t\t'controllers/fieldCheckbox',\n\t\t'controllers/fieldCheckboxList',\n\t\t'controllers/fieldRadio',\n\t\t'controllers/fieldNumber',\n\t\t'controllers/mirrorField',\n\t\t'controllers/confirmField',\n\t\t'controllers/updateFieldModel',\n\t\t'controllers/submitInit',\n\t\t'controllers/getFormErrors',\n\t\t'controllers/selectFile',\n\t\t'controllers/validateRequired',\n\t\t'controllers/submitError',\n\t\t'controllers/actionRedirect',\n\t\t'controllers/actionSuccess',\n\t\t'controllers/fieldSelect',\n\t\t'controllers/coreSubmitResponse',\n\t\t'controllers/fieldProduct',\n\t\t'controllers/fieldTotal',\n\t\t'controllers/fieldQuantity',\n\t\t'controllers/calculations',\n\t\t'controllers/fieldDate',\n\t\t'controllers/fieldRecaptcha',\n\t\t'controllers/helpText',\n\t\t'controllers/fieldTextareaRTE',\n\t\t'controllers/fieldStarRating',\n\t\t'controllers/fieldContentsFilters',\n\t\t'controllers/loadViews'\n\t],\n\tfunction(\n\t\tFormData,\n\t\tFieldError,\n\t\tChangeField,\n\t\tChangeEmail,\n\t\tFieldCheckbox,\n\t\tFieldCheckboxList,\n\t\tFieldRadio,\n\t\tFieldNumber,\n\t\tMirrorField,\n\t\tConfirmField,\n\t\tUpdateFieldModel,\n\t\tSubmitInit,\n\t\tGetFormErrors,\n\t\tSelectFile,\n\t\tValidateRequired,\n\t\tSubmitError,\n\t\tActionRedirect,\n\t\tActionSuccess,\n\t\tFieldSelect,\n\t\tCoreSubmitResponse,\n\t\tFieldProduct,\n\t\tFieldTotal,\n\t\tFieldQuantity,\n\t\tCalculations,\n\t\tFieldDate,\n\t\tFieldRecaptcha,\n\t\tHelpText,\n\t\tFieldTextareaRTE,\n\t\tFieldStarRating,\n\t\tFieldContentsFilters,\n\t\tLoadViews\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\n\t\t\t\t/**\n\t\t\t\t * App Controllers\n\t\t\t\t */\n\t\t\t\tnew LoadViews();\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Field type controllers\n\t\t\t\t */\n\t\t\t\tnew FieldCheckbox();\n\t\t\t\tnew FieldCheckboxList();\n\t\t\t\tnew FieldRadio();\n\t\t\t\tnew FieldNumber();\n\t\t\t\tnew FieldSelect();\n\t\t\t\tnew FieldProduct();\n\t\t\t\tnew FieldTotal();\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldRecaptcha();\n\t\t\t\tnew HelpText();\n\t\t\t\tnew FieldTextareaRTE();\n\t\t\t\tnew FieldStarRating();\n\t\t\t\tnew FieldContentsFilters();\n\t\t\t\t/**\n\t\t\t\t * Misc controllers\n\t\t\t\t */\n\t\t\t\tnew FieldError();\n\t\t\t\tnew ChangeField();\n\t\t\t\tnew ChangeEmail();\n\t\t\t\t\n\t\t\t\tnew MirrorField();\n\t\t\t\tnew ConfirmField();\n\t\t\t\tnew UpdateFieldModel();\n\t\t\t\tnew SubmitInit();\n\t\t\t\tnew GetFormErrors();\n\t\t\t\tnew SelectFile();\n\t\t\t\tnew ValidateRequired();\n\t\t\t\tnew SubmitError();\n\t\t\t\tnew ActionRedirect();\n\t\t\t\tnew ActionSuccess();\n\t\t\t\t\n\t\t\t\tnew CoreSubmitResponse();\n\t\t\t\tnew Calculations();\n\n\t\t\t\t/**\n\t\t\t\t * Data controllers\n\t\t\t\t */\n\t\t\t\tnew FieldDate();\n\t\t\t\tnew FormData();\n\t\t\t\t\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","define( 'views/beforeForm',[], function( ) {\n\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#nf-tmpl-before-form\"\n\t});\n\n\treturn view;\n} );\n","define( 'views/fieldCollection',['views/fieldLayout'], function( fieldLayout ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'nf-fields-wrap',\n\t\tchildView: fieldLayout\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/afterFields',[], function( ) {\n\n    var view = Marionette.ItemView.extend({\n        tagName: \"nf-section\",\n        template: \"#nf-tmpl-after-fields\",\n\n    });\n\n    return view;\n} );\n","define( 'views/beforeFields',[], function( ) {\n\n    var view = Marionette.ItemView.extend({\n        tagName: \"nf-section\",\n        template: \"#nf-tmpl-before-fields\",\n\n    });\n\n    return view;\n} );\n","define( 'views/formLayout',['views/fieldCollection','views/afterFields', 'views/beforeFields'], function( fieldCollectionView, afterFields, beforeFields ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#nf-tmpl-form-layout\",\n\n\t\tregions: {\n\t\t\tbeforeFields: \".nf-before-fields\",\n\t\t\tfields: \".nf-fields\",\n\t\t\tafterFields: \".nf-after-fields\",\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'form-' + this.model.get( 'id' ) ).reply( 'get:el', this.getEl, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.beforeFields.show( new beforeFields( { model: this.model } ) );\n\t\t\t\n\t\t\t/*\n\t\t\t * Set our fieldContentsData to our form setting 'fieldContentsData'\n\t\t\t */\n\t\t\tvar fieldContentsData = this.model.get( 'fieldContentsData' );\n\n\t\t\t/*\n\t\t\t * Set our default fieldContentsView.\n\t\t\t */\n\t\t\tvar fieldContentsView = fieldCollectionView;\n\t\t\t/*\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t */\n\n\t\t\tvar fieldContentsViewFilters = nfRadio.channel( 'fieldContents' ).request( 'get:viewFilters' );\n\t\t\tif ( 'undefined' != typeof fieldContentsData && 0 != fieldContentsViewFilters.length ) {\n\t\t\t\t/* \n\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t*/\n\t\t\t\tvar sortedArray = _.without( fieldContentsViewFilters, undefined );\n\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\tfieldContentsView = callback();\n\t\t\t}\n\t\t\t\n\t\t\tvar fieldContentsLoadFilters = nfRadio.channel( 'fieldContents' ).request( 'get:loadFilters' );\n\t\t\tif ( 'undefined' != typeof fieldContentsData && 0 != fieldContentsLoadFilters.length ) {\n\t\t\t\t/* \n\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t*/\n\t\t\t\tvar sortedArray = _.without( fieldContentsLoadFilters, undefined );\n\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\tfieldContentsData = callback( fieldContentsData, this.model );\n\t\t\t} else {\n\t\t\t\tfieldContentsData = this.options.fieldCollection;\n\t\t\t}\n\n\t\t\tthis.fields.show( new fieldContentsView( { collection: fieldContentsData } ) );\n\t\t\t\n\t\t\tthis.afterFields.show( new afterFields( { model: this.model } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n        templateHelpers: function () {\n            return {\n\n                renderClasses: function() {\n                    return '';\n                }\n\n            };\n        }\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/afterForm',[], function( ) {\n\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#nf-tmpl-after-form\",\n\t\t\n\t});\n\n\treturn view;\n} );\n","define( 'views/formErrorItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#nf-tmpl-form-error',\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/formErrorCollection',['views/formErrorItem'], function( formErrorItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: \"nf-errors\",\n\t\tchildView: formErrorItem\n\t});\n\n\treturn view;\n} );\n","define( 'views/mainLayout',['views/beforeForm', 'views/formLayout', 'views/afterForm', 'views/formErrorCollection'], function( BeforeForm, FormLayout, AfterForm, FormErrors ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttemplate: '#nf-tmpl-layout',\n\n\t\tregions: {\n\t\t\tresponseMsg: '.nf-response-msg',\n\t\t\tformErrors: '.nf-form-errors',\n\t\t\tbeforeForm: '.nf-before-form',\n\t\t\tformLayout: '.nf-form-layout',\n\t\t\tafterForm: '.nf-after-form'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.$el = jQuery( '#nf-form-' + this.model.id + '-cont' );\n\t\t\tthis.el = '#nf-form-' + this.model.id + '-cont';\n\n\t\t\tthis.render();\n\n\t\t\tthis.formErrors.show( new FormErrors( { collection: this.model.get( 'errors' ) } ) );\n\t\t\tthis.beforeForm.show( new BeforeForm( { model: this.model } ) );\n\t\t\tthis.formLayout.show( new FormLayout( { model: this.model, fieldCollection: this.options.fieldCollection } ) );\n\t\t\tthis.afterForm.show( new AfterForm( { model: this.model } ) );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// var formEl = jQuery( '#nf-form-' + this.model.get( 'id' ) );\n\t\t\t// console.log( formEl );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","jQuery( document ).ready( function( $ ) {\n\trequire( ['models/formCollection', 'models/formModel', 'models/fieldCollection', 'controllers/loadControllers', 'views/mainLayout'], function( formCollection, FormModel, FieldCollection, LoadControllers, mainLayout ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend({\n\t\t\tforms: {},\n\t\t\tinitialize: function( options ) {\n\n\t\t\t\t// TODO: Maybe move the resumeProcessing elsewhere.\n\t\t\t\tif( 'undefined' != typeof nfFrontEnd.resumeProcessing ){\n\t\t\t\t\tvar formData = JSON.stringify( nfFrontEnd.resumeProcessing );\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\t'action': 'nf_ajax_resume',\n\t\t\t\t\t\t'security': nfFrontEnd.ajaxNonce,\n\t\t\t\t\t\t'formData': formData\n\t\t\t\t\t};\n\n\t\t\t\t\tjQuery.ajax({\n\t\t\t\t\t\turl: nfFrontEnd.adminAjax,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\tsuccess: function( data, textStatus, jqXHR ) {\n\t\t\t\t\t\t\tvar response = jQuery.parseJSON( data );\n\n\t\t\t\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'submit:response', response, textStatus, jqXHR );\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function( jqXHR, textStatus, errorThrown ) {\n\t\t\t\t\t\t\t// Handle errors here\n\t\t\t\t\t\t\tconsole.log('ERRORS: ' + textStatus);\n\t\t\t\t\t\t\t// STOP LOADING SPINNER\n\n\t\t\t\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers' );\n\t\t\t},\n\t\t\t\n\t\t\tonStart: function() {\n\t\t\t\tvar formCollection = nfRadio.channel( 'app' ).request( 'get:forms' );\n\t\t\t\t_.each( formCollection.models, function( form, index ) {\n\t\t\t\t\tvar layoutView = new mainLayout( { model: form, fieldCollection: form.get( 'fields' ) } );\t\t\t\n\t\t\t\t\tnfRadio.channel( 'form' ).trigger( 'render:view', layoutView );\n\t\t\t\t} );\n\t\t\t}\n\t\t});\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\t\t\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}