{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","models/formModel.js","models/formCollection.js","models/fieldErrorModel.js","models/fieldErrorCollection.js","models/fieldModel.js","models/fieldCollection.js","models/formErrorModel.js","models/formErrorCollection.js","controllers/formData.js","controllers/fieldError.js","controllers/changeField.js","controllers/changeEmail.js","controllers/fieldCheckbox.js","controllers/fieldCheckboxList.js","controllers/fieldRadio.js","controllers/fieldNumber.js","controllers/mirrorField.js","controllers/confirmField.js","controllers/updateFieldModel.js","controllers/submitButton.js","controllers/submitDebug.js","controllers/getFormErrors.js","models/fileModel.js","models/fileCollection.js","views/fileItem.js","views/fileCollection.js","controllers/selectFile.js","controllers/validateRequired.js","controllers/submitError.js","controllers/actionRedirect.js","controllers/actionSuccess.js","controllers/fieldSelect.js","controllers/coreSubmitResponse.js","controllers/fieldProduct.js","controllers/fieldTotal.js","controllers/fieldQuantity.js","models/calcModel.js","models/calcCollection.js","controllers/calculations.js","controllers/fieldDate.js","controllers/fieldRecaptcha.js","controllers/helpText.js","controllers/fieldTextareaRTE.js","controllers/fieldStarRating.js","controllers/fieldTerms.js","controllers/fieldContentsFilters.js","views/fieldItem.js","views/beforeField.js","views/fieldErrorItem.js","views/fieldErrorCollection.js","views/inputLimit.js","views/afterField.js","views/fieldLayout.js","controllers/loadViews.js","controllers/formErrors.js","controllers/submit.js","controllers/loadControllers.js","views/beforeForm.js","views/fieldCollection.js","views/formErrorItem.js","views/formErrorCollection.js","views/honeyPot.js","views/afterFields.js","views/beforeFields.js","views/formLayout.js","views/afterForm.js","views/mainLayout.js","main.js","../../../config-wrap-end-default.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","model","Backbone","Model","extend","defaults","beforeForm","afterForm","beforeFields","afterFields","wrapper_class","element_class","hp","fieldErrors","extra","initialize","that","this","_","each","get","setting","set","nfRadio","channel","reply","getFieldByKey","addError","removeError","trigger","getExtra","addExtra","removeExtra","key","findWhere","msg","errors","add","errorModel","remove","extraData","formModel","collection","Collection","fieldErrorCollection","placeholder","label_pos","classes","reRender","mirror_field","confirm_field","clean","disabled","visible","options","listenTo","resetModel","bind","changeModel","changeValue","formLoaded","beforeSubmit","addWrapperClass","cl","removeWrapperClass","fieldModel","comparator","models","FormModel","FormCollection","FieldCollection","ErrorCollection","controller","Marionette","formCollection","nfForms","form","fields","getForm","getForms","getField","fieldErrorModel","getError","targetID","request","targetError","changeField","blurField","el","val","radioChannel","emailReg","errorID","errorMsg","onChangeModelValue","emailKeyup","onBlurField","fieldID","emailChange","keyCode","registerRenderClasses","validateRequired","beforeUpdateField","getCalcValue","checked","attr","addClass","closest","find","removeClass","calcValue","customClasses","customLabelClasses","maybeChecked","default_value","register","renderOptions","renderOtherText","selected","filter","opt","html","valueFound","option","testValues","toString","isSelected","template","TemplateCache","show_other","data","currentValue","calc_value","tmp_opt","math","calc","parent","clone","changeModelValue","updateCheckedClass","maybeMinDefault","validateMinMax","min","$el","parseInt","max","step","listeningModel","registerMirror","targetModel","registerConfirm","confirmKeyup","confirmModel","formModal","registerConfirmListeners","console","log","confirmID","compareValue","confirmValue","updateField","isArray","submitButton","registerHandlers","click","resetLabel","maybeEnable","maybeDisable","processingLabel","size","response","submitDebug","textStatus","jqXHR","formID","debug","debugMessages","message","getFormErrors","error","field","fileModel","view","ItemView","tagName","onRender","children","unwrap","setElement","append","fileItem","CollectionView","childView","fileCollection","fileCollectionView","initFile","renderView","renderFileInput","changeFile","clickFileButton","fieldView","thisModel","changeCollection","render","hasClass","filename","files","slug","trimmed","trim","fileInput","fileInputClone","off","replaceWith","validateKeyup","validateModelData","customReqValidation","defaultReqValidation","maskPlaceholder","valid","maybeError","submitErrors","actionRedirect","halt","redirect","window","location","actions","actionSubmit","success_message","renderOtherAttributes","otherAttributes","type","settings","clear_complete","form_id","reset","hide_complete","hide","renderProductQuantity","renderProduct","product_type","product_use_quantity","product_price","product_quantity","totalModel","productTotals","registerShipping","onFormLoaded","onChangeProduct","onChangeQuantity","shippingModel","shippingCost","fieldModels","productFields","quantityFields","productID","product","productPrice","Number","updateTotal","productQuantity","newTotal","productField","quantity","toFixed","registerQuantity","on","changeCalc","targetCalcModel","CalcModel","CalcCollection","calcs","displayFields","registerCalcs","nfFrontEnd","use_merge_tags","calculations","fieldType","initDisplayField","updateDisplayFields","init","calcCollection","calcModel","setupCalc","eq","eqValues","match","RegExp","updateCalcFields","replaceKey","eval","isNumeric","re","replaceAllKeys","calcName","getCalc","initDatepicker","dateObject","pikadayResponsive","format","setDate","moment","initRecaptcha","updateResponse","initHelpText","jBox","theme","content","initTextareaRTEs","clickExtra","meta_image_frame","summernote","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","caret","close","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","currentContext","linkButton","context","mediaButton","toolbar","userSettings","uid","buttons","height","codemirror","lineNumbers","prettifyHtml","callbacks","onChange","ui","linkDropdown","buttonGroup","button","className","contents","tooltip","clickLinkButton","toggle","dropdown","openMediaManager","invoke","open","wp","media","frames","title","text","media_attachment","state","first","toJSON","insertMedia","range","target","focus","textEl","urlEl","isNewWindowEl","url","isNewWindow","initRating","renderRatings","rating","num","keyUpExtra","currentTarget","addOption","new_option","label","viewFilters","loadFilters","addViewFilter","addLoadFilter","getViewFilters","getLoadFilters","priority","changeError","onBeforeDestroy","mask","isInteger","templateHelpers","renderElement","tmpl","element_templates","renderLabel","renderLabelClasses","renderPlaceholder","customPlaceholder","renderWrapClass","wrapClass","old_classname","customWrapClass","renderClasses","maybeDisabled","disable_input","maybeDisableAutocomplete","disable_browser_autocomplete","maybeInputLimit","input_limit_type","input_limit","getHelpText","help_text","maybeRenderHelp","check_text","renderDescText","desc_text","events","change .nf-element","keyup .nf-element","click .nf-element","click .extra","blur .nf-element","fieldChange","fieldKeyup","fieldClick","extraClick","fieldBlur","fieldErrorItem","updateCount","count","regex","words","wordCount","charCount","limit","currentCount","InputLimitView","errorEl","errorCollectionView","inputLimitEl","inputLimitView","fieldItem","beforeField","afterField","LayoutView","regions","onShow","show","empty","renderContainerClass","containerClass","desc_pos","container_class","fieldItemView","fieldLayoutView","getFieldItem","getFieldLayout","omit","registerSubmitHandler","submit","fieldDataDefaults","fieldData","fieldContentsData","formData","JSON","stringify","action","security","ajaxNonce","ajax","adminAjax","cache","success","parseJSON","errorThrown","FormData","FieldError","ChangeField","ChangeEmail","FieldCheckbox","FieldCheckboxList","FieldRadio","FieldNumber","MirrorField","ConfirmField","UpdateFieldModel","SubmitButton","SubmitDebug","GetFormErrors","SelectFile","ValidateRequired","SubmitError","ActionRedirect","ActionSuccess","FieldSelect","CoreSubmitResponse","FieldProduct","FieldTotal","FieldQuantity","Calculations","FieldDate","FieldRecaptcha","HelpText","FieldTextareaRTE","FieldStarRating","FieldTerms","FieldContentsFilters","LoadViews","FormErrors","Submit","fieldLayout","formErrorItem","keyup .nf-field-hp","change .nf-field-hp","HoneyPot","fieldCollectionView","getEl","fieldContentsView","fieldContentsViewFilters","sortedArray","without","fieldContentsLoadFilters","fieldCollection","BeforeForm","FormLayout","AfterForm","responseMsg","formLayout","document","ready","$","LoadControllers","mainLayout","NinjaForms","Application","forms","urlParameters","object","compact","search","item","nf_resume","restart","onStart","layoutView","ninjaForms","start"],"mappings":"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CAoH,GACA6V,OAAA,iBACAC,SAAA7M,WAAA8M,UACAL,SAAAA,EAKA5d,QAAAke,MACArG,IAAA1G,WAAAgN,UACA3P,KAAA,OACAtG,KAAAA,EACAkW,OAAA,EACAC,QAAA,SAAAnW,EAAA0C,EAAAC,GACA,GAAAH,GAAA1K,OAAAse,UAAApW,EACA3G,SAAAC,QAAA,SAAAK,QAAA,kBAAA6I,EAAAE,EAAAC,EAAApI,EAAArB,IAAA,OACAG,QAAAC,QAAA,QAAAiB,EAAArB,IAAA,OAAAS,QAAA,kBAAA6I,EAAAE,EAAAC,IAEAM,MAAA,SAAAN,EAAAD,EAAA2T,GAEA5U,QAAAC,IAAA,WAAAgB,GAEArJ,QAAAC,QAAA,SAAAK,QAAA,kBAAA,QAAA+I,EAAAC,EAAA0T,QAQA,OAAA/Z,KAEAlK,EC1GA,+BACA,uBACA,yBACA,0BACA,0BACA,4BACA,gCACA,yBACA,0BACA,0BACA,2BACA,+BACA,2BACA,0BACA,4BACA,yBACA,+BACA,0BACA,6BACA,4BACA,0BACA,iCACA,2BACA,yBACA,4BACA,2BACA,wBACA,6BACA,uBACA,+BACA,8BACA,yBACA,mCACA,wBACA,yBACA,sBAEA,SACAkkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAlc,GAAAC,WAAApG,OAAA+B,QACAW,WAAA,WAKA,GAAAyf,GACA,GAAAC,GACA,GAAAC,GAKA,GAAA9B,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAY,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAA9B,GACA,GAAAC,GACA,GAAAC,GAEA,GAAAK,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GA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cAGA9gB,SAAAC,QAAA,QAAAiB,EAAArB,IAAA,OAAAS,QAAA,kBACAN,QAAAC,QAAA,QAAAiB,EAAArB,IAAA,OAAAS,QAAA,mBAGA7B,OAAAke,MACArG,IAAA1G,WAAAgN,UACA3P,KAAA,OACAtG,KAAAA,EACAkW,OAAA,EACAC,QAAA,SAAAnW,EAAA0C,EAAAC,GACA,GAAAH,GAAA1K,OAAAse,UAAApW,EACA3G,SAAAC,QAAA,SAAAK,QAAA,kBAAA6I,EAAAE,EAAAC,EAAApI,EAAArB,IAAA,OACAG,QAAAC,QAAA,QAAAiB,EAAArB,IAAA,OAAAS,QAAA,kBAAA6I,EAAAE,EAAAC,IAEAM,MAAA,SAAAN,EAAAD,EAAA2T,GAEA5U,QAAAC,IAAA,WAAAgB,GAEArJ,QAAAC,QAAA,SAAAK,QAAA,kBAAA,QAAA+I,EAAAC,EAAA0T,UAOAuE,EAAA,GAAAZ,EACAY,GAAAC,YAGAzoB,EAAA,OAAA;ApjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA,ADgFA;AC/EA;AACA;AACA;AACA;AACA;ACLA,ADMA;ACLA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;AACA,ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnGA,ADoGA;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;ACLA,ADMA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA,ADqEA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA,AD+CA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA,ADiEA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpvhFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA,ADuBA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;AACA,ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;ACNA,ADOA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA,ADuFA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACljHA,ADkHA;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjlHA,ADmHA;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACztBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACplOA,ADmOA;AClOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClQA,ADmQA;AClQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA,AD6CA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA,ADyDA;ACxnxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA,ADmFA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA,ADgCA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA,ADiEA","file":"front-end.js","sourcesContent":["(function () {\n","/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","define( 'models/formModel',[], function() {\n\tvar model = Backbone.Model.extend({\n\t\tdefaults: {\n\t\t\tbeforeForm: '',\n\t\t\tafterForm: '',\n\t\t\tbeforeFields: '',\n\t\t\tafterFields: '',\n\t\t\twrapper_class: '',\n\t\t\telement_class: '',\n\t\t\thp: '',\n\t\t\tfieldErrors: {},\n\t\t\textra: {}\n\t\t},\n\n\t\tinitialize: function() {\n\n\t\t\t/*\n\t\t\t * Loop over settings and map to attributes\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t_.each( this.get( 'settings' ), function( value, setting ) {\n\t\t\t\tthat.set( setting, value );\n\t\t\t});\n\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:fieldByKey', this.getFieldByKey, this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:error', this.addError, this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:error', this.removeError, this );\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'init:model', this );\n\n\t\t\t/*\n\t\t\t * Extra Data\n\t\t\t */\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:extra',    this.getExtra,    this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:extra',    this.addExtra,    this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:extra', this.removeExtra, this );\n\t\t},\n\n\t\tgetFieldByKey: function( key ) {\n\t\t\treturn this.get( 'fields' ).findWhere( { key: key } );\n\t\t},\n\n\t\taddError: function( id, msg ) {\n\t\t\tvar errors = this.get( 'errors' );\n\t\t\terrors.add( { id: id, msg: msg } );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'add:error', this, id, msg );\n\t\t},\n\n\t\tremoveError: function( id ) {\n\t\t\tvar errors = this.get( 'errors' );\n\t\t\tvar errorModel = errors.get( id );\n\t\t\terrors.remove( errorModel );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'remove:error', this, id );\n\t\t},\n\n\t\t/*\n\t\t * Extra Data\n\t\t */\n\n\t\tgetExtra: function( key ) {\n\t\t\tvar extraData = this.get( 'extra' );\n\t\t\tif( 'undefined' == typeof key ) return extraData;\n\t\t\treturn extraData[ key ];\n\t\t},\n\n\t\taddExtra: function( key, value ) {\n\t\t\tvar extraData = this.get( 'extra' );\n\t\t\textraData[ key ] = value;\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'add:extra', this, key, value );\n\t\t},\n\n\t\tremoveExtra: function( key ) {\n\t\t\tvar extraData = this.get( 'extra' );\n\t\t\tdelete extraData[ key ];\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'remove:extra', this, key );\n\t\t},\n\t} );\n\n\treturn model;\n} );\n","define( 'models/formCollection',['models/formModel'], function( formModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: formModel\n\t} );\n\treturn collection;\n} );\n","define( 'models/fieldErrorModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/fieldErrorCollection',['models/fieldErrorModel'], function( errorModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: errorModel\n\t} );\n\treturn collection;\n} );\n","define( 'models/fieldModel',['models/fieldErrorCollection'], function( fieldErrorCollection ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tplaceholder: '',\n\t\t\tvalue: '',\n\t\t\tlabel_pos: '',\n\t\t\tclasses: 'ninja-forms-field',\n\t\t\treRender: false,\n\t\t\tmirror_field: false,\n\t\t\tconfirm_field: false,\n\t\t\tclean: true,\n\t\t\tdisabled: '',\n\t\t\tvisible: true\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'reset', this.resetModel );\n\n    \t\tthis.bind( 'change', this.changeModel, this );\n    \t\tthis.bind( 'change:value', this.changeValue, this );\n    \t\tthis.set( 'errors', new fieldErrorCollection() );\n\n    \t\t/*\n\t\t\t * Trigger an init event on two channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:model', this );\n\n\t\t\tif( 'undefined' != this.get( 'parentType' ) ){\n\t\t\t\tnfRadio.channel( this.get( 'parentType' ) ).trigger( 'init:model', this );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * When we load our form, fire another event for this field.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'loaded', this.formLoaded );\n\t\t\n\t\t\t/*\n\t\t\t * Before we submit our form, we need to validate each field.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'before:submit', this.beforeSubmit );\n\t\t},\n\n\t\tresetModel: function() {\n\t\t\t/*\n\t\t\t * Trigger an init event on two channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\t// nfRadio.channel( 'fields' ).trigger( 'init:model', this );\n\t\t\t// nfRadio.channel( this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t\t// nfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t},\n\n\t\tchangeModel: function() {\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:model', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:model', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:model', this );\n\t\t},\n\n\t\tchangeValue: function() {\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:modelValue', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:modelValue', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:modelValue', this );\n\t\t},\n\n\t\taddWrapperClass: function( cl ) {\n\t\t\tthis.set( 'addWrapperClass', cl );\n\t\t},\n\n\t\tremoveWrapperClass: function( cl ) {\n\t\t\tthis.set( 'removeWrapperClass', cl );\n\t\t},\n\n\t\tformLoaded: function() {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'formLoaded', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'formLoaded', this );\n\t\t},\n\n\t\tbeforeSubmit: function( formModel ) {\n\t\t\tnfRadio.channel( 'submit' ).trigger( 'validate:field', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'before:submit', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'before:submit', this );\n\t\t}\n\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/fieldCollection',['models/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'models/formErrorModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/formErrorCollection',['models/formErrorModel'], function( errorModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: errorModel\n\t} );\n\treturn collection;\n} );\n","/*\n * Handles setting up our form.\n *\n * Holds a collection of our fields.\n * Replies to requests for field data.\n * Updates field models.\n */\ndefine('controllers/formData',['models/formModel', 'models/formCollection', 'models/fieldCollection', 'models/formErrorCollection'], function( FormModel, FormCollection, FieldCollection, ErrorCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Setup our field collections.\n\t\t\t */\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Initialize our form collection (incase we have multiple forms on the page)\n\t\t\t */\n\t\t\tthis.formCollection = new FormCollection();\n\n\t\t\t_.each( nfForms, function( form, index ) {\n\t\t\t\tvar formModel = new FormModel( form );\n\t\t\t\tthat.formCollection.add( formModel );\n\t\t\t\tvar fields = new FieldCollection( form.fields, { formModel: formModel } );\n\t\t\t\tformModel.set( 'fields', fields );\n\t\t\t\tformModel.set( 'loadedFields', form.fields );\n\t\t\t\tvar errors = new ErrorCollection();\n\t\t\t\tformModel.set( 'errors', errors );\n\t\t\t\tnfRadio.channel( 'form' ).trigger( 'loaded', formModel );\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'loaded', formModel );\n\t\t\t} );\n\n\t\t\t// _.each( this.formCollection.models, function( form ) {\n\t\t\t// \t_.each( form.get( 'fields' ).models, function( field ) {\n\t\t\t// \t\tnfRadio.channel( field.get( 'type' ) ).trigger( 'init:model', field );\n\t\t\t// \t\tnfRadio.channel( 'fields' ).trigger( 'init:model', field );\n\t\t\t// \t} );\n\t\t\t\t\n\t\t\t// \tnfRadio.channel( 'form' ).trigger( 'loaded', form );\n\t\t\t// \tnfRadio.channel( 'form-' + form.get( 'id' ) ).trigger( 'loaded', form );\n\t\t\t// } );\n\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:form', this.getForm, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:forms', this.getForms, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t},\n\n\t\tgetForm: function( id ) {\n\t\t\treturn this.formCollection.get( id );\n\t\t},\n\n\t\tgetForms: function() {\n\t\t\treturn this.formCollection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\tvar model = false;\n\t\t\t_.each( this.formCollection.models, function( form ) {\n\t\t\t\tif ( ! model ) {\n\t\t\t\t\tmodel = form.get( 'fields' ).get( id );\t\n\t\t\t\t}\t\t\t\n\t\t\t} );\n\t\t\treturn model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldError',['models/fieldErrorModel'], function( fieldErrorModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add:error', this.addError );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:error', this.removeError );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:error', this.getError );\n\t\t},\n\n\t\taddError: function( targetID, id, msg ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\terrors.add( { 'id': id, 'msg' : msg } );\n\t\t\tmodel.set( 'errors', errors );\n\t\t\tmodel.trigger( 'change:errors', model );\n\t\t\tmodel.set( 'clean', false );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:error', model, id, msg );\n\t\t},\n\n\t\tremoveError: function( targetID, id ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\n\t\t\tif( 'undefined' == typeof model ) return;\n\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\tvar targetError = errors.get( id );\n\t\t\tif ( 'undefined' != typeof targetError ) {\n\t\t\t\terrors.remove( targetError );\n\t\t\t\tmodel.set( 'errors', errors );\n\t\t\t\tmodel.trigger( 'change:errors', model );\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'remove:error', model, id );\n\t\t\t}\n\t\t},\n\n\t\tgetError: function( targetID, id ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\tvar targetError = errors.get( id );\n\t\t\tif ( 'undefined' != targetError ) {\n\t\t\t\treturn targetError;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Controller responsible for replying to a Radio request stating that a field has been changed.\n *\n * This controller sends out a message to the field-specific channel, the field type channel,\n * and the public fields channel so that the data model can be updated.\n */\n\ndefine('controllers/changeField',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Reply to our request for changing a field.\n\t\t\t */\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'change:field', this.changeField );\n\n\t\t\t/*\n\t\t\t * If we blur our field, set the model attribute of 'clean' to false.\n\t\t\t * 'clean' tracks whether or not the user has every interacted with this element.\n\t\t\t * Some validation, like required, uses this to decide whether or not to add an error.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.blurField );\n\t\t},\n\n\t\tchangeField: function( el, model ) {\n\t\t\t// Get our current value.\n\t\t\tvar value = nfRadio.channel( model.get( 'type' ) ).request( 'before:updateField', el, model );\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : nfRadio.channel( model.get( 'parentType' ) ).request( 'before:updateField', el, model );\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : jQuery( el ).val();\n\n\t\t\t// Set our 'isUpdated' flag to false.\n\t\t\tmodel.set( 'isUpdated', false );\n\n\t\t\t// Set our 'clean' flag to false.\n\t\t\tmodel.set( 'clean', false );\n\n\t\t\t/*\n\t\t\t * Send out a message saying that we've changed a field.\n\t\t\t * The first channel is field id/key specific.\n\t\t\t * The second channel is the field type, i.e. text, email, radio\n\t\t\t * The third channel is a generic 'field' channel.\n\t\t\t *\n\t\t\t * If the submitted value you wish to store in the data model isn't the same as the value received above,\n\t\t\t * you can set that model in the actions below and set the 'isUpdated' model attribute to true.\n\t\t\t * i.e. model.set( 'isUpdated', true );\n\t\t\t */\n\t\t\tnfRadio.channel( 'field-' + model.get( 'id' ) ).trigger( 'change:field', el, model );\n\t\t\tnfRadio.channel( model.get( 'type' ) ).trigger( 'change:field', el, model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:field', el, model );\n\n\t\t\t/*\n\t\t\t * Send a request out on our nfAdmin channel to update our field model.\n\t\t\t * If the field model has a 'isUpdated' property of false, nothing will be updated.\n\t\t\t */\n\t\t\tnfRadio.channel( 'nfAdmin' ).request( 'update:field', model, value );\n\t\t},\n\n\t\tblurField: function( el, model ) {\n\t\t\t// Set our 'clean' flag to false.\n\t\t\tmodel.set( 'clean', false );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/changeEmail',[], function() {\n\tvar radioChannel = nfRadio.channel( 'email' );\n\tvar emailReg = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\tvar errorID = 'invalid-email';\n\tvar errorMsg = 'Please enter a valid email address!';\n\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'change:modelValue', this.onChangeModelValue );\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.emailKeyup );\n\t\t\tthis.listenTo( radioChannel, 'blur:field', this.onBlurField );\n\t\t},\n\n\t\tonChangeModelValue: function( model ) {\n\t\t\tvar value = model.get( 'value' );\n\t\t\tvar fieldID = model.get( 'id' );\n\t\t\tthis.emailChange( value, fieldID );\n\t\t},\n\n\t\tonBlurField: function( el, model ) {\n\t\t\tvar value = jQuery( el ).val();\n\t\t\tvar fieldID = model.get( 'id' );\n\t\t\tthis.emailChange( value, fieldID );\n\t\t},\n\n\t\temailChange: function( value, fieldID ) {\n\t\t\tif ( 0 < value.length ) {\n\t\t\t\tif( emailReg.test( value ) ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t\t} else {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, errorMsg );\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a user types inside of an email field, track their keypresses and add the appropriate class.\n\t\t * If the value validates as an email, add a class of nf-pass\n\t\t * If the value does not validate as email, add a class of nf-fail\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  {object} el    Element that triggered the keyup event.\n\t\t * @param  {object} model Model connected to the element that triggered the event\n\t\t * @return {void}\n\t\t */\n\t\temailKeyup: function( el, model, keyCode ) {\n\t\t\t/*\n\t\t\t * If we pressed the 'tab' key to get to this field, return false.\n\t\t\t */\n\t\t\tif ( 9 == keyCode ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Get the current value from our element.\n\t\t\t */\n\t\t\tvar value = jQuery( el ).val();\n\n\t\t\t/*\n\t\t\t * Get our current ID\n\t\t\t */\n\t\t\tvar fieldID = model.get( 'id' );\n\n\t\t\t/*\n\t\t\t * Check our value to see if it is a valid email.\n\t\t\t */\n\t\t\t\n\t\t\tif ( 0 == value.length ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t} else if ( ! emailReg.test( value ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, errorMsg );\n\t\t\t} else if ( emailReg.test( value ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldCheckbox',[], function() {\n\tvar radioChannel = nfRadio.channel( 'checkbox' );\n\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * When we init our checkbox model, register our renderClasses() function\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'checkbox' ), 'init:model', this.registerRenderClasses );\n\n\t\t\tradioChannel.reply( 'validate:required', this.validateRequired );\n            nfRadio.channel( 'checkbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'checkbox' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t},\n\n\t\tbeforeUpdateField: function( el, model ) {\n\t\t\tvar checked = jQuery( el ).attr( 'checked' );\n\t\t\tif ( checked ) {\n\t\t\t\tvar value = 1;\n\t\t\t\tjQuery( el ).addClass( 'nf-checked' );\n\t\t\t\tjQuery( el ).closest( '.field-wrap' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t\tjQuery( el ).removeClass( 'nf-checked' );\n\t\t\t\tjQuery( el ).closest( '.field-wrap' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).removeClass( 'nf-checked-label' );\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\tvalidateRequired: function( el, model ) {\n\t\t\treturn el[0].checked;\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tif ( 1 == fieldModel.get( 'value' ) ) {\n\t\t\t\tcalcValue = fieldModel.get( 'checked_calc_value' );\n\t\t\t} else {\n\t\t\t\tcalcValue = fieldModel.get( 'unchecked_calc_value' );\n\t\t\t}\n\n\t\t\treturn calcValue;\n\t\t},\n\n\t\tregisterRenderClasses: function( model ) {\n\t\t\tif ( 'checked' == model.get( 'default_value' ) ) {\n\t\t\t\tmodel.set( 'value', 1 );\n\t\t\t} else {\n\t\t\t\tmodel.set( 'value', 0 );\n\t\t\t}\n\t\t\tmodel.set( 'customClasses', this.customClasses );\n\t\t\tmodel.set( 'customLabelClasses', this.customLabelClasses );\n\t\t\tmodel.set( 'maybeChecked', this.maybeChecked );\n\t\t},\n\n\t\tcustomClasses: function( classes ) {\n\t\t\tif ( 1 == this.value || ( 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\n\t\t\t\tclasses += ' nf-checked';\n\t\t\t} else {\n\t\t\t\tclasses.replace( 'nf-checked', '' );\n\t\t\t}\n\t\t\treturn classes;\n\t\t},\n\n\t\tcustomLabelClasses: function( classes ) {\n\t\t\tif ( 1 == this.value || ( 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\n\t\t\t\tclasses += ' nf-checked-label';\n\t\t\t} else {\n\t\t\t\tclasses.replace( 'nf-checked-label', '' );\n\t\t\t}\n\t\t\treturn classes;\n\t\t},\n\n\t\tmaybeChecked: function() {\n\t\t\tif ( 1 == this.value || ( 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\n\t\t\t\treturn ' checked';\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldCheckboxList',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'listcheckbox' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\n            nfRadio.channel( 'listcheckbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'terms' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'listcheckbox' ).reply( 'get:calcValue', this.getCalcValue, this );\n            nfRadio.channel( 'terms' ).reply( 'get:calcValue', this.getCalcValue, this );\n        },\n\n        register: function( model ) {\n            model.set( 'renderOptions', this.renderOptions );\n            model.set( 'renderOtherText', this.renderOtherText );\n            model.set( 'selected', [] );\n\n            /*\n             * When we init a model, we need to set our 'value' to the selected option's value.\n             * This is the list equivalent of a 'default value'.\n             */ \n            if ( 0 != model.get( 'options' ).length ) {\n                var selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n                selected = _.map( selected, function( opt ) { return opt.value } );\n                model.set( 'value', selected );\n            }\n\n        },\n\n        renderOptions: function() {\n            var that = this;\n            var html = '';\n            if ( '' == this.value ) {\n                var valueFound = true;\n            } else {\n                var valueFound = false;\n            }\n\n            _.each( this.options, function( option, index ) {\n                if ( option.value == that.value ) {\n                    valueFound = true;\n                }\n\n                option.fieldID = that.id;\n                option.classes = that.classes;\n                option.index = index;\n\n                if( option.selected ){\n                    that.selected.push( option.value );\n                }\n\n                var testValues = _.map( that.value, function( value ) {\n                    return value.toString();\n                } );\n\n                option.isSelected = ( -1 != testValues.indexOf( option.value.toString() ) );\n                var template = Marionette.TemplateCache.get( '#nf-tmpl-field-listcheckbox-option' );\n                html += template( option );\n            } );\n\n            if ( 1 == this.show_other ) {\n                if ( 'nf-other' == this.value ) {\n                    valueFound = false;\n                }\n                var data = {\n                    fieldID: this.id,\n                    classes: this.classes,\n                    currentValue: this.value,\n                    renderOtherText: this.renderOtherText,\n                    valueFound: valueFound\n                };\n\n                var template = Marionette.TemplateCache.get( '#nf-tmpl-field-listcheckbox-other' );\n                html += template( data );\n\n            }\n\n            return html;\n        },\n\n        renderOtherText: function() {\n            if ( 'nf-other' == this.currentValue || ! this.valueFound ) {\n                if ( 'nf-other' == this.currentValue ) {\n                    this.currentValue = '';\n                }\n                var data = {\n                    fieldID: this.fieldID,\n                    classes: this.classes,\n                    currentValue: this.currentValue\n                };\n                var template = Marionette.TemplateCache.get( '#nf-tmpl-field-listcheckbox-other-text' );\n                return template( data );\n            }\n        },\n\n        getCalcValue: function( fieldModel ) {\n            var calc_value = 0;\n            var options = fieldModel.get( 'options' );\n            if ( 0 != options.length ) {\n                _.each( fieldModel.get( 'value' ), function( val ) {\n                    var tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\n                    calc_value = math.add( calc_value, tmp_opt.calc );\n                } );\n            }\n            return calc_value;\n        },\n\n        beforeUpdateField: function( el, model ) {\n            var selected = model.get( 'value' ) || [];\n            if ( typeof selected == 'string' ) selected = [ selected ];\n\n            var value = jQuery( el ).val();\n            var checked = jQuery( el ).attr( 'checked' );\n            if ( checked ) {\n                selected.push( value );\n                jQuery( el ).addClass( 'nf-checked' );\n                jQuery( el ).parent().find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\n            } else {\n                jQuery( el ).removeClass( 'nf-checked' );\n                jQuery( el ).parent().find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).removeClass( 'nf-checked-label' );\n                var i = selected.indexOf( value );\n                if( -1 != i ){\n                    selected.splice( i, 1 );\n                }\n            }\n\n            // if ( 1 == model.get( 'show_other' ) ) {\n            //     model.set( 'reRender', true );\n            // }\n\n            return _.clone( selected );\n        }\n    });\n\n    return controller;\n} );\n","define('controllers/fieldRadio',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:modelValue', this.changeModelValue );\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'init:model', this.register );\n\t\t\tnfRadio.channel( 'listradio' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:field', this.updateCheckedClass, this );\n\t\t},\n\n\t\tregister: function( model ) {\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\n\t\t\tmodel.set( 'renderOtherText', this.renderOtherText );\n\t\t\t/*\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\n\t\t\t * This is the list equivalent of a 'default value'.\n\t\t\t */ \n\t\t\tif ( 0 != model.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t */\n\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t/*\n\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t */\n\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\tselected = model.get( 'options' )[0];\n\t\t\t\t}\n\n\t\t\t\tmodel.set( 'value', selected.value );\n\t\t\t}\n\t\t},\n\n\t\tchangeModelValue: function( model ) {\n\t\t\tif ( 1 == model.get( 'show_other' ) ) {\n\t\t\t\t// model.set( 'reRender', true );\n\t\t\t\tmodel.trigger( 'reRender');\n\t\t\t}\n\t\t},\n\n\t\trenderOptions: function() {\n\t\t\tvar that = this;\n\t\t\tvar html = '';\n\t\t\tif ( '' == this.value ) {\n\t\t\t\tvar valueFound = true;\n\t\t\t} else {\n\t\t\t\tvar valueFound = false;\n\t\t\t}\n\t\t\t\n\t\t\t_.each( this.options, function( option, index ) {\n\t\t\t\tif ( option.value == that.value ) {\n\t\t\t\t\tvalueFound = true;\n\t\t\t\t}\n\n\t\t\t\toption.fieldID = that.id;\n\t\t\t\toption.classes = that.classes;\n\t\t\t\toption.currentValue = that.value;\n\t\t\t\toption.index = index;\n\t\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-listradio-option' );\n\t\t\t\thtml += template( option );\n\t\t\t} );\n\n\t\t\tif ( 1 == this.show_other ) {\n\t\t\t\tif ( 'nf-other' == this.value ) {\n\t\t\t\t\tvalueFound = false;\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\tfieldID: this.id,\n\t\t\t\t\tclasses: this.classes,\n\t\t\t\t\tcurrentValue: this.value,\n\t\t\t\t\trenderOtherText: this.renderOtherText,\n\t\t\t\t\tvalueFound: valueFound\n\t\t\t\t};\n\t\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-listradio-other' );\n\t\t\t\thtml += template( data );\n\t\t\t}\n\n\t\t\treturn html;\n\t\t},\n\n\t\trenderOtherText: function() {\n\t\t\tif ( 'nf-other' == this.currentValue || ! this.valueFound ) {\n\t\t\t\tif ( 'nf-other' == this.currentValue ) {\n\t\t\t\t\tthis.currentValue = '';\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\tfieldID: this.fieldID,\n\t\t\t\t\tclasses: this.classes,\n\t\t\t\t\tcurrentValue: this.currentValue\n\t\t\t\t};\n\t\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-listradio-other-text' );\n\t\t\t\treturn template( data );\n\t\t\t}\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tvar calc_value = 0;\n\t\t\tif ( 0 != fieldModel.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t */\n\t\t\t\tvar selected = _.find( fieldModel.get( 'options' ), function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\n\t\t\t\t/*\n\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t */\n\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\n\t\t\t\t}\n\n\t\t\t\tvar calc_value = selected.calc;\n\t\t\t}\n\t\t\treturn calc_value;\n\t\t},\n\n\t\tupdateCheckedClass: function( el, model ) {\n\t\t\tjQuery( '[name=\"' + jQuery( el ).attr( 'name' ) + '\"]' ).removeClass( 'nf-checked' );\n\t\t\tjQuery( el ).closest( 'ul' ).find( 'label' ).removeClass( 'nf-checked-label' );\n\t\t\tjQuery( el ).addClass( 'nf-checked' );\n\t\t\tjQuery( el ).closest( 'li' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\n\n\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldNumber',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'number' ), 'init:model', this.maybeMinDefault );\n            this.listenTo( nfRadio.channel( 'number' ), 'keyup:field', this.validateMinMax );\n        },\n\n        maybeMinDefault: function( model ) {\n\n            if( '' == model.get( 'value' ) ){\n                var min = model.get( 'num_min' );\n                model.set( 'value', min );\n            }\n        },\n\n        validateMinMax: function( el, model ) {\n            var $el = jQuery( el );\n            var value = parseInt( $el.val() );\n            var min = $el.attr( 'min' );\n            var max = $el.attr( 'max' );\n            var step = $el.attr( 'step' );\n\n            if( min && value < min ){\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-min', 'Number Min Error' );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-min' );\n            }\n\n            if ( max && value > max ){\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-max', 'Number Max Error' );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-max' );\n            }\n\n            if( value && 0 !== value % step ){\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-step', 'Please increment by ' + step );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-step' );\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","define( 'controllers/mirrorField',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\n\tvar controller = Marionette.Object.extend( {\n\t\tlisteningModel: '',\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerMirror );\n\t\t},\n\n\t\tregisterMirror: function( model ) {\n\t\t\tif ( model.get( 'mirror_field' ) ) {\n\t\t\t\tthis.listeningModel = model;\n\t\t\t\tvar targetID = model.get( 'mirror_field' );\n\t\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetID ), 'change:modelValue', this.changeValue );\n\t\t\t}\n\t\t},\n\n\t\tchangeValue: function( targetModel ) {\n\t\t\tthis.listeningModel.set( 'value', targetModel.get( 'value' ) );\n\t\t\t// this.listeningModel.set( 'reRender', true );\n\t\t\tthis.listeningModel.trigger( 'reRender' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/confirmField',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\tvar errorID = 'confirm-mismatch';\n\tvar errorMsg = 'These fields must match!';\n\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerConfirm );\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.confirmKeyup );\n\t\t},\n\n\t\tregisterConfirm: function( confirmModel ) {\n\t\t\tif ( ! confirmModel.get( 'confirm_field' ) ) return;\n\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', function( formModal ){\n\t\t\t\tthis.registerConfirmListeners( confirmModel );\n\t\t\t});\n\t\t},\n\n\t\tregisterConfirmListeners: function( confirmModel ) {\n\t\t\t\n\t\t\tvar targetModel = nfRadio.channel( 'form-' + confirmModel.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\n\n\t\t\tconsole.log( targetModel );\n\n\t\t\ttargetModel.set( 'confirm_with', confirmModel.get( 'id' ) );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetModel.get( 'id' ) ), 'change:modelValue', this.changeValue );\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + confirmModel.get( 'id' ) ), 'change:modelValue', this.changeValue );\n\t\t},\n\n\t\tchangeValue: function( model ) {\n\t\t\tif ( 'undefined' == typeof model.get( 'confirm_with' ) ) {\n\t\t\t\tvar confirmModel = model;\n\t\t\t\tvar targetModel = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\n\t\t\t} else {\n\t\t\t\tvar targetModel = model;\n\t\t\t\tvar confirmModel = radioChannel.request( 'get:field', targetModel.get( 'confirm_with' ) );\n\t\t\t}\n\t\t\tvar targetID = targetModel.get( 'id' );\n\t\t\tvar confirmID = confirmModel.get( 'id' );\n\n\t\t\tif ( '' == confirmModel.get( 'value' ) || confirmModel.get( 'value' ) == targetModel.get( 'value' ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, errorMsg );\n\t\t\t}\n\t\t},\n\t\t\n\t\tconfirmKeyup: function( el, model, keyCode ) {\n\n\t\t\tvar currentValue = jQuery( el ).val();\n\t\t\tif ( model.get( 'confirm_field' ) ) {\n\t\t\t\tvar confirmModel = model;\n\t\t\t\tvar confirmID = model.get( 'id' );\n\t\t\t\tvar targetModel = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\n\t\t\t\tvar compareValue = targetModel.get( 'value' );\n\t\t\t\tvar confirmValue = currentValue;\n\t\t\t} else if ( model.get( 'confirm_with' ) ) {\n\t\t\t\tvar confirmModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'confirm_with' ) );\n\t\t\t\tvar confirmID = confirmModel.get( 'id' );\n\t\t\t\tvar confirmValue = confirmModel.get( 'value' );\n\t\t\t\tvar compareValue = confirmValue;\n\t\t\t}\n\n\t\t\tif ( 'undefined' !== typeof confirmModel ) {\n\t\t\t\tif ( '' == confirmValue ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t\t} else if ( currentValue == compareValue ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t\t} else {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, errorMsg );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/updateFieldModel',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'update:field', this.updateField );\n\t\t},\n\n\t\tupdateField: function( model, value ) {\n\t\t\tif ( ! model.get( 'isUpdated' ) ) {\n\t\t\t\tmodel.set( 'value', value );\n\t\t\t\tmodel.set( 'isUpdated', true );\n\t\t\t\t/*\n\t\t\t\t * If we're working with an array, it won't trigger a change event on the value attribute.\n\t\t\t\t * Instead, we have to manually trigger a change event.\n\t\t\t\t */ \n\t\t\t\tif ( _.isArray( value ) ) {\n\t\t\t\t\tmodel.trigger( 'change:value', model );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitButton',['controllers/submitButton'], function( submitButton ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'init:model', this.registerHandlers );\n\t\t},\n\n\t\tregisterHandlers: function( fieldModel ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + fieldModel.get( 'id' ) ), 'click:field', this.click, this );\n\t\t\t/*\n\t\t\t * Register an interest in the 'before:submit' event of our form.\n\t\t\t */\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'before:submit', this.beforeSubmit, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'submit:failed', this.resetLabel, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'submit:response', this.resetLabel, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'enable:submit', this.maybeEnable, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'disable:submit', this.maybeDisable, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'processingLabel', this.processingLabel, fieldModel );\n\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'fields' ), 'add:error', this.maybeDisable, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'fields' ), 'remove:error', this.maybeEnable, fieldModel );\n\t\t},\n\n\t\tclick: function( e, fieldModel ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\n\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'submit', formModel );\n\t\t},\n\n\t\tbeforeSubmit: function() {\n\t\t\tthis.set( 'disabled', true );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'formID' ) ).trigger( 'processingLabel', this );\n\t\t},\n\n\t\tmaybeDisable: function( fieldModel ) {\n\t\t\tthis.set( 'disabled', true );\n\t\t\tthis.trigger( 'reRender' );\n\t\t},\n\n\t\tmaybeEnable: function( fieldModel ) {\n\t\t\t/*\n\t\t\t * If the field reporting the error is not on the same form as the submit button, return false;\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof fieldModel && fieldModel.get( 'formID' ) != this.get( 'formID' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', this.get( 'formID' ) );\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' ) ) ) {\n\t\t\t\tthis.set( 'disabled', false );\n\t\t\t\tthis.trigger( 'reRender' );\n\t\t\t}\n\t\t},\n\n\t\tprocessingLabel: function() {\n\t\t\tthis.set( 'oldLabel', this.get( 'label' ) );\n\t\t\tthis.set( 'label', this.get( 'processing_label' ) );\n\t\t\tthis.trigger( 'reRender' );\n\t\t},\n\n\t\tresetLabel: function( response ) {\n\t\t\tthis.set( 'label', this.get( 'oldLabel' ) );\n\t\t\tthis.set( 'disabled', false );\n\t\t\tthis.trigger( 'reRender' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitDebug',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.submitDebug );\n        },\n\n        submitDebug: function( response, textStatus, jqXHR, formID ) {\n            \n            if( 'undefined' == typeof response.debug ) return;\n            \n            var debugMessages = '';\n            _.each( response.debug, function( message, index ){\n                debugMessages += message + '<br />';\n            });\n\n            jQuery( '.nf-debug-msg' ).html( debugMessages );\n        }\n\n    });\n\n    return controller;\n} );\n","define('controllers/getFormErrors',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function( model ) {\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\n\t\t},\n\n\t\tgetFormErrors: function( formID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\n\t\t\tvar errors = false;\n\t\t\t\n\t\t\tif ( formModel ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have any errors on our form model.\n\t\t\t\t */\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\n\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\n\t\t\t\t\tif ( field.get( 'type' ) != 'submit' && field.get( 'errors' ).length > 0 ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ field.get( 'id' ) ] = field.get( 'errors' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t});\n\n\treturn controller;\n} );\n","define( 'models/fileModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/fileCollection',['models/fileModel'], function( fileModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fileModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fileItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#nf-tmpl-field-file-row',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tif ( 0 == jQuery( this.el ).find( 'input:file' ).length ) {\n\t\t\t\tjQuery( this.el ).find( '.nf-file-input' ).append( this.model.get( 'fileInput' ) );\n\t\t\t}\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/fileCollection',['views/fileItem'], function( fileItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: fileItem\n\t});\n\n\treturn view;\n} );\n","define('controllers/selectFile',['models/fileCollection', 'views/fileCollection'], function( fileCollection, fileCollectionView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'file' ), 'init:model', this.initFile );\n\t\t\tthis.listenTo( nfRadio.channel( 'file' ), 'render:view', this.renderView );\n\t\t},\n\n\t\trenderFileInput: function() {\n\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-file-input' );\n\t\t\treturn template( this );\n\t\t},\n\n\t\tinitFile: function( model ) {\n\t\t\tmodel.set( 'files', new fileCollection() );\n\t\t\tmodel.set( 'renderFileInput', this.renderFileInput );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'file' ), 'change:field', this.changeFile );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'click:field', this.clickFileButton );\n\t\t},\n\n\t\trenderView: function( fieldView ) {\n\t\t\tvar el = jQuery( fieldView.el ).children( '.nf-files-table' );\n    \t\tfieldView.fileCollectionView = new fileCollectionView( { el: el, collection: fieldView.model.get( 'files' ), thisModel: this.model } );\n\n    \t\tfieldView.model.bind( 'change:files', this.changeCollection, fieldView );\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\tthis.fileCollectionView.render();\n\t\t},\n\n\t\tclickFileButton: function( el, model ) {\n\t\t\tif ( jQuery( el ).hasClass( 'nf-file-button' ) || jQuery( el ).hasClass( 'nf-file-reset' ) ) {\n\t\t\t\tjQuery( el ).closest( '.nf-field-wrap' ).find( 'input[type=file].nf-element' ).click();\n\t\t\t}\n\t\t},\n\n\t\tchangeFile: function( el, model ) {\n\t\t\tif ( '' == jQuery( el ).val() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar filename = jQuery( el )[0].files[0].name;\n\t\t\tconsole.log( jQuery( el ).length );\n\n\t\t\tvar slug = '';\n\t\t    var trimmed = jQuery.trim( filename );\n\t\t    slug = trimmed.replace(/[^a-z0-9-]/gi, '-').\n\t\t    replace(/-+/g, '-').\n\t\t    replace(/^-|-$/g, '');\n    \n\t\t    var fileCollection = model.get( 'files' );\n\t\t    if ( ! fileCollection.get( slug ) ) {\n\n\t\t    \tvar fileInput = jQuery( el );\n\t\t    \tvar fileInputClone = jQuery( el ).clone();\n\t\t    \tjQuery( fileInput ).removeClass( 'nf-element' ).off();\n\t\t    \tjQuery( fileInputClone ).val('');\n\t\t    \tjQuery( fileInput ).replaceWith( fileInputClone );\n\n\t\t  //   \tvar html = '<form class=\"nf-file-form\" enctype=\"multipart/form-data\" method=\"post\" action=\"' + nfFrontEnd.adminAjax + '\"></form>';\n\t\t\t\t// jQuery( el ).wrap( html );\n\n\t\t\t    fileCollection.add( { id: slug, filename: filename, fileInput: fileInput } );\n\n\t\t\t    model.set( 'files', fileCollection );\n\t\t\t    model.trigger( 'change:files', model );\n\t\t    }\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/validateRequired',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.validateRequired );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:field', this.validateRequired );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'keyup:field', this.validateKeyup );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:modelValue', this.validateModelData );\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'validate:field', this.validateModelData );\n\t\t},\n\t\t\n\t\tvalidateKeyup: function( el, model, keyCode ) {\n\t\t\tif ( 1 != model.get( 'required' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( ! model.get( 'clean' ) ) {\n\t\t\t\tthis.validateRequired( el, model );\n\t\t\t}\n\t\t},\n\n\t\tvalidateRequired: function( el, model ) {\n\t\t\tif ( 1 != model.get( 'required' ) || ! model.get( 'visible' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar currentValue = jQuery( el ).val();\n\t\t\tvar customReqValidation = nfRadio.channel( model.get( 'type' ) ).request( 'validate:required', el, model );\n\t\t\tvar defaultReqValidation = true;\n\n\t\t\tvar maskPlaceholder = model.get( 'mask' );\n\t\t\tif ( maskPlaceholder ) {\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /9/g, '_' );\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /a/g, '_' );\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /\\*/g, '_' );\n\t\t\t}\n\n\t\t\tif ( ! jQuery.trim( currentValue ) || currentValue == maskPlaceholder ) {\n\t\t\t\tdefaultReqValidation = false;\n\t\t\t}\n\n\t\t\tif ( 'undefined' !== typeof customReqValidation ) {\n\t\t\t\tvar valid = customReqValidation;\n\t\t\t} else {\n\t\t\t\tvar valid = defaultReqValidation;\n\t\t\t}\n\n\t\t\tthis.maybeError( valid, model );\n\t\t},\n\n\t\tvalidateModelData: function( model ) {\n\t\t\tif ( 1 != model.get( 'required' ) || ! model.get( 'visible' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * If we already have a required error on this model, return false\n\t\t\t */\n\t\t\tif ( model.get( 'errors' ).get( 'required-error' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurrentValue = model.get( 'value' );\n\t\t\t\n\t\t\tvar defaultReqValidation = true;\n\n\t\t\tif ( ! jQuery.trim( currentValue ) ) {\n\t\t\t\tdefaultReqValidation = false;\n\t\t\t}\n\n\t\t\tvar valid = defaultReqValidation;\n\n\t\t\tthis.maybeError( valid, model );\n\n\t\t},\n\n\t\tmaybeError: function( valid, model ) {\n\t\t\tif ( ! valid ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'required-error', 'This is a required field.' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'required-error' );\n\t\t\t}\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitError',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.submitErrors );\n\t\t},\n\n\t\tsubmitErrors: function( response, textStatus, jqXHR, formID ) {\n\n\t\t\tif ( _.size( response.errors.fields ) > 0 ) {\n\t\t\t\t_.each( response.errors.fields, function( msg, fieldID ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, 'required-error', msg );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( _.size( response.errors.form ) > 0 ) {\n\t\t\t\t_.each( response.errors.form, function( msg, errorID ) {\n\t\t\t\t\tnfRadio.channel( 'form-' + formID ).request( 'add:error', errorID, msg );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/actionRedirect',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionRedirect );\n\t\t},\n\n\t\tactionRedirect: function( response ) {\n\n\t\t\tif ( 'undefined' != typeof response.data.halt && 'undefined' != typeof response.data.halt.redirect && '' != response.data.halt.redirect ) {\n\t\t\t\twindow.location = response.data.halt.redirect;\n\t\t\t}\n\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\n\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.redirect && '' != response.data.actions.redirect ) {\n\t\t\t\t\twindow.location = response.data.actions.redirect;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/actionSuccess',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionSubmit );\n\t\t},\n\n\t\tactionSubmit: function( response ) {\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.success_message && '' != response.data.actions.success_message ) {\n\t\t\t\t\tjQuery( '.nf-response-msg' ).html( response.data.actions.success_message );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldSelect',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'listselect' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'liststate' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'listcountry' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'listmultiselect' ), 'init:model', this.register );\n\t\t\tnfRadio.channel( 'listselect' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t\tnfRadio.channel( 'listmultiselect' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t},\n\n\t\tregister: function( model ) {\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\n\t\t\tmodel.set( 'renderOtherAttributes', this.renderOtherAttributes );\n\t\t\t/*\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\n\t\t\t * This is the list equivalent of a 'default value'.\n\t\t\t */ \n\t\t\tif ( 0 != model.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if this is a multi-select list.\n\t\t\t\t */\n\t\t\t\tif ( 'listmultiselect' == model.get( 'type' ) ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t\tselected = _.map( selected, function( opt ) { return opt.value } );\n\t\t\t\t\tvar value = selected;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t\t */\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\t\tselected = model.get( 'options' )[0];\n\t\t\t\t\t}\n\t\t\t\t\tvar value = selected.value;\n\t\t\t\t}\n\n\t\t\t\tmodel.set( 'value', value );\n\t\t\t}\n\t\t},\n\n\t\trenderOptions: function() {\n\t\t\tvar that = this;\n\t\t\tvar html = '';\n\t\t\t_.each( this.options, function( option ) {\n\t\t\t\tif ( 1 == option.selected ) {\n\t\t\t\t\tvar selected = true;\n\t\t\t\t} else {\n\t\t\t\t\tvar selected = false;\n\t\t\t\t}\n\n\t\t\t\toption.selected = selected;\n\t\t\t\toption.fieldID = that.id;\n\t\t\t\toption.classes = that.classes;\n\t\t\t\toption.currentValue = that.value;\n\t\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-listselect-option' );\n\t\t\t\thtml += template( option );\n\t\t\t} );\n\n\t\t\treturn html;\n\t\t},\n\n\t\trenderOtherAttributes: function() {\n\t\t\tvar otherAttributes = '';\n\n\t\t\tif( 'listmultiselect' == this.type ){\n\t\t\t\totherAttributes = otherAttributes + ' multiple';\n\t\t\t}\n\n\t\t\treturn otherAttributes;\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tvar calc_value = 0;\n\t\t\tvar options = fieldModel.get( 'options' );\n\t\t\tif ( 0 != options.length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if this is a multi-select list.\n\t\t\t\t */\n\t\t\t\tif ( 'listmultiselect' == fieldModel.get( 'type' ) ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\n\t\t\t\t\t */\n\t\t\t\t\t_.each( fieldModel.get( 'value' ), function( val ) {\n\t\t\t\t\t\tvar tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\n\t\t\t\t\t\tcalc_value = math.add( calc_value, tmp_opt.calc );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * We are using a single select, so our selected option is in the 'value' attribute.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.find( options, function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t\t */\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\n\t\t\t\t\t}\t\t\n\t\t\t\t\tcalc_value  = selected.calc;\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn calc_value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/coreSubmitResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionSubmit );\n\t\t},\n\n\t\tactionSubmit: function( response ) {\n\t\t\t/*\n\t\t\t * If we have errors, don't hide or clear.\n\t\t\t */\n\t\t\tif ( 0 != _.size( response.errors ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( 1 == response.data.settings.clear_complete ) {\n\t\t\t\t// nfRadio.channel( 'form-' + response.data.form_id ).trigger( 'reset' );\n\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', response.data.form_id );\n\t\t\t\tformModel.get( 'fields' ).reset( formModel.get( 'loadedFields' ) );\n\t\t\t}\n\n\t\t\tif ( 1 == response.data.settings.hide_complete ) {\n\t\t\t\t/**\n\t\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\n\t\t\t\t */\n\t\t\t\tjQuery( '.nf-fields' ).hide();\n\t\t\t\tjQuery( '.nf-form-title' ).hide();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldProduct',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'product' ), 'init:model', this.register );\n            nfRadio.channel( 'product' ).reply( 'get:calcValue', this.getCalcValue, this );\n        },\n\n        register: function( model ) {\n            model.set( 'renderProductQuantity', this.renderProductQuantity );\n            model.set( 'renderProduct', this.renderProduct );\n            model.set( 'renderOptions', this.renderOptions );\n        },\n\n        renderProduct: function(){\n            switch( this.product_type ) {\n                case 'user':\n                    var template = Marionette.TemplateCache.get( '#nf-tmpl-field-textbox' );\n                    return template( this );\n                    break;\n                case 'hidden':\n                    var template = Marionette.TemplateCache.get( '#nf-tmpl-field-hidden' );\n                    return template( this );\n                    break;\n\n                case 'dropdown':\n                    var template = Marionette.TemplateCache.get( '#nf-tmpl-product-dropdown' );\n                    return template( this );\n                    break;\n                default:\n                    var template = Marionette.TemplateCache.get( '#nf-tmpl-product-single' );\n                    return template( this );\n            }\n        },\n\n        renderProductQuantity: function(){\n            if ( 1 == this.product_use_quantity ) {\n                var template = Marionette.TemplateCache.get( '#nf-tmpl-product-quantity' );\n                return template( this );\n            }\n        },\n\n        renderOptions: function() {\n            var that = this;\n            var html = '';\n            _.each( this.options, function( option ) {\n                if ( 1 == option.selected ) {\n                    var selected = true;\n                } else {\n                    var selected = false;\n                }\n\n                option.selected = selected;\n                option.fieldID = that.id;\n                option.classes = that.classes;\n                option.currentValue = that.value;\n\n                var template = Marionette.TemplateCache.get( '#nf-tmpl-product-' + that.product_type + '-option' );\n                html += template( option );\n            } );\n\n            return html;\n        },\n\n        getCalcValue: function( fieldModel ) {\n\n            var product_price = fieldModel.get( 'product_price' );\n            var product_quantity = fieldModel.get( 'value' );\n\n            return product_price * product_quantity;\n        }\n    });\n\n    return controller;\n} );\n\n","define('controllers/fieldTotal',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        totalModel: {},\n\n        productTotals: {},\n\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'total' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'shipping' ), 'init:model', this.registerShipping );\n        },\n\n        register: function( totalModel ){\n            this.totalModel = totalModel;\n\n            var formID = totalModel.get( 'formID' );\n            this.listenTo( nfRadio.channel( 'form-' + formID ), 'loaded', this.onFormLoaded );\n\n            this.listenTo( nfRadio.channel( 'product' ), 'change:modelValue', this.onChangeProduct );\n            this.listenTo( nfRadio.channel( 'quantity' ), 'change:modelValue', this.onChangeQuantity );\n        },\n\n        registerShipping: function( shippingModel ){\n            this.shippingCost = shippingModel.get( 'shipping_cost' );\n        },\n\n        onFormLoaded: function( formModel ){\n\n            var fieldModels = formModel.get( 'fields' ).models;\n\n            var productFields = {};\n            var quantityFields = {};\n\n            for( var model in fieldModels ){\n\n                var field = fieldModels[ model ];\n                var fieldID = field.get( 'id' );\n\n                // TODO: Maybe use switch\n                if( 'product' == field.get( 'type' ) ){\n                    productFields[ fieldID ] = field;\n                } else if( 'quantity' == field.get( 'type' ) ){\n                    var productID = field.get( 'product_assignment' );\n                    quantityFields[ productID ] = field;\n                }\n            }\n\n            for( var productID in productFields ){\n\n                var product = productFields[ productID ];\n\n                var productPrice = Number( product.get( 'product_price' ) );\n\n                if( quantityFields[ productID ] ){\n\n                    productPrice *= quantityFields[ productID ].get( 'value' );\n\n                } else if( 1 == product.get( 'product_use_quantity' ) ){\n\n                    productPrice *= product.get( 'value' );\n\n                }\n\n                this.productTotals[ productID ] = productPrice;\n            }\n\n            this.updateTotal();\n        },\n\n        onChangeProduct: function( model ){\n            var productID = model.get( 'id' );\n            var productPrice = Number( model.get( 'product_price' ) );\n            var productQuantity = Number( model.get( 'value' ) );\n            var newTotal = productQuantity * productPrice;\n            this.productTotals[ productID ] = newTotal;\n\n            this.updateTotal();\n        },\n\n        onChangeQuantity: function( model ){\n            var productID = model.get( 'product_assignment' );\n            var productField = nfRadio.channel( 'fields' ).request( 'get:field', productID );\n            var productPrice = Number( productField.get( 'product_price' ) );\n\n            var quantity = Number( model.get( 'value' ) );\n\n            var newTotal = quantity * productPrice;\n\n            this.productTotals[ productID ] = newTotal;\n\n            this.updateTotal();\n        },\n\n        updateTotal: function(){\n\n            var newTotal = 0;\n\n            for( var product in this.productTotals ){\n                newTotal += Number( this.productTotals[ product ] );\n            }\n\n            if( newTotal && this.shippingCost ) {\n                // Only add shipping if there is a cost.\n                newTotal += Number(this.shippingCost);\n            }\n\n            this.totalModel.set( 'value', newTotal.toFixed( 2 ) );\n            // this.totalModel.set( 'reRender', true );\n            // this.totalModel.set( 'reRender', false );\n            this.totalModel.trigger( 'reRender' );\n        }\n    });\n\n    return controller;\n});\n","define('controllers/fieldQuantity',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'quantity' ), 'init:model', this.registerQuantity );\n        },\n\n        registerQuantity: function( model ){\n            var productID = model.get( 'product_assignment' );\n            var product = nfRadio.channel( 'fields' ).request( 'get:field', productID );\n\n            if( product ) {\n                product.set('product_use_quantity', 0);\n            }\n        },\n\n    });\n\n    return controller;\n});\n","/**\n * Model that represents a calculation.\n *\n * On init, we trigger a radio message so that controllers can do things when a calc model inits.\n */\ndefine( 'models/calcModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\t// Set our form id\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\n\t\t\t// Set our initial fields object to empty. This will hold our key/value pairs.\n\t\t\tthis.set( 'fields', {} );\n\t\t\t// Trigger a radio message to let controllers know we've inited this model.\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'init:model', this );\n\t\t\t// When we change the value of this calculation, send out a radio message\n\t\t\tthis.on( 'change:value', this.changeValue, this );\n\t\t},\n\n\t\t/**\n\t\t * Trigger a radio message when a field present in our calculation changes\n\t\t *\n\t\t * The listener that triggers/calls this function is in controllers/calculations\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeField: function( fieldModel ) {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:field', this, fieldModel );\n\t\t},\n\n\t\tchangeCalc: function( targetCalcModel ) {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:calc', this, targetCalcModel );\n\t\t},\n\n\t\tchangeValue: function() {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:value', this );\n\t\t}\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/calcCollection',['models/calcModel'], function( CalcModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: CalcModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Controller responsible for keeping up with calculations.\n */\ndefine('controllers/calculations',['models/calcCollection'], function( CalcCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.calcs = {};\n\t\t\tthis.displayFields = {};\n\t\t\t// When our form initialises, check to see if there are any calculations that need to be tracked.\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', this.registerCalcs );\n\n\t\t\t// When a calc model is initialised, run a setup function.\n\t\t\t// this.listenTo( nfRadio.channel( 'calc' ), 'init:model', this.setupCalc );\n\n\t\t\t// When a field referenced by a calc model changes, update our calc.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:field', this.changeField );\n\n\t\t\t// When a calculation referenced by a calc model changes, update our calc.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:calc', this.changeCalc );\n\n\t\t\t/*\n\t\t\t * Listen to our field model init for fields that want to display calc values.\n\t\t\t * If that field has a calc merge tag, replace it with the default calc value.\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t_.each( nfFrontEnd.use_merge_tags.calculations, function( fieldType ) {\n\t\t\t\tthat.listenTo( nfRadio.channel( 'fields-' + fieldType ), 'init:model', that.initDisplayField );\n\t\t\t} );\n\t\t\t\n\t\t\t// When we change our calc value, update any display fields.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:value', this.updateDisplayFields );\n\n\t\t\t// Set an init variable so that we only call reRender on the display field on change, not on init.\n\t\t\tthis.init = {};\n\t\t},\n\n\t\t/**\n\t\t * When our form loads, create a collection out of any calculations.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model formModel\n\t\t * @return void\n\t\t */\n\t\tregisterCalcs: function( formModel ) {\n\t\t\tvar calcCollection = new CalcCollection( formModel.get( 'settings' ).calculations, { formModel: formModel } );\n\t\t\tthis.calcs[ formModel.get( 'id' ) ] = calcCollection;\n\t\t\tvar that = this;\n\n\t\t\t_.each( calcCollection.models, function( calcModel ) {\n\t\t\t\t/*\n\t\t\t\t * We set a property on our init variable for the calc model we're looping over.\n\t\t\t\t * This property is set to true so that when we make changes to the calc model on the next line\n\t\t\t\t * the field view doesn't try to redraw itself.\n\t\t\t\t * If we don't do this, the 'reRender' attribute of the model will be set before the view is initialized,\n\t\t\t\t * which means that setting 'reRender' to true will never re-render the view.\n\t\t\t\t */\n\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = true;\n\t\t\t\t// Setup our calculation models with initial values and register listeners for calc-related fields.\n\t\t\t\tthat.setupCalc( calcModel );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * When a calculation model is instantiated from the registerCalcs function:\n\t\t *\n\t\t * Use a regex to get an array of the field keys\n\t\t * Setup an initial key/values array\n\t\t * Check for any references to other calculations\n\t\t * Set the initial value of our calculation\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model calcModel\n\t\t * @return void\n\t\t */\n\t\tsetupCalc: function( calcModel ) {\n\t\t\t// Setup our that var so we can access 'this' context in our loop.\n\t\t\tvar that = this;\n\t\t\t// Get our equation\n\t\t\tvar eq = calcModel.get( 'eq' );\n\t\t\t// We want to keep our original eq intact, so we use a different var for string replacment.\n\t\t\tvar eqValues = eq;\n\n\t\t\t/* TODO:\n\t\t\t * It might be possible to refactor these two if statements.\n\t\t\t * The difficulty is that each has a different method of retreiving the specific data model.\n\t\t\t */\n\t\t\t// Check to see if we have any field merge tags in our equation.\n\t\t\tvar fields = eq.match( new RegExp( /{field:(.*?)}/g ) );\n\t\t\tif ( fields ) {\n\t\t\t\t/*\n\t\t\t\t * fields is now an array of field keys that looks like:\n\t\t\t\t * ['{field:key'], ['{field:key'], etc.\n\t\t\t\t *\n\t\t\t\t * We need to run a function with each of our field keys to setup our field key array and hook up our field change listner.\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tfields = fields.map( function( field ) {\n\t\t\t\t\t// field will be {field:key}\n\t\t\t\t\tvar key = field.replace( '}', '' ).replace( '{field:', '' );\n\t\t\t\t\t// Get our field model\n\t\t\t\t\tfieldModel = nfRadio.channel( 'form-' + calcModel.get( 'formID' ) ).request( 'get:fieldByKey', key );\n\n\t\t\t\t\tif( 'undefined' == typeof fieldModel ) return;\n\t\t\t\t\t// Register a listener in our field model for value changes.\n\t\t\t\t\tfieldModel.on( 'change:value', calcModel.changeField, calcModel );\n\t\t\t\t\t// Get our calc value from our field model.\n\t\t\t\t\tvar calcValue = that.getCalcValue( fieldModel );\n\t\t\t\t\t// Add this field to our internal key/value object.\n\t\t\t\t\tthat.updateCalcFields( calcModel, key, calcValue );\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\n\t\t\t\t\teqValues = that.replaceKey( 'field', key, calcValue, eqValues );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Check to see if we have any calc merge tags in our equation.\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t/*\n\t\t\t\t * calcs is now an array of calc keys that looks like:\n\t\t\t\t * ['{calc:key'], ['{calc:key'], etc.\n\t\t\t\t *\n\t\t\t\t * We need to run a function with each of our calc keys to setup our calc key array and hook up our calc change listner.\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tcalcs = calcs.map( function( calc ) {\n\t\t\t\t\t// calc will be {calc:name}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t// Get our calc model\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\n\t\t\t\t\t// Listen for changes on our calcluation, since we need to update our calc when it changes.\n\t\t\t\t\ttargetCalcModel.on( 'change:value', calcModel.changeCalc, calcModel );\n\t\t\t\t\t// // Get our calc value from our calc model.\n\t\t\t\t\tvar calcValue = targetCalcModel.get( 'value' );\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\n\t\t\t\t\teqValues = that.replaceKey( 'calc', name, calcValue, eqValues );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\t// Evaluate the equation and update the value of this model.\n\t\t\ttry {\n\t\t\t\tcalcModel.set('value', math.eval(eqValues));\n\t\t\t} catch( e ) {\n\t\t\t\tconsole.log( e );\n\t\t\t}\n\n\t\t\t// Debugging console statement.\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\n\t\t},\n\n\t\t/**\n\t\t * Update an item in our key/value pair that represents our fields and calc values.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tcalcModel\n\t\t * @param  string \t\t\tkey\n\t\t * @param  string \t\t\tcalcValue\n\t\t * @return void\n\t\t */\n\t\tupdateCalcFields: function( calcModel, key, calcValue ) {\n\t\t\tvar fields = calcModel.get( 'fields' );\n\t\t\tfields[ key ] = calcValue;\n\t\t\tcalcModel.set( 'fields', fields );\n\t\t},\n\n\t\t/**\n\t\t * Get a calc value from a field model.\n\t\t *\n\t\t * Sends a request to see if there's a special calc value\n\t\t * Uses the value of the field if there is not.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model fieldModel\n\t\t * @return value\n\t\t */\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\t/*\n\t\t\t * Send out a request on the field type and parent type channel asking if they need to modify the calc value.\n\t\t\t * This is helpful for fields like lists that can have a different calc_value than selected value.\n\t\t\t */\n\t\t\tvar value = nfRadio.channel( fieldModel.get( 'type' ) ).request( 'get:calcValue', fieldModel );\n\n\t\t\t// If value is 'undefined', then we got no response. Set value to field model value.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tif ( jQuery.isNumeric( fieldModel.get( 'value' ) ) ) {\n\t\t\t\t\tvalue = fieldModel.get( 'value' );\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! fieldModel.get( 'visible' ) ) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\n\t\t\treturn ( jQuery.isNumeric( value ) ) ? value : 0;\n\t\t},\n\n\t\t/**\n\t\t * Replace instances of key with calcValue. This is used to replace one key at a time.\n\t\t *\n\t\t * If no eq is passed, use calcModel eq.\n\t\t *\n\t\t * Returns a string with instances of key replaced with calcValue.\n\t\t * \n\t\t * @since  version\n\t\t * @param  string \tkey       \n\t\t * @param  string \tcalcValue \n\t\t * @param  string \teq        \n\t\t * @return string \teq      \n\t\t */\n\t\treplaceKey: function( type, key, calcValue, eq ) {\n\t\t\teq = eq || calcModel.get( 'eq' );\n\t\t\tkey = '{' + type + ':' + key + '}';\n\t\t\tvar re = new RegExp( key, 'g' );\n\t\t\treturn eq.replace( re, calcValue );\n\t\t},\n\n\t\t/**\n\t\t * Takes a calcModel and returns a string eq with all keys replaced by their appropriate calcValues.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tcalcModel\n\t\t * @return string\t\t\teq\n\t\t */\n\t\treplaceAllKeys: function( calcModel ) {\n\t\t\tvar eq = calcModel.get( 'eq' );\n\t\t\tvar that = this;\n\t\t\t_.each( calcModel.get( 'fields' ), function( value, key ) {\n\t\t\t\teq = that.replaceKey( 'field', key, value, eq );\n\t\t\t} );\n\n\t\t\t// If we have any calc merge tags, replace those as well.\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t_.each( calcs, function( calc ) {\n\t\t\t\t\t// calc will be {calc:key}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\n\t\t\t\t\tvar re = new RegExp( calc, 'g' );\n\t\t\t\t\teq = eq.replace( re, targetCalcModel.get( 'value' ) );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn eq;\n\t\t},\n\n\t\t/**\n\t\t * Function that's called when a field within the calculation changes.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model calcModel\n\t\t * @param  backbone.model fieldModel\n\t\t * @return void\n\t\t */\n\t\tchangeField: function( calcModel, fieldModel ) {\n\t\t\tvar key = fieldModel.get( 'key' );\n\t\t\tvar value = this.getCalcValue( fieldModel );\n\t\t\tthis.updateCalcFields( calcModel, key, value );\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\n\t\t\tcalcModel.set( 'value', math.eval( eqValues ) );\n\n\t\t\t// Debugging console statement.\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\t\t\n\t\t},\n\n\t\tinitDisplayField: function( fieldModel ) {\n\n\t\t\tif( ! fieldModel.get( 'default' ) ) return;\n\n\t\t\tvar calcs = fieldModel.get( 'default' ).match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\tvar that = this;\n\t\t\t\t_.each( calcs, function( calcName ) {\n\t\t\t\t\tcalcName = calcName.replace( '{calc:', '' ).replace( '}', '' );\n\t\t\t\t\tthat.displayFields[ calcName ] = that.displayFields[ calcName ] || [];\n\t\t\t\t\tthat.displayFields[ calcName ].push( fieldModel );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tupdateDisplayFields: function( calcModel ) {\n\t\t\tvar that = this;\n\t\t\tif ( 'undefined' != typeof this.displayFields[ calcModel.get( 'name' ) ] ) {\n\t\t\t\t_.each( this.displayFields[ calcModel.get( 'name' ) ], function( fieldModel ) {\n\t\t\t\t\tvar value = fieldModel.get( 'default' );\n\t\t\t\t\tvar calcs = value.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\t\t\t_.each( calcs, function( calc ) {\n\t\t\t\t\t\t// calc will be {calc:key}\n\t\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t\tvar calcModel = that.calcs[ fieldModel.get( 'formID' ) ].findWhere( { name: name } );\n\t\t\t\t\t\tvar re = new RegExp( calc, 'g' );\n\t\t\t\t\t\tvalue = value.replace( re, calcModel.get( 'value' ) );\n\t\t\t\t\t} );\n\t\t\t\t\tfieldModel.set( 'value', value );\n\t\t\t\t\tif ( ! that.init[ calcModel.get( 'name' ) ] ) {\n\t\t\t\t\t\t// fieldModel.set( 'reRender', true );\n\t\t\t\t\t\tfieldModel.trigger( 'reRender' );\n\t\t\t\t\t}\n\t\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tgetCalc: function( name, formID ) {\n\t\t\treturn this.calcs[ formID ].findWhere( { name: name } );\n\t\t},\n\n\t\tchangeCalc: function( calcModel, targetCalcModel ) {\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\n\t\t\tcalcModel.set( 'value', math.eval( eqValues ) );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldDate',[], function() {\n    var controller = Marionette.Object.extend({\n\n        initialize: function () {\n            this.listenTo( nfRadio.channel( 'date' ), 'render:view', this.initDatepicker );\n        },\n\n        initDatepicker: function ( view ) {\n\n            var el = jQuery( view.el ).find( '.nf-element' )[0];\n            var dateObject = pikadayResponsive( el, {\n                format: view.model.get( 'date_format' ),\n                classes: jQuery( el ).attr( \"class\" )\n            } );\n            if ( 1 == view.model.get( 'date_default' ) ) {\n               dateObject.setDate( moment() ); \n            }\n        }\n    });\n\n    return controller;\n});\n","define('controllers/fieldRecaptcha',[], function() {\n    var controller = Marionette.Object.extend({\n\n        initialize: function () {\n            this.listenTo( nfRadio.channel( 'recaptcha' ), 'init:model', this.initRecaptcha );\n        },\n\n       \tinitRecaptcha: function ( model ) {\n       \t\tthis.model = model;\n        \tnfRadio.channel( 'recaptcha' ).reply( 'update:response', this.updateResponse, this );\n        },\n\n        updateResponse: function( response ) {\n        \tthis.model.set( 'value', response );\n            nfRadio.channel( 'fields' ).request( 'remove:error', this.model.get( 'id' ), 'required-error' );\n        }\n    });\n\n    return controller;\n} );\n","/**\n * When a form is loaded, enable any help text that appears on the page.\n */\ndefine('controllers/helpText',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'render:view', this.initHelpText );\n\t\t},\n\n\t\tinitHelpText: function( view ) {\n\t\t\tjQuery( view.el ).find( '.nf-help' ).each( function() {\n\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\tcontent: jQuery( this ).data( 'text' )\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When a form is loaded, enable any rtes in textareas.\n */\ndefine('controllers/fieldTextareaRTE',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'render:view', this.initTextareaRTEs );\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'click:extra', this.clickExtra );\n\n\t\t\t// Instantiates the variable that holds the media library frame.\n\t\t\tthis.meta_image_frame;\n\n\t\t\tjQuery.summernote.options.icons = {\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\n\t\t        'indent': 'dashicons dashicons-editor-indent',\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\n\t\t        'bold': 'dashicons dashicons-editor-bold',\n\t\t        'caret': 'dashicons dashicons-arrow-down',\n\t\t        // 'circle': 'dashicons fa-circle',\n\t\t        'close': 'dashicons dashicons-dismiss',\n\t\t        'code': 'dashicons dashicons-editor-code',\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\n\t\t        // 'font': 'dashicons fa-font',\n\t\t        // 'frame': 'dashicons fa-frame',\n\t\t        'italic': 'dashicons dashicons-editor-italic',\n\t\t        'link': 'dashicons dashicons-admin-links',\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\n\t\t        // 'menuCheck': 'dashicons fa-check',\n\t\t        'minus': 'dashicons dashicons-minus',\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\n\t\t        // 'pencil': 'dashicons fa-pencil',\n\t\t        // 'picture': 'dashicons fa-picture-o',\n\t\t        // 'question': 'dashicons fa-question',\n\t\t        'redo': 'dashicons dashicons-redo',\n\t\t        'square': 'dashicons fa-square',\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\n\t\t        // 'subscript': 'dashicons fa-subscript',\n\t\t        // 'superscript': 'dashicons fa-superscript',\n\t\t        'table': 'dashicons dashicons-editor-table',\n\t\t        // 'textHeight': 'dashicons fa-text-height',\n\t\t        // 'trash': 'dashicons fa-trash',\n\t\t        'underline': 'dashicons dashicons-editor-underline',\n\t\t        'undo': 'dashicons dashicons-undo',\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\n\t\t        // 'video': 'dashicons fa-youtube-play'\n\t\t      }\n\n\t\t      this.currentContext = {};\n\n\t\t},\n\n\t\tinitTextareaRTEs: function( view ) {\n\t\t\tif ( 1 != view.model.get( 'textarea_rte' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Custom Button for links\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t// var linkButton = this.linkButton();\n\t\t\tvar linkButton = function( context ) {\n\t\t\t\treturn that.linkButton( context );\n\t\t\t}\n\t\t\tvar mediaButton = function( context ) {\n\t\t\t\treturn that.mediaButton( context );\n\t\t\t}\n\n\t\t\tvar toolbar = [\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\n\t\t\t    [ 'table', [ 'table' ] ],\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\n\t\t\t];\n\n\t\t\tif ( 1 == view.model.get( 'textarea_media' ) && 0 != userSettings.uid ) {\n\t\t\t\ttoolbar.push( [ 'tools', [ 'mediaButton' ] ] );\n\t\t\t}\n\n\t\t\tjQuery( view.el ).find( '.nf-element' ).summernote( {\n\t\t\t\ttoolbar: toolbar,\n\t\t\t\tbuttons: {\n\t\t\t\t\tlinkButton: linkButton,\n\t\t\t\t\tmediaButton: mediaButton\n\t\t\t\t},\n\t\t\t\theight: 150,   //set editable area's height\n\t\t\t\tcodemirror: { // codemirror options\n\t\t\t\t    theme: 'monokai',\n\t\t\t\t    lineNumbers: true\n\t\t\t\t},\n\t\t\t\tprettifyHtml: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonChange: function( e ) {\n\t\t\t\t\t\tview.model.set( 'value', jQuery( this ).summernote( 'code' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tlinkButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar linkButton = Marionette.TemplateCache.get( '#nf-tmpl-rte-link-button' );\n\t\t\tvar linkDropdown = Marionette.TemplateCache.get( '#nf-tmpl-rte-link-dropdown' );\n\t\t\treturn ui.buttonGroup([\n\t\t\t\tui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: linkButton({}),\n\t            tooltip: 'Insert Link',\n\t            click: function( e ) {\n\t            \tthat.clickLinkButton( e, context );\n\t            },\n\t            data: {\n\t              toggle: 'dropdown'\n\t            }\n\t          }),\n\t\t\t\tui.dropdown([\n\t            ui.buttonGroup({\n\t              children: [\n\t                ui.button({\n\t                  contents: linkDropdown({}),\n\t                  tooltip: ''\n\t                }),\n\t              ]\n\t            })\n\t          ])\n\t\t\t]).render();\n\t\t},\n\n\t\tmediaButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mediaButton = Marionette.TemplateCache.get( '#nf-tmpl-rte-media-button' );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mediaButton({}),\n\t            tooltip: 'Insert Media',\n\t            click: function( e ) {\n\t            \tthat.openMediaManager( e, context );\n\t            }\n\t          }).render();\n\t\t},\n\n\t\topenMediaManager: function( e, context ) {\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\t// If the frame already exists, re-open it.\n\t\t\tif ( this.meta_image_frame ) {\n\t\t\t\tthis.meta_image_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sets up the media library frame\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\t\ttitle: 'Select a file',\n\t\t\t\tbutton: { text:  'insert' }\n\t\t\t});\n\n\t\t\tvar that = this;\n\n\t\t\t// Runs when an image is selected.\n\t\t\tthis.meta_image_frame.on('select', function(){\n\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\n\t\t\t\tthat.insertMedia( media_attachment, context );\n\t\t\t});\n\n\t\t\t// Opens the media library frame.\n\t\t\tthis.meta_image_frame.open();\n\t\t},\n\n\t\tclickLinkButton: function ( e, context ) {\n\t\t\tvar range = context.invoke( 'editor.createRange' );\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\tvar text = range.toString()\n\t\t\tthis.currentContext = context;\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\n\t\t\t});\n\t\t},\n\n\t\tclickExtra: function( e ) {\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\n\t\t\t\tvar text = textEl.val();\n\t\t\t\tvar url = urlEl.val();\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttextEl.val( '' );\n\t\t\turlEl.val( '' );\n\t\t\tisNewWindowEl.prop( 'checked', false );\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\n\t\t},\n\n\t\tinsertMedia: function( media, context ) {\n\t\t\tcontext.invoke( 'editor.restoreRange' );\n\t\t\tif ( 'image' == media.type ) {\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\n\t\t\t} else {\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldStarRating',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        initialize: function() {\n        \tthis.listenTo( nfRadio.channel( 'starrating' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'starrating' ), 'render:view', this.initRating );\n        },\n\n        register: function( model ) {\n\t\t\tmodel.set( 'renderRatings', this.renderRatings );\n\t\t},\n\n        initRating: function( view ){\n            jQuery( view.el ).find( '.starrating' ).rating();\n        },\n\n        renderRatings: function() {\n        \tvar html = '';\n        \tfor (var i = this.default - 1; i >= 0; i--) {\n        \t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-starrating-star' );\n                var num = i + 1;\n        \t\thtml += template( { id: this.id, classes: this.classes, num: num } );\n        \t}\n        \treturn html;\n        }\n\n    });\n\n    return controller;\n});\n","define('controllers/fieldTerms',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\n        },\n\n        register: function( model ) {\n            // nfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\n            this.listenTo( nfRadio.channel( 'field-' + model.get( 'id' ) ), 'click:extra', this.clickExtra );\n            this.listenTo( nfRadio.channel( 'field-' + model.get( 'id' ) ), 'keyup:field', this.keyUpExtra );\n        },\n        \n        clickExtra: function( e, model ) {\n            var el = jQuery( e.currentTarget );\n            var value = el.parent().find( '.extra-value' ).val();\n            this.addOption( model, value );\n        },\n\n        keyUpExtra: function( el, model, keyCode ) {\n            if( 13 != keyCode ) return;\n            this.addOption( model, el.val() );\n        },\n\n        addOption: function( model, value ) {\n            if( ! value ) return;\n            var options = model.get( 'options' );\n            var new_option = {\n                label: value,\n                value: value,\n                selected: 0,\n            };\n            options.push( new_option );\n\n            var selected = model.get( 'value' );\n            selected.push( value );\n\n            // model.set( 'reRender', true );\n            model.trigger( 'reRender' );\n        }\n        \n    });\n\n    return controller;\n} );\n","/**\n * Before we display our fields, ask if anyone wants to give us a different view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fieldContentsFilters',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Init our fieldContents view filter array.\n\t\t\t */\n\t\t\tthis.viewFilters = [];\n\t\t\tthis.loadFilters = [];\n\n\t\t\t/*\n\t\t\t * Listen for requests to add new fieldContent filters. \n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:viewFilter', this.addViewFilter, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:loadFilter', this.addLoadFilter, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests to get our fieldContent filters.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:viewFilters', this.getViewFilters, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:loadFilters', this.getLoadFilters, this );\n\t\t},\n\n\t\taddViewFilter: function( callback, priority ) {\n\t\t\tthis.viewFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetViewFilters: function() {\n\t\t\treturn this.viewFilters;\n\t\t},\n\n\t\taddLoadFilter: function( callback, priority ) {\n\t\t\tthis.loadFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetLoadFilters: function() {\n\t\t\treturn this.loadFilters;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/fieldItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\n\t\tinitialize: function() {\n    \t\tthis.model.on( 'reRender', this.render, this );\n    \t\tthis.model.on( 'change:errors', this.changeError, this );\n    \t\tthis.model.on( 'change:addWrapperClass', this.addWrapperClass, this );\n    \t\tthis.model.on( 'change:removeWrapperClass', this.removeWrapperClass, this );\n    \t\t// this.listenTo( nfRadio.channel( 'submit' ), 'before:submit', this.test );\n\n    \t\tthis.template = '#nf-tmpl-field-' + this.model.get( 'wrap_template' );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'reRender', this.render );\n    \t\tthis.model.off( 'change:errors', this.changeError );\n    \t\tthis.model.off( 'change:addWrapperClass', this.addWrapperClass );\n    \t\tthis.model.off( 'change:removeWrapperClass', this.removeWrapperClass );\n\t\t},\n\n\t\ttest: function( model ) {\n\t\t\tconsole.log( 'firing from trigger 1' );\n\t\t},\n\n\t\tchangeError: function() {\n\t\t\tif ( 0 == this.model.get( 'errors' ).models.length ) {\n\t\t\t\tthis.model.removeWrapperClass( 'nf-error' );\n\t\t\t\tthis.model.removeWrapperClass( 'nf-fail' );\n\t\t\t\tthis.model.addWrapperClass( 'nf-pass' );\n\t\t\t} else {\n\t\t\t\tthis.model.removeWrapperClass( 'nf-pass' );\n\t\t\t\tthis.model.addWrapperClass( 'nf-fail' );\n\t\t\t\tthis.model.addWrapperClass( 'nf-error' );\n\t\t\t}\n\t\t},\n\n\t\taddWrapperClass: function() {\n\t\t\tvar cl = this.model.get( 'addWrapperClass' );\n\t\t\tif ( '' != cl ) {\n\t\t\t\tjQuery( this.el ).addClass( cl );\n\t\t\t\tthis.model.set( 'addWrapperClass', '' );\n\t\t\t}\n\t\t},\n\n\t\tremoveWrapperClass: function() {\n\t\t\tvar cl = this.model.get( 'removeWrapperClass' );\n\t\t\tif ( '' != cl ) {\n\t\t\t\tjQuery( this.el ).removeClass( cl );\n\t\t\t\tthis.model.set( 'removeWrapperClass', '' );\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar el = jQuery( this.el ).children( '.nf-error-wrap' );\n\n    \t\t/*\n    \t\t * If we have an input mask, init that mask.\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\n    \t\t */\n    \t\tif ( 'undefined' != typeof this.model.get( 'mask' ) && '' != jQuery.trim( this.model.get( 'mask' ) ) ) {\n    \t\t\tif ( 'custom' == this.model.get( 'mask') ) {\n    \t\t\t\tvar mask = this.model.get( 'custom_mask' );\n    \t\t\t} else {\n    \t\t\t\tvar mask = this.model.get( 'mask' );\n    \t\t\t}\n\n    \t\t\tif ( Number.isInteger( mask ) ) {\n    \t\t\t\tmask = mask.toString();\n    \t\t\t}\n\n    \t\t\tjQuery( this.el ).find( '.nf-element' ).mask( mask );\n    \t\t}\n\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'render:view', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'render:view', this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\n\t\t\t\trenderElement: function(){\n\t\t\t\t\tvar tmpl = _.find( this.element_templates, function( tmpl ) {\n\t\t\t\t\t\tif ( 0 < jQuery( '#nf-tmpl-field-' + tmpl ).length ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-' + tmpl );\n\t\t\t\t\treturn template( this );\n\t\t\t\t},\n\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tvar template = Marionette.TemplateCache.get( '#nf-tmpl-field-label' );\n\t\t\t\t\treturn template( this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function () {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.customLabelClasses ) {\n\t\t\t\t\t\tclasses = this.customLabelClasses( classes );\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderPlaceholder: function() {\n\t\t\t\t\tvar placeholder = this.placeholder;\n\n\t\t\t\t\tif ( 'undefined' != typeof this.customPlaceholder ) {\n\t\t\t\t\t\tplaceholder = this.customPlaceholder( placeholder );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( '' != jQuery.trim( placeholder ) ) {\n\t\t\t\t\t\treturn 'placeholder=\"' + placeholder + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderWrapClass: function() {\n\t\t\t\t\tvar wrapClass = 'field-wrap ' + this.type + '-wrap';\n\n\t\t\t\t\t// If we have an old_classname defined, output wrap class for backward compatibility\n\t\t\t\t\tif ( 'undefined' != typeof this.old_classname && 0 < jQuery.trim( this.old_classname ).length ) {\n\t\t\t\t\t\twrapClass += ' ' + this.old_classname + '-wrap';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' != typeof customWrapClass ) {\n\t\t\t\t\t\twrapClass = customWrapClass( wrapClass );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn wrapClass;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses = classes.replace( 'nf-error', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' != typeof this.element_class && 0 < jQuery.trim( this.element_class ).length ) {\n\t\t\t\t\t\tclasses += ' ' + this.element_class;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t * If we have a function for adding extra classes, add those.\n\t\t\t\t\t */\n\n\t\t\t\t\tif ( 'undefined' != typeof this.customClasses ) {\n\t\t\t\t\t\tclasses = this.customClasses( classes );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\tmaybeDisabled: function() {\n\t\t\t\t\tif ( 1 == this.disable_input ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeDisableAutocomplete: function() {\n\t\t\t\t\tif ( 1 == this.disable_browser_autocomplete ) {\n\t\t\t\t\t\treturn 'autocomplete=\"off\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeInputLimit: function() {\n\t\t\t\t\tif ( 'characters' == this.input_limit_type && '' != jQuery.trim( this.input_limit ) ) {\n\t\t\t\t\t\treturn 'maxlength=\"' + this.input_limit + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tgetHelpText: function() {\n\t\t\t\t\tthis.help_text = jQuery( this.help_text ).html();\n\n\t\t\t\t\treturn ( 'undefined' != typeof this.help_text ) ? this.help_text.replace(/\"/g, \"&quot;\") : '';\n\t\t\t\t},\n\n\t\t\t\tmaybeRenderHelp: function() {\n\t\t\t\t\tvar check_text = '<p>' + this.help_text + '</p>';\n\t\t\t\t\tif ( 'undefined' != typeof this.help_text && 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\n\t\t\t\t\t\treturn '<span class=\"fa fa-info-circle nf-help\" data-text=\"' + this.getHelpText() + '\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderDescText: function() {\n\t\t\t\t\tif ( 'undefined' == typeof this.desc_text ) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\tvar check_text = '<p>' + this.desc_text + '</p>';\n\t\t\t\t\tif ( 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\n\t\t\t\t\t\treturn '<div class=\"nf-field-description\">' + this.desc_text + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .nf-element': 'fieldChange',\n\t\t\t'keyup .nf-element': 'fieldKeyup',\n\t\t\t'click .nf-element': 'fieldClick',\n\t\t\t'click .extra': 'extraClick',\n\t\t\t'blur .nf-element': 'fieldBlur'\n\t\t},\n\n\t\tfieldChange: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tvar response = nfRadio.channel( 'nfAdmin' ).request( 'change:field', el, this.model );\n\t\t},\n\n\t\tfieldKeyup: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t},\n\n\t\tfieldClick: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:field', el, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:field', el, this.model );\n\t\t},\n\n\t\textraClick: function( e ) {\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:extra', e, this.model );\n\t\t},\n\n\t\tfieldBlur: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'blur:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'blur:field', el, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'blur:field', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/beforeField',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-field-before'\n    });\n\n    return view;\n} );\n","define( 'views/fieldErrorItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#nf-tmpl-field-error',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/fieldErrorCollection',['views/fieldErrorItem'], function( fieldErrorItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: \"nf-errors\",\n\t\tchildView: fieldErrorItem\n\t});\n\n\treturn view;\n} );\n","define( 'views/inputLimit',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-field-input-limit',\n\n        initialize: function() {\n        \tthis.listenTo( nfRadio.channel( 'field-' + this.model.get( 'id' ) ), 'keyup:field', this.updateCount );\n        \tthis.count = this.model.get( 'input_limit' );\n        \tthis.render();\n        },\n\n        updateCount: function( el, model ) {\n            var value = jQuery( el ).val();\n            var regex = /\\s+/gi;\n            var words = value.trim().replace(regex, ' ').split(' ');\n            var wordCount = words.length;\n            var charCount = value.length;\n\n            if ( 'char' == this.model.get( 'input_limit_type' ) ) {\n                jQuery( el ).attr( 'maxlength', this.model.get( 'input_limit' ) );\n                this.count = this.model.get( 'input_limit' ) - charCount;\n            } else {\n                this.count = this.model.get( 'input_limit' ) - wordCount;\n                var limit = this.model.get( 'input_limit' );\n                if( wordCount > limit ){\n                    jQuery( el ).val( words.slice( 0, limit).join( ' ' ) );\n                }\n            }\n\n        \tthis.render();\n        },\n\n        templateHelpers: function() {\n        \tvar that = this;\n        \treturn {\n        \t\tcurrentCount: function() {\n        \t\t\treturn that.count;\n        \t\t}\n        \t}\n        }\n\n    });\n\n    return view;\n} );\n","define( 'views/afterField',['views/fieldErrorCollection', 'views/inputLimit'], function( fieldErrorCollection, InputLimitView ) {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-field-after',\n\n        initialize: function() {\n        \t// this.model.on( 'change:reRender', this.maybeRender, this );\n    \t\tthis.model.on( 'change:errors', this.changeError, this );\n        },\n\n        onRender: function() {\n        \t/*\n        \t * If we have an error, render our error view.\n        \t * TODO: Perhaps move to a controller?\n        \t */\n        \tvar errorEl = jQuery( this.el ).children( '.nf-error-wrap' );\n    \t\tthis.errorCollectionView = new fieldErrorCollection( { el: errorEl, collection: this.model.get( 'errors' ), thisModel: this.model } );\n        \n    \t\t/*\n    \t\t * If we have an input limit set, render the view that contains our counter\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\n    \t\t */\n    \t\tif ( 'undefined' != typeof this.model.get( 'input_limit' ) && '' != jQuery.trim( this.model.get( 'input_limit' ) ) ){\n    \t\t\tvar inputLimitEl = jQuery( this.el ).children( '.nf-input-limit');\n    \t\t\tthis.inputLimitView = new InputLimitView( { el: inputLimitEl, model: this.model } );\n    \t\t}\n        },\n\n        changeError: function() {\n\t\t\tif ( 0 == this.model.get( 'errors' ).models.length ) {\n\t\t\t\tthis.model.removeWrapperClass( 'nf-error' );\n\t\t\t} else {\n\t\t\t\tthis.model.addWrapperClass( 'nf-error' );\n\t\t\t}\n\n\t\t\tthis.errorCollectionView.render();\n\t\t},\n\n    });\n\n    return view;\n} );\n","define( 'views/fieldLayout',['views/fieldItem', 'views/beforeField', 'views/afterField'], function( fieldItem, beforeField, afterField ) {\n\n    var view = Marionette.LayoutView.extend({\n        tagName: \"nf-field\",\n        template: \"#nf-tmpl-field-layout\",\n\n        regions: {\n            beforeField: \".nf-before-field\",\n            field: \".nf-field\",\n            afterField: \".nf-after-field\",\n        },\n\n        initialize: function() {\n            this.model.on( 'change:visible', this.render, this );\n        },\n\n        onShow: function() {\n            // this.beforeField.show( new beforeField( { model: this.model } ) );\n            // this.field.show( new fieldItem( { model: this.model } ) );\n            // this.afterField.show( new afterField( { model: this.model } ) );\n        },\n\n        onRender: function() {\n            if ( this.model.get( 'visible' ) ) {\n                this.beforeField.show( new beforeField( { model: this.model } ) );\n                this.field.show( new fieldItem( { model: this.model } ) );\n                this.afterField.show( new afterField( { model: this.model } ) );\n            } else {\n                this.beforeField.empty();\n                this.field.empty();\n                this.afterField.empty();\n            }\n        },\n\n        templateHelpers: function() {\n            return {\n                renderContainerClass: function() {\n                    var containerClass = ' label-' + this.label_pos + ' ';\n                    // If we have a description position, add that to our container.\n                    if ( 'undefined' != typeof this.desc_pos ) {\n                        containerClass += 'desc-' + this.desc_pos + ' ';\n                    }\n                    // if we have a container_class field setting, add that to our container.\n                    if ( 'undefined' != typeof this.container_class && 0 < jQuery.trim( this.container_class ).length ) {\n                        containerClass += this.container_class + ' ';\n                    }\n\n                    return containerClass;\n                }\n            }\n        }\n\n    });\n\n    return view;\n} );\n\n","/**\n * Return views that might be used in extensions.\n * These are un-instantiated views.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/loadViews',['views/fieldItem', 'views/fieldLayout'], function( fieldItemView, fieldLayoutView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Reply to requests for our field item view.\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldItem', this.getFieldItem );\n\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldLayout', this.getFieldLayout );\n\t\t},\n\n\t\tgetFieldItem: function( model ) {\n\t\t\treturn fieldItemView;\n\t\t},\n\n\t\tgetFieldLayout: function() {\n\t\t\treturn fieldLayoutView;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * If a form has at least one field error, we should disable the submit button and add a form error.\n * If a form had errors, but all the field errors have been removed, we should remove the form error.\n *\n * @since 3.0\n */\ndefine('controllers/formErrors',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Listen for error messages being added to and removed from fields.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:error', this.addError );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'remove:error', this.removeError );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get form errors\n\t\t\t */\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\n\t\t},\n\n\t\taddError: function( fieldModel, errorID, errorMsg ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\n\t\t\t/*\n\t\t\t * We store our errors in this object by field ID so that we don't have to loop over all our fields when we're testing for errors.\n\t\t\t * They are stored as an object within an array, using the field ID as the key.\n\t\t\t *\n\t\t\t * If we haven't setup an array item for this field, set it as an object.\n\t\t\t */\n\t\t\tif ( 'undefined' == typeof formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] ) {\n\t\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] = {};\n\t\t\t}\n\t\t\t// Add an error to our tracking array\n\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ][ errorID ] = errorMsg;\n\t\t\t/*\n\t\t\t * We have at least one field error, so submmission should be prevented.\n\t\t\t * Add a form error.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'add:error', 'field-errors', 'Please correct errors before submitting this form.' );\n\t\t},\n\n\t\tremoveError: function( fieldModel, errorID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\n\t\t\t// Remove this error ID from our tracking array.\n\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] = _.omit( formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ], errorID );\n\t\t\t/*\n\t\t\t * If we don't have any more error IDs on this field, then we need to remove this field from the array.\n\t\t\t *\n\t\t\t * Then, if the fieldErrors tracking array has a length of 0, we remove our form error, because all field errors have been dealt with.\n\t\t\t */\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] ) ) {\n\t\t\t\tdelete formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ];\n\t\t\t}\n\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' ) ) ) {\n\t\t\t\t// Remove our form error.\n\t\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'remove:error', 'field-errors' );\n\t\t\t}\n\t\t},\n\n\t\tgetFormErrors: function( formID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\n\t\t\tvar errors = false;\n\t\t\t\n\t\t\tif ( formModel ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have any errors on our form model.\n\t\t\t\t */\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\n\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t\treturn errors;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles submission of our form.\n */\ndefine('controllers/submit',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'init:model', this.registerSubmitHandler );\n\t\t},\n\n\t\t/**\n\t\t * Register the submission handler function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.model \tformModel\n\t\t * @return void\n\t\t */\n\t\tregisterSubmitHandler: function( formModel ) {\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).reply( 'submit', this.submit );\n\t\t},\n\n\t\t/**\n\t\t * Handles the actual submission of our form.\n\t\t * When we submit:\n\t\t *\n\t\t * 1) Send out a message saying that we're about to begin form submission.\n\t\t * 2) Check the form for errors\n\t\t * 3) Submit the data\n\t\t * 4) Send out a message with our response\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.model \tformModel\n\t\t * @return void\n\t\t */\n\t\tsubmit: function( formModel ) {\n\n\t\t\t/*\n\t\t\t * Send out a radio message saying that we're about to begin submitting.\n\t\t\t * First we send on the generic forms channel, and then on the form-specific channel.\n\t\t\t */\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'before:submit', formModel );\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'before:submit', formModel );\n\n\t\t\tvar submit = nfRadio.channel( 'form-' + formModel.get( 'id' ) ).request( 'maybe:submit', formModel );\n\n\t\t\tif ( false == submit ) {\n\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:cancel', formModel );\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:cancel', formModel );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Make sure we don't have any form errors before we submit.\n\t\t\t * Return false if we do.\n\t\t\t */\n\t\t\tif ( 0 != _.size( formModel.get( 'fieldErrors' ) ) ) {\n\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:failed', formModel );\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:failed', formModel );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Actually submit our form, and send out a message with our response.\n\t\t\t */\n\n \t\t\tvar formID = formModel.get( 'id' );\n\t\t\tvar fields = [];\n\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\n\t\t\t\tvar fieldDataDefaults = { value:field.get( 'value' ), id:field.get( 'id' ) };\n\t\t\t\tvar fieldData = nfRadio.channel( field.get( 'type' ) ).request( 'get:submitData', fieldDataDefaults, field ) || fieldDataDefaults;\n\t\t\t\tfields.push( fieldData );\n\t\t\t} );\n\t\t\tvar extra = formModel.get( 'extra' );\n\t\t\tvar settings = formModel.get( 'settings' );\n\t\t\tdelete settings.fieldContentsData;\n\t\t\tvar formData = JSON.stringify( { id: formID, fields: fields, settings: settings, extra: extra } );\n\t\t\tvar data = {\n\t\t\t\t'action': 'nf_ajax_submit',\n\t\t\t\t'security': nfFrontEnd.ajaxNonce,\n\t\t\t\t'formData': formData\n\t\t\t}\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery.ajax({\n\t\t\t    url: nfFrontEnd.adminAjax,\n\t\t\t    type: 'POST',\n\t\t\t    data: data,\n\t\t\t    cache: false,\n\t\t\t   \tsuccess: function( data, textStatus, jqXHR ) {\n\t\t\t   \t\tvar response = jQuery.parseJSON( data );\n\t\t\t        nfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\n\t\t\t    \tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR )\n\t\t\t    },\n\t\t\t    error: function( jqXHR, textStatus, errorThrown ) {\n\t\t\t        // Handle errors here\n\t\t\t        console.log('ERRORS: ' + textStatus);\n\t\t\t        // STOP LOADING SPINNER\n\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\n\t\t\t    }\n\t\t\t});\n\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define(\n\t'controllers/loadControllers',[\n\t\t'controllers/formData',\n\t\t'controllers/fieldError',\n\t\t'controllers/changeField',\n\t\t'controllers/changeEmail',\n\t\t'controllers/fieldCheckbox',\n\t\t'controllers/fieldCheckboxList',\n\t\t'controllers/fieldRadio',\n\t\t'controllers/fieldNumber',\n\t\t'controllers/mirrorField',\n\t\t'controllers/confirmField',\n\t\t'controllers/updateFieldModel',\n\t\t'controllers/submitButton',\n\t\t'controllers/submitDebug',\n\t\t'controllers/getFormErrors',\n\t\t'controllers/selectFile',\n\t\t'controllers/validateRequired',\n\t\t'controllers/submitError',\n\t\t'controllers/actionRedirect',\n\t\t'controllers/actionSuccess',\n\t\t'controllers/fieldSelect',\n\t\t'controllers/coreSubmitResponse',\n\t\t'controllers/fieldProduct',\n\t\t'controllers/fieldTotal',\n\t\t'controllers/fieldQuantity',\n\t\t'controllers/calculations',\n\t\t'controllers/fieldDate',\n\t\t'controllers/fieldRecaptcha',\n\t\t'controllers/helpText',\n\t\t'controllers/fieldTextareaRTE',\n\t\t'controllers/fieldStarRating',\n\t\t'controllers/fieldTerms',\n\t\t'controllers/fieldContentsFilters',\n\t\t'controllers/loadViews',\n\t\t'controllers/formErrors',\n\t\t'controllers/submit'\n\t],\n\tfunction(\n\t\tFormData,\n\t\tFieldError,\n\t\tChangeField,\n\t\tChangeEmail,\n\t\tFieldCheckbox,\n\t\tFieldCheckboxList,\n\t\tFieldRadio,\n\t\tFieldNumber,\n\t\tMirrorField,\n\t\tConfirmField,\n\t\tUpdateFieldModel,\n\t\tSubmitButton,\n\t\tSubmitDebug,\n\t\tGetFormErrors,\n\t\tSelectFile,\n\t\tValidateRequired,\n\t\tSubmitError,\n\t\tActionRedirect,\n\t\tActionSuccess,\n\t\tFieldSelect,\n\t\tCoreSubmitResponse,\n\t\tFieldProduct,\n\t\tFieldTotal,\n\t\tFieldQuantity,\n\t\tCalculations,\n\t\tFieldDate,\n\t\tFieldRecaptcha,\n\t\tHelpText,\n\t\tFieldTextareaRTE,\n\t\tFieldStarRating,\n\t\tFieldTerms,\n\t\tFieldContentsFilters,\n\t\tLoadViews,\n\t\tFormErrors,\n\t\tSubmit\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\n\t\t\t\t/**\n\t\t\t\t * App Controllers\n\t\t\t\t */\n\t\t\t\tnew LoadViews();\n\t\t\t\tnew FormErrors();\n\t\t\t\tnew Submit();\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Field type controllers\n\t\t\t\t */\n\t\t\t\tnew FieldCheckbox();\n\t\t\t\tnew FieldCheckboxList();\n\t\t\t\tnew FieldRadio();\n\t\t\t\tnew FieldNumber();\n\t\t\t\tnew FieldSelect();\n\t\t\t\tnew FieldProduct();\n\t\t\t\tnew FieldTotal();\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldRecaptcha();\n\t\t\t\tnew HelpText();\n\t\t\t\tnew FieldTextareaRTE();\n\t\t\t\tnew FieldStarRating();\n\t\t\t\tnew FieldTerms();\n\t\t\t\tnew FieldContentsFilters();\n\t\t\t\t/**\n\t\t\t\t * Misc controllers\n\t\t\t\t */\n\t\t\t\tnew FieldError();\n\t\t\t\tnew ChangeField();\n\t\t\t\tnew ChangeEmail();\n\t\t\t\t\n\t\t\t\tnew MirrorField();\n\t\t\t\tnew ConfirmField();\n\t\t\t\tnew UpdateFieldModel();\n\t\t\t\tnew SubmitButton();\n\t\t\t\tnew SubmitDebug();\n\t\t\t\tnew GetFormErrors();\n\t\t\t\tnew SelectFile();\n\t\t\t\tnew ValidateRequired();\n\t\t\t\tnew SubmitError();\n\t\t\t\tnew ActionRedirect();\n\t\t\t\tnew ActionSuccess();\n\t\t\t\t\n\t\t\t\tnew CoreSubmitResponse();\n\t\t\t\tnew Calculations();\n\n\t\t\t\t/**\n\t\t\t\t * Data controllers\n\t\t\t\t */\n\t\t\t\tnew FieldDate();\n\t\t\t\tnew FormData();\n\t\t\t\t\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","define( 'views/beforeForm',[], function( ) {\n\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#nf-tmpl-before-form\"\n\t});\n\n\treturn view;\n} );\n","define( 'views/fieldCollection',['views/fieldLayout'], function( fieldLayout ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'nf-fields-wrap',\n\t\tchildView: fieldLayout\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/formErrorItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#nf-tmpl-form-error',\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/formErrorCollection',['views/formErrorItem'], function( formErrorItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: \"nf-errors\",\n\t\tchildView: formErrorItem\n\t});\n\n\treturn view;\n} );\n","define( 'views/honeyPot',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#nf-tmpl-form-hp',\n\n        events: {\n        \t'keyup .nf-field-hp': 'maybeError',\n            'change .nf-field-hp': 'maybeError'\n        },\n\n        maybeError: function( e ) {\n            /*\n             * If we have an empty honeyPot field, remove the honeypot form error.\n             * If we do not have an empty honeyPot field, add the honeypot form error.\n             */\n            if ( 0 == jQuery( e.target ).val().length ) {\n                nfRadio.channel( 'form-' + this.model.get( 'id' ) ).request( 'remove:error', 'honeyPot' );\n            } else {\n                nfRadio.channel( 'form-' + this.model.get( 'id' ) ).request( 'add:error', 'honeyPot', 'Honeypot Error' );\n            }\n        }\n    });\n\n    return view;\n} );\n","define( 'views/afterFields',['views/formErrorCollection', 'views/honeyPot'], function( FormErrors, HoneyPot ) {\n\n    var view = Marionette.LayoutView.extend({\n        tagName: \"nf-section\",\n        template: \"#nf-tmpl-after-fields\",\n\n\t\tregions: {\n\t\t\terrors: \".nf-form-errors\",\n            hp: \".nf-form-hp\"\n\t\t},\n\n        onShow: function() {\n        \tthis.errors.show( new FormErrors( { collection: this.model.get( 'errors' ) } ) );\n            this.hp.show( new HoneyPot( { model: this.model } ) );\n        }\n\n    });\n\n    return view;\n} );\n","define( 'views/beforeFields',[], function( ) {\n\n    var view = Marionette.ItemView.extend({\n        tagName: \"nf-section\",\n        template: \"#nf-tmpl-before-fields\",\n\n    });\n\n    return view;\n} );\n","define( 'views/formLayout',['views/fieldCollection','views/afterFields', 'views/beforeFields'], function( fieldCollectionView, afterFields, beforeFields ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#nf-tmpl-form-layout\",\n\n\t\tregions: {\n\t\t\tbeforeFields: \".nf-before-fields\",\n\t\t\tfields: \".nf-fields\",\n\t\t\tafterFields: \".nf-after-fields\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'form-' + this.model.get( 'id' ) ).reply( 'get:el', this.getEl, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.beforeFields.show( new beforeFields( { model: this.model } ) );\n\t\t\t\n\t\t\t/*\n\t\t\t * Set our fieldContentsData to our form setting 'fieldContentsData'\n\t\t\t */\n\t\t\tvar fieldContentsData = this.model.get( 'fieldContentsData' );\n\n\t\t\t/*\n\t\t\t * Set our default fieldContentsView.\n\t\t\t */\n\t\t\tvar fieldContentsView = fieldCollectionView;\n\t\t\t/*\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t */\n\n\t\t\tvar fieldContentsViewFilters = nfRadio.channel( 'fieldContents' ).request( 'get:viewFilters' );\n\t\t\tif ( 'undefined' != typeof fieldContentsData && 0 != fieldContentsViewFilters.length ) {\n\t\t\t\t/* \n\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t*/\n\t\t\t\tvar sortedArray = _.without( fieldContentsViewFilters, undefined );\n\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\tfieldContentsView = callback();\n\t\t\t}\n\t\t\t\n\t\t\tvar fieldContentsLoadFilters = nfRadio.channel( 'fieldContents' ).request( 'get:loadFilters' );\n\t\t\tif ( 'undefined' != typeof fieldContentsData && 0 != fieldContentsLoadFilters.length ) {\n\t\t\t\t/* \n\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t*/\n\t\t\t\tvar sortedArray = _.without( fieldContentsLoadFilters, undefined );\n\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\tfieldContentsData = callback( fieldContentsData, this.model );\n\t\t\t} else {\n\t\t\t\tfieldContentsData = this.options.fieldCollection;\n\t\t\t}\n\n\t\t\tthis.fields.show( new fieldContentsView( { collection: fieldContentsData } ) );\n\t\t\tthis.afterFields.show( new afterFields( { model: this.model } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n        templateHelpers: function () {\n            return {\n\n                renderClasses: function() {\n                    return '';\n                }\n\n            };\n        }\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/afterForm',[], function( ) {\n\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#nf-tmpl-after-form\",\n\t\t\n\t});\n\n\treturn view;\n} );\n","define( 'views/mainLayout',['views/beforeForm', 'views/formLayout', 'views/afterForm'], function( BeforeForm, FormLayout, AfterForm ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttemplate: '#nf-tmpl-layout',\n\n\t\tregions: {\n\t\t\tresponseMsg: '.nf-response-msg',\n\t\t\tbeforeForm: '.nf-before-form',\n\t\t\tformLayout: '.nf-form-layout',\n\t\t\tafterForm: '.nf-after-form'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.$el = jQuery( '#nf-form-' + this.model.id + '-cont' );\n\t\t\tthis.el = '#nf-form-' + this.model.id + '-cont';\n\n\t\t\tthis.render();\n\n\t\t\tthis.beforeForm.show( new BeforeForm( { model: this.model } ) );\n\t\t\tthis.formLayout.show( new FormLayout( { model: this.model, fieldCollection: this.options.fieldCollection } ) );\n\t\t\tthis.afterForm.show( new AfterForm( { model: this.model } ) );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// var formEl = jQuery( '#nf-form-' + this.model.get( 'id' ) );\n\t\t\t// console.log( formEl );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","jQuery( document ).ready( function( $ ) {\n\trequire( ['models/formCollection', 'models/formModel', 'models/fieldCollection', 'controllers/loadControllers', 'views/mainLayout'], function( formCollection, FormModel, FieldCollection, LoadControllers, mainLayout ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend({\n\t\t\tforms: {},\n\t\t\tinitialize: function( options ) {\n\n\t\t\t\t// Underscore one-liner for getting URL Parameters\n\t\t\t\tthis.urlParameters = _.object(_.compact(_.map(location.search.slice(1).split('&'), function(item) {  if (item) return item.split('='); })));\n\n\t\t\t\tif( 'undefined' != typeof this.urlParameters.nf_resume ) {\n\t\t\t\t\tthis.listenTo(nfRadio.channel('form-' + this.urlParameters.nf_resume), 'loaded', this.restart);\n\t\t\t\t}\n\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers' );\n\t\t\t},\n\t\t\t\n\t\t\tonStart: function() {\n\t\t\t\tvar formCollection = nfRadio.channel( 'app' ).request( 'get:forms' );\n\t\t\t\t_.each( formCollection.models, function( form, index ) {\n\t\t\t\t\tvar layoutView = new mainLayout( { model: form, fieldCollection: form.get( 'fields' ) } );\t\t\t\n\t\t\t\t\tnfRadio.channel( 'form' ).trigger( 'render:view', layoutView );\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\trestart: function( formModel ) {\n\t\t\t\tif( 'undefined' != typeof this.urlParameters.nf_resume ){\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\t'action': 'nf_ajax_submit',\n\t\t\t\t\t\t'security': nfFrontEnd.ajaxNonce,\n\t\t\t\t\t\t'nf_resume': this.urlParameters\n\t\t\t\t\t};\n\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'disable:submit' );\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'processingLabel' );\n\n\t\t\t\t\t// TODO: Refactor Duplication\n\t\t\t\t\tjQuery.ajax({\n\t\t\t\t\t\turl: nfFrontEnd.adminAjax,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\tsuccess: function( data, textStatus, jqXHR ) {\n\t\t\t\t\t   \t\tvar response = jQuery.parseJSON( data );\n\t\t\t\t\t        nfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\n\t\t\t\t\t    \tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\n\t\t\t\t\t    },\n\t\t\t\t\t    error: function( jqXHR, textStatus, errorThrown ) {\n\t\t\t\t\t        // Handle errors here\n\t\t\t\t\t        console.log('ERRORS: ' + textStatus);\n\t\t\t\t\t        // STOP LOADING SPINNER\n\t\t\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\n\t\t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\t\t\n\t} );\n} );\ndefine(\"main\", function(){});\n\n","}());"],"sourceRoot":"/source/"}